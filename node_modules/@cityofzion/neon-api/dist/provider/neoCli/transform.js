"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformClaims = exports.transformBalance = void 0;
const neon_core_1 = require("@cityofzion/neon-core");
function transformTx(tx) {
    return { index: tx.n, txid: tx.txid, value: tx.value };
}
function transformClaimable(c) {
    return {
        claim: c.unclaimed,
        txid: c.txid,
        index: c.n,
        value: c.value,
        start: c.start_height,
        end: c.end_height,
    };
}
function transformBalance({ net, balance, address, }) {
    var _a;
    const bal = new neon_core_1.wallet.Balance({
        net,
        address,
    });
    for (const assetBalance of balance) {
        if (assetBalance.amount === 0) {
            continue;
        }
        if (assetBalance.unspent.length > 0) {
            bal.addAsset(assetBalance.asset_symbol, {
                unspent: assetBalance.unspent.map(transformTx),
            });
        }
        else {
            bal.addToken((_a = assetBalance.asset_symbol) !== null && _a !== void 0 ? _a : assetBalance.asset, assetBalance.amount);
        }
    }
    return bal;
}
exports.transformBalance = transformBalance;
function transformClaims({ net, address, claims, }) {
    return new neon_core_1.wallet.Claims({
        net,
        address,
        claims: claims.map(transformClaimable),
    });
}
exports.transformClaims = transformClaims;
//# sourceMappingURL=transform.js.map