{"ast":null,"code":"const key = process.env.NFTPort_API_KEY;\n\nvar axios = require(\"axios\").default;\n\nexport const NFTPortPinJSONToIPFS = (name, description, url) => {\n  console.log(key);\n  var options = {\n    method: 'POST',\n    url: 'https://api.nftport.xyz/v0/metadata',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2'\n    },\n    data: {\n      name: name,\n      description: description,\n      file_url: url\n    }\n  };\n  return axios.request(options).then(function (response) {\n    console.log(response.data);\n    return {\n      success: true,\n      url: response.metadata_url\n    };\n  }).catch(function (error) {\n    console.error(error);\n    return {\n      success: false,\n      message: error.message\n    };\n  });\n}; // export const NFTPortFileUpload = (image) => {\n//   var options = {\n//     method: 'POST',\n//     url: 'https://api.nftport.xyz/v0/files',\n//     headers: {\n//       'Content-Type': 'multipart/form-data',\n//       Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2',\n//       'content-type': 'multipart/form-data; boundary=---011000010111000001101001'\n//     },\n//     data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n\\r\\n'\n//   };\n//   axios.request(options).then(function (response) {\n//     console.log(response.data);\n//     return {\n//       success: true,\n//       pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.ipfs_url\n//     };\n//   }).catch(function (error) {\n//     console.error(error);\n//     return {\n//       success: false,\n//       message: error.message,\n//     }\n//   });\n// }\n\n_c = NFTPortPinJSONToIPFS;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFTPortPinJSONToIPFS\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/nftport.js"],"names":["key","process","env","NFTPort_API_KEY","axios","require","default","NFTPortPinJSONToIPFS","name","description","url","console","log","options","method","headers","Authorization","data","file_url","request","then","response","success","metadata_url","catch","error","message"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA7B;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,GAApB,KAA4B;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACA,MAAIa,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZJ,IAAAA,GAAG,EAAE,qCAFO;AAGZK,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE;AAFR,KAHG;AAOZC,IAAAA,IAAI,EAAE;AACJT,MAAAA,IAAI,EAAEA,IADF;AAEJC,MAAAA,WAAW,EAAEA,WAFT;AAGJS,MAAAA,QAAQ,EAAER;AAHN;AAPM,GAAd;AAcA,SAAON,KAAK,CACTe,OADI,CACIN,OADJ,EACaO,IADb,CACkB,UAAUC,QAAV,EAAoB;AACzCV,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACJ,IAArB;AACA,WAAO;AACLK,MAAAA,OAAO,EAAE,IADJ;AAELZ,MAAAA,GAAG,EAAEW,QAAQ,CAACE;AAFT,KAAP;AAID,GAPI,EAOFC,KAPE,CAOI,UAAUC,KAAV,EAAiB;AAC1Bd,IAAAA,OAAO,CAACc,KAAR,CAAcA,KAAd;AACA,WAAO;AACLH,MAAAA,OAAO,EAAE,KADJ;AAELI,MAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,KAAP;AAID,GAbM,CAAP;AAeD,CA/BM,C,CAiCP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;KA5DanB,oB","sourcesContent":["const key = process.env.NFTPort_API_KEY;\r\n\r\nvar axios = require(\"axios\").default;\r\n\r\nexport const NFTPortPinJSONToIPFS = (name, description, url) => {\r\n  console.log(key);\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'https://api.nftport.xyz/v0/metadata',\r\n    headers: {\r\n      'Content-Type': 'application/json', \r\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2'\r\n    },\r\n    data: {\r\n      name: name,\r\n      description: description,\r\n      file_url: url,\r\n    }\r\n  }\r\n\r\n  return axios\r\n    .request(options).then(function (response) {\r\n      console.log(response.data);\r\n      return {\r\n        success: true,\r\n        url: response.metadata_url,\r\n      };\r\n    }).catch(function (error) {\r\n    console.error(error);\r\n    return {\r\n      success: false,\r\n      message: error.message,\r\n    }\r\n  });\r\n\r\n};\r\n\r\n// export const NFTPortFileUpload = (image) => {\r\n\r\n//   var options = {\r\n//     method: 'POST',\r\n//     url: 'https://api.nftport.xyz/v0/files',\r\n//     headers: {\r\n//       'Content-Type': 'multipart/form-data',\r\n//       Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2',\r\n//       'content-type': 'multipart/form-data; boundary=---011000010111000001101001'\r\n//     },\r\n//     data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n\\r\\n'\r\n//   };\r\n\r\n//   axios.request(options).then(function (response) {\r\n//     console.log(response.data);\r\n//     return {\r\n//       success: true,\r\n//       pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.ipfs_url\r\n//     };\r\n//   }).catch(function (error) {\r\n//     console.error(error);\r\n//     return {\r\n//       success: false,\r\n//       message: error.message,\r\n//     }\r\n//   });\r\n\r\n// }"]},"metadata":{},"sourceType":"module"}