{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masho\\\\OneDrive\\\\Desktop\\\\Blockchain\\\\Biconomy\\\\Projects\\\\NFT_minter\\\\src\\\\IPFSUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ImageUpload } from 'react-ipfs-uploader';\nimport { uploadedAsset } from './utils/file-upload.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UploadToIPFS = props => {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" NFT Asset Upload \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        setUrl: setImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"AssetUrl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), \" : \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: imageUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: uploadedAsset(imageUrl)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadToIPFS, \"y+qr5nv0m6SS5QmwMPtiSezmxMk=\");\n\n_c = UploadToIPFS;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadToIPFS\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/IPFSUpload.js"],"names":["React","useState","ImageUpload","uploadedAsset","UploadToIPFS","props","imageUrl","setImageUrl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,sBACI;AAAA,2BACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEM;AAArB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,sBAGsB;AACd,QAAA,IAAI,EAAED,QADQ;AAEd,QAAA,MAAM,EAAC,QAFO;AAGd,QAAA,GAAG,EAAC,qBAHU;AAAA,kBAKbH,aAAa,CAACG,QAAD;AALA;AAAA;AAAA;AAAA;AAAA,cAHtB;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAlBM;;GAAMF,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from 'react'\r\nimport { ImageUpload } from 'react-ipfs-uploader'\r\nimport { uploadedAsset } from './utils/file-upload.js'\r\n\r\nexport const UploadToIPFS = (props) => {\r\n    const [imageUrl, setImageUrl] = useState('')\r\n\r\n    return (\r\n        <div>\r\n        <>\r\n            <h2> NFT Asset Upload </h2>\r\n            <ImageUpload setUrl={setImageUrl} />\r\n            <b>AssetUrl</b> : <a\r\n                href={imageUrl}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n            >\r\n                {uploadedAsset(imageUrl)} \r\n            </a>\r\n        </>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}