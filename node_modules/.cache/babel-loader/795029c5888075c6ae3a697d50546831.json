{"ast":null,"code":"import Method from \"web3-core-method\";\nvar MethodFn = Method;\n/**\n * Private method to enable adding custom RPC calls to the web3 object. This\n * allows the addition of custom endpoints to the web3 object.\n */\n\nexport function patchEnableCustomRPC(web3) {\n  web3.eth.customRPC = function (opts) {\n    var newMethod = new MethodFn({\n      name: opts.name,\n      call: opts.call,\n      params: opts.params || 0,\n      inputFormatter: opts.inputFormatter || null,\n      outputFormatter: opts.outputFormatter || null\n    });\n    newMethod.attachToObject(this);\n    newMethod.setRequestManager(this._requestManager, this.accounts);\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AAUA,IAAMC,QAAQ,GAAQD,MAAtB;AAEA;;;;;AAIA,OAAM,SAAUE,oBAAV,CAA+BC,IAA/B,EAAwC;AAC5CA,MAAI,CAACC,GAAL,CAASC,SAAT,GAAqB,UAAUC,IAAV,EAA2B;AAC9C,QAAMC,SAAS,GAAG,IAAIN,QAAJ,CAAa;AAC7BO,UAAI,EAAEF,IAAI,CAACE,IADkB;AAE7BC,UAAI,EAAEH,IAAI,CAACG,IAFkB;AAG7BC,YAAM,EAAEJ,IAAI,CAACI,MAAL,IAAe,CAHM;AAI7BC,oBAAc,EAAEL,IAAI,CAACK,cAAL,IAAuB,IAJV;AAK7BC,qBAAe,EAAEN,IAAI,CAACM,eAAL,IAAwB;AALZ,KAAb,CAAlB;AAOAL,aAAS,CAACM,cAAV,CAAyB,IAAzB;AACAN,aAAS,CAACO,iBAAV,CAA4B,KAAKC,eAAjC,EAAkD,KAAKC,QAAvD;AACD,GAVD;AAWD","names":["Method","MethodFn","patchEnableCustomRPC","web3","eth","customRPC","opts","newMethod","name","call","params","inputFormatter","outputFormatter","attachToObject","setRequestManager","_requestManager","accounts"],"sourceRoot":"","sources":["../../../src/web3-adapter/customRPC.ts"],"sourcesContent":["import Method from \"web3-core-method\";\n\ninterface PatchParams {\n  name: string;\n  call: string;\n  params: [any];\n  inputFormatter: any;\n  outputFormatter: any;\n}\n\nconst MethodFn: any = Method;\n\n/**\n * Private method to enable adding custom RPC calls to the web3 object. This\n * allows the addition of custom endpoints to the web3 object.\n */\nexport function patchEnableCustomRPC(web3: any): void {\n  web3.eth.customRPC = function (opts: PatchParams) {\n    const newMethod = new MethodFn({\n      name: opts.name,\n      call: opts.call,\n      params: opts.params || 0,\n      inputFormatter: opts.inputFormatter || null,\n      outputFormatter: opts.outputFormatter || null,\n    });\n    newMethod.attachToObject(this);\n    newMethod.setRequestManager(this._requestManager, this.accounts);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}