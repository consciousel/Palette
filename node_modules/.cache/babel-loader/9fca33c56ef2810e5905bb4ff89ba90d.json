{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useRef } from 'react'; // Define function to return the url of the uploaded image\n\nexport function uploadedAsset(imageUrl) {\n  _s();\n\n  console.log(imageUrl);\n  const ref = useRef({\n    assetUrl: \"\",\n    urlOfLastUpload: \"\"\n  }); // Record image url after upload\n\n  if (!imageUrl === \"\") {\n    ref.current.urlOfLastUpload = imageUrl;\n  } // Get url of last uploaded image\n\n\n  if (imageUrl === \"\") {\n    ref.current.assetUrl = urlOfLastUpload;\n  } else {\n    ref.current.assetUrl = imageUrl;\n  }\n\n  return assetUrl;\n}\n\n_s(uploadedAsset, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/file-upload.js"],"names":["React","useRef","uploadedAsset","imageUrl","console","log","ref","assetUrl","urlOfLastUpload","current"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B,C,CAEA;;AACA,OAAO,SAASC,aAAT,CAAwBC,QAAxB,EAAkC;AAAA;;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,GAAG,GAAGL,MAAM,CAAC;AACfM,IAAAA,QAAQ,EAAE,EADK;AAEfC,IAAAA,eAAe,EAAE;AAFF,GAAD,CAAlB,CAFqC,CAOrC;;AACA,MAAG,CAACL,QAAD,KAAc,EAAjB,EAAqB;AACjBG,IAAAA,GAAG,CAACG,OAAJ,CAAYD,eAAZ,GAA8BL,QAA9B;AACH,GAVoC,CAYrC;;;AACA,MAAGA,QAAQ,KAAK,EAAhB,EAAmB;AACfG,IAAAA,GAAG,CAACG,OAAJ,CAAYF,QAAZ,GAAuBC,eAAvB;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACG,OAAJ,CAAYF,QAAZ,GAAuBJ,QAAvB;AACH;;AAED,SAAOI,QAAP;AACH;;GApBeL,a","sourcesContent":["import React, { useRef } from 'react'\r\n\r\n// Define function to return the url of the uploaded image\r\nexport function uploadedAsset (imageUrl) {\r\n    console.log(imageUrl)\r\n    const ref = useRef({\r\n        assetUrl: \"\",\r\n        urlOfLastUpload: \"\"\r\n    })\r\n\r\n    // Record image url after upload\r\n    if(!imageUrl === \"\") {\r\n        ref.current.urlOfLastUpload = imageUrl\r\n    }    \r\n\r\n    // Get url of last uploaded image\r\n    if(imageUrl === \"\"){\r\n        ref.current.assetUrl = urlOfLastUpload\r\n    } else {\r\n        ref.current.assetUrl = imageUrl\r\n    }\r\n    \r\n    return assetUrl\r\n}"]},"metadata":{},"sourceType":"module"}