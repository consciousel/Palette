{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connection = void 0;\n\nconst _ = __importStar(require(\"lodash\"));\n\nconst events_1 = require(\"events\");\n\nconst url_1 = require(\"url\");\n\nconst ws_1 = __importDefault(require(\"ws\"));\n\nconst rangeset_1 = __importDefault(require(\"./rangeset\"));\n\nconst errors_1 = require(\"./errors\");\n\nconst backoff_1 = require(\"./backoff\");\n\nconst INTENTIONAL_DISCONNECT_CODE = 4000;\n\nfunction createWebSocket(url, config) {\n  const options = {};\n\n  if (config.proxy != null) {\n    const parsedURL = url_1.parse(url);\n    const parsedProxyURL = url_1.parse(config.proxy);\n\n    const proxyOverrides = _.omitBy({\n      secureEndpoint: parsedURL.protocol === 'wss:',\n      secureProxy: parsedProxyURL.protocol === 'https:',\n      auth: config.proxyAuthorization,\n      ca: config.trustedCertificates,\n      key: config.key,\n      passphrase: config.passphrase,\n      cert: config.certificate\n    }, value => value == null);\n\n    const proxyOptions = Object.assign({}, parsedProxyURL, proxyOverrides);\n    let HttpsProxyAgent;\n\n    try {\n      HttpsProxyAgent = require('https-proxy-agent');\n    } catch (error) {\n      throw new Error('\"proxy\" option is not supported in the browser');\n    }\n\n    options.agent = new HttpsProxyAgent(proxyOptions);\n  }\n\n  if (config.authorization != null) {\n    const base64 = Buffer.from(config.authorization).toString('base64');\n    options.headers = {\n      Authorization: `Basic ${base64}`\n    };\n  }\n\n  const optionsOverrides = _.omitBy({\n    ca: config.trustedCertificates,\n    key: config.key,\n    passphrase: config.passphrase,\n    cert: config.certificate\n  }, value => value == null);\n\n  const websocketOptions = Object.assign({}, options, optionsOverrides);\n  const websocket = new ws_1.default(url, null, websocketOptions);\n\n  if (typeof websocket.setMaxListeners === 'function') {\n    websocket.setMaxListeners(Infinity);\n  }\n\n  return websocket;\n}\n\nfunction websocketSendAsync(ws, message) {\n  return new Promise((resolve, reject) => {\n    ws.send(message, undefined, error => {\n      if (error) {\n        reject(new errors_1.DisconnectedError(error.message, error));\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nclass LedgerHistory {\n  constructor() {\n    this.feeBase = null;\n    this.feeRef = null;\n    this.latestVersion = null;\n    this.reserveBase = null;\n    this.availableVersions = new rangeset_1.default();\n  }\n\n  hasVersion(version) {\n    return this.availableVersions.containsValue(version);\n  }\n\n  hasVersions(lowVersion, highVersion) {\n    return this.availableVersions.containsRange(lowVersion, highVersion);\n  }\n\n  update(ledgerMessage) {\n    this.feeBase = ledgerMessage.fee_base;\n    this.feeRef = ledgerMessage.fee_ref;\n    this.latestVersion = ledgerMessage.ledger_index;\n    this.reserveBase = ledgerMessage.reserve_base;\n\n    if (ledgerMessage.validated_ledgers) {\n      this.availableVersions.reset();\n      this.availableVersions.parseAndAddRanges(ledgerMessage.validated_ledgers);\n    } else {\n      this.availableVersions.addValue(this.latestVersion);\n    }\n  }\n\n}\n\nclass ConnectionManager {\n  constructor() {\n    this.promisesAwaitingConnection = [];\n  }\n\n  resolveAllAwaiting() {\n    this.promisesAwaitingConnection.map(_ref => {\n      let {\n        resolve\n      } = _ref;\n      return resolve();\n    });\n    this.promisesAwaitingConnection = [];\n  }\n\n  rejectAllAwaiting(error) {\n    this.promisesAwaitingConnection.map(_ref2 => {\n      let {\n        reject\n      } = _ref2;\n      return reject(error);\n    });\n    this.promisesAwaitingConnection = [];\n  }\n\n  awaitConnection() {\n    return new Promise((resolve, reject) => {\n      this.promisesAwaitingConnection.push({\n        resolve,\n        reject\n      });\n    });\n  }\n\n}\n\nclass RequestManager {\n  constructor() {\n    this.nextId = 0;\n    this.promisesAwaitingResponse = [];\n  }\n\n  cancel(id) {\n    const {\n      timer\n    } = this.promisesAwaitingResponse[id];\n    clearTimeout(timer);\n    delete this.promisesAwaitingResponse[id];\n  }\n\n  resolve(id, data) {\n    const {\n      timer,\n      resolve\n    } = this.promisesAwaitingResponse[id];\n    clearTimeout(timer);\n    resolve(data);\n    delete this.promisesAwaitingResponse[id];\n  }\n\n  reject(id, error) {\n    const {\n      timer,\n      reject\n    } = this.promisesAwaitingResponse[id];\n    clearTimeout(timer);\n    reject(error);\n    delete this.promisesAwaitingResponse[id];\n  }\n\n  rejectAll(error) {\n    this.promisesAwaitingResponse.forEach((_, id) => {\n      this.reject(id, error);\n    });\n  }\n\n  createRequest(data, timeout) {\n    const newId = this.nextId++;\n    const newData = JSON.stringify(Object.assign(Object.assign({}, data), {\n      id: newId\n    }));\n    const timer = setTimeout(() => this.reject(newId, new errors_1.TimeoutError()), timeout);\n\n    if (timer.unref) {\n      timer.unref();\n    }\n\n    const newPromise = new Promise((resolve, reject) => {\n      this.promisesAwaitingResponse[newId] = {\n        resolve,\n        reject,\n        timer\n      };\n    });\n    return [newId, newData, newPromise];\n  }\n\n  handleResponse(data) {\n    if (!Number.isInteger(data.id) || data.id < 0) {\n      throw new errors_1.ResponseFormatError('valid id not found in response', data);\n    }\n\n    if (!this.promisesAwaitingResponse[data.id]) {\n      return;\n    }\n\n    if (data.status === 'error') {\n      const error = new errors_1.RippledError(data.error_message || data.error, data);\n      this.reject(data.id, error);\n      return;\n    }\n\n    if (data.status !== 'success') {\n      const error = new errors_1.ResponseFormatError(`unrecognized status: ${data.status}`, data);\n      this.reject(data.id, error);\n      return;\n    }\n\n    this.resolve(data.id, data.result);\n  }\n\n}\n\nclass Connection extends events_1.EventEmitter {\n  constructor(url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this._ws = null;\n    this._reconnectTimeoutID = null;\n    this._heartbeatIntervalID = null;\n    this._retryConnectionBackoff = new backoff_1.ExponentialBackoff({\n      min: 100,\n      max: 60 * 1000\n    });\n\n    this._trace = () => {};\n\n    this._ledger = new LedgerHistory();\n    this._requestManager = new RequestManager();\n    this._connectionManager = new ConnectionManager();\n\n    this._clearHeartbeatInterval = () => {\n      clearInterval(this._heartbeatIntervalID);\n    };\n\n    this._startHeartbeatInterval = () => {\n      this._clearHeartbeatInterval();\n\n      this._heartbeatIntervalID = setInterval(() => this._heartbeat(), this._config.timeout);\n    };\n\n    this._heartbeat = () => {\n      return this.request({\n        command: 'ping'\n      }).catch(() => {\n        return this.reconnect().catch(error => {\n          this.emit('error', 'reconnect', error.message, error);\n        });\n      });\n    };\n\n    this._onConnectionFailed = errorOrCode => {\n      if (this._ws) {\n        this._ws.removeAllListeners();\n\n        this._ws.on('error', () => {});\n\n        this._ws.close();\n\n        this._ws = null;\n      }\n\n      if (typeof errorOrCode === 'number') {\n        this._connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(`Connection failed with code ${errorOrCode}.`, {\n          code: errorOrCode\n        }));\n      } else if (errorOrCode && errorOrCode.message) {\n        this._connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(errorOrCode.message, errorOrCode));\n      } else {\n        this._connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError('Connection failed.'));\n      }\n    };\n\n    this.setMaxListeners(Infinity);\n    this._url = url;\n    this._config = Object.assign({\n      timeout: 20 * 1000,\n      connectionTimeout: 5 * 1000\n    }, options);\n\n    if (typeof options.trace === 'function') {\n      this._trace = options.trace;\n    } else if (options.trace === true) {\n      this._trace = console.log;\n    }\n  }\n\n  _onMessage(message) {\n    this._trace('receive', message);\n\n    let data;\n\n    try {\n      data = JSON.parse(message);\n    } catch (error) {\n      this.emit('error', 'badMessage', error.message, message);\n      return;\n    }\n\n    if (data.type == null && data.error) {\n      this.emit('error', data.error, data.error_message, data);\n      return;\n    }\n\n    if (data.type) {\n      this.emit(data.type, data);\n    }\n\n    if (data.type === 'ledgerClosed') {\n      this._ledger.update(data);\n    }\n\n    if (data.type === 'response') {\n      try {\n        this._requestManager.handleResponse(data);\n      } catch (error) {\n        this.emit('error', 'badMessage', error.message, message);\n      }\n    }\n  }\n\n  get _state() {\n    return this._ws ? this._ws.readyState : ws_1.default.CLOSED;\n  }\n\n  get _shouldBeConnected() {\n    return this._ws !== null;\n  }\n\n  _waitForReady() {\n    return new Promise((resolve, reject) => {\n      if (!this._shouldBeConnected) {\n        reject(new errors_1.NotConnectedError());\n      } else if (this._state === ws_1.default.OPEN) {\n        resolve();\n      } else {\n        this.once('connected', () => resolve());\n      }\n    });\n  }\n\n  _subscribeToLedger() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = yield this.request({\n        command: 'subscribe',\n        streams: ['ledger']\n      });\n\n      if (_.isEmpty(data) || !data.ledger_index) {\n        try {\n          yield this.disconnect();\n        } catch (error) {} finally {\n          throw new errors_1.RippledNotInitializedError('Rippled not initialized');\n        }\n      }\n\n      this._ledger.update(data);\n    });\n  }\n\n  isConnected() {\n    return this._state === ws_1.default.OPEN;\n  }\n\n  connect() {\n    if (this.isConnected()) {\n      return Promise.resolve();\n    }\n\n    if (this._state === ws_1.default.CONNECTING) {\n      return this._connectionManager.awaitConnection();\n    }\n\n    if (!this._url) {\n      return Promise.reject(new errors_1.ConnectionError('Cannot connect because no server was specified'));\n    }\n\n    if (this._ws) {\n      return Promise.reject(new errors_1.RippleError('Websocket connection never cleaned up.', {\n        state: this._state\n      }));\n    }\n\n    const connectionTimeoutID = setTimeout(() => {\n      this._onConnectionFailed(new errors_1.ConnectionError(`Error: connect() timed out after ${this._config.connectionTimeout} ms. ` + `If your internet connection is working, the rippled server may be blocked or inaccessible. ` + `You can also try setting the 'connectionTimeout' option in the RippleAPI constructor.`));\n    }, this._config.connectionTimeout);\n    this._ws = createWebSocket(this._url, this._config);\n\n    this._ws.on('error', this._onConnectionFailed);\n\n    this._ws.on('error', () => clearTimeout(connectionTimeoutID));\n\n    this._ws.on('close', this._onConnectionFailed);\n\n    this._ws.on('close', () => clearTimeout(connectionTimeoutID));\n\n    this._ws.once('open', () => __awaiter(this, void 0, void 0, function* () {\n      this._ws.removeAllListeners();\n\n      clearTimeout(connectionTimeoutID);\n\n      this._ws.on('message', message => this._onMessage(message));\n\n      this._ws.on('error', error => this.emit('error', 'websocket', error.message, error));\n\n      this._ws.once('close', code => {\n        this._clearHeartbeatInterval();\n\n        this._requestManager.rejectAll(new errors_1.DisconnectedError('websocket was closed'));\n\n        this._ws.removeAllListeners();\n\n        this._ws = null;\n        this.emit('disconnected', code);\n\n        if (code !== INTENTIONAL_DISCONNECT_CODE) {\n          const retryTimeout = this._retryConnectionBackoff.duration();\n\n          this._trace('reconnect', `Retrying connection in ${retryTimeout}ms.`);\n\n          this.emit('reconnecting', this._retryConnectionBackoff.attempts);\n          this._reconnectTimeoutID = setTimeout(() => {\n            this.reconnect().catch(error => {\n              this.emit('error', 'reconnect', error.message, error);\n            });\n          }, retryTimeout);\n        }\n      });\n\n      try {\n        this._retryConnectionBackoff.reset();\n\n        yield this._subscribeToLedger();\n\n        this._startHeartbeatInterval();\n\n        this._connectionManager.resolveAllAwaiting();\n\n        this.emit('connected');\n      } catch (error) {\n        this._connectionManager.rejectAllAwaiting(error);\n\n        yield this.disconnect().catch(() => {});\n      }\n    }));\n\n    return this._connectionManager.awaitConnection();\n  }\n\n  disconnect() {\n    clearTimeout(this._reconnectTimeoutID);\n    this._reconnectTimeoutID = null;\n\n    if (this._state === ws_1.default.CLOSED || !this._ws) {\n      return Promise.resolve(undefined);\n    }\n\n    return new Promise(resolve => {\n      this._ws.once('close', code => resolve(code));\n\n      if (this._state !== ws_1.default.CLOSING) {\n        this._ws.close(INTENTIONAL_DISCONNECT_CODE);\n      }\n    });\n  }\n\n  reconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.emit('reconnect');\n      yield this.disconnect();\n      yield this.connect();\n    });\n  }\n\n  getFeeBase() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.feeBase;\n    });\n  }\n\n  getFeeRef() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.feeRef;\n    });\n  }\n\n  getLedgerVersion() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.latestVersion;\n    });\n  }\n\n  getReserveBase() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.reserveBase;\n    });\n  }\n\n  hasLedgerVersions(lowLedgerVersion, highLedgerVersion) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!highLedgerVersion) {\n        return this.hasLedgerVersion(lowLedgerVersion);\n      }\n\n      yield this._waitForReady();\n      return this._ledger.hasVersions(lowLedgerVersion, highLedgerVersion);\n    });\n  }\n\n  hasLedgerVersion(ledgerVersion) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.hasVersion(ledgerVersion);\n    });\n  }\n\n  request(request, timeout) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._shouldBeConnected) {\n        throw new errors_1.NotConnectedError();\n      }\n\n      const [id, message, responsePromise] = this._requestManager.createRequest(request, timeout || this._config.timeout);\n\n      this._trace('send', message);\n\n      websocketSendAsync(this._ws, message).catch(error => {\n        this._requestManager.reject(id, error);\n      });\n      return responsePromise;\n    });\n  }\n\n  getUrl() {\n    return this._url;\n  }\n\n}\n\nexports.Connection = Connection;","map":{"version":3,"mappings":"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","names":["INTENTIONAL_DISCONNECT_CODE","createWebSocket","url","config","options","proxy","parsedURL","url_1","parsedProxyURL","proxyOverrides","_","omitBy","secureEndpoint","protocol","secureProxy","auth","proxyAuthorization","ca","trustedCertificates","key","passphrase","cert","certificate","value","proxyOptions","Object","assign","HttpsProxyAgent","require","error","Error","agent","authorization","base64","Buffer","from","toString","headers","Authorization","optionsOverrides","websocketOptions","websocket","ws_1","setMaxListeners","Infinity","websocketSendAsync","ws","message","Promise","resolve","reject","send","undefined","errors_1","LedgerHistory","constructor","rangeset_1","hasVersion","version","availableVersions","containsValue","hasVersions","lowVersion","highVersion","containsRange","update","ledgerMessage","feeBase","fee_base","feeRef","fee_ref","latestVersion","ledger_index","reserveBase","reserve_base","validated_ledgers","reset","parseAndAddRanges","addValue","ConnectionManager","resolveAllAwaiting","promisesAwaitingConnection","map","rejectAllAwaiting","awaitConnection","push","RequestManager","cancel","id","timer","promisesAwaitingResponse","clearTimeout","data","rejectAll","forEach","createRequest","timeout","newId","nextId","newData","JSON","stringify","setTimeout","unref","newPromise","handleResponse","Number","isInteger","status","error_message","result","Connection","events_1","backoff_1","min","max","clearInterval","_heartbeatIntervalID","_clearHeartbeatInterval","setInterval","_heartbeat","_config","request","command","catch","reconnect","emit","errorOrCode","_ws","removeAllListeners","on","close","_connectionManager","code","_url","connectionTimeout","trace","_trace","console","log","_onMessage","parse","type","_ledger","_requestManager","_state","readyState","CLOSED","_shouldBeConnected","_waitForReady","OPEN","once","_subscribeToLedger","streams","isEmpty","disconnect","isConnected","connect","CONNECTING","state","connectionTimeoutID","_onConnectionFailed","__awaiter","retryTimeout","_retryConnectionBackoff","duration","attempts","_reconnectTimeoutID","_startHeartbeatInterval","CLOSING","getFeeBase","getFeeRef","getLedgerVersion","getReserveBase","hasLedgerVersions","lowLedgerVersion","highLedgerVersion","hasLedgerVersion","ledgerVersion","responsePromise","getUrl","exports"],"sourceRoot":"","sources":["../../../src/common/connection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}