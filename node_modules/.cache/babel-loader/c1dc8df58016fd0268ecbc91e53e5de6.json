{"ast":null,"code":"import { ipfsGet, ipfsUpload } from '@tatumio/tatum';\n/**\r\n * Gets data from the IPFS\r\n * @param id - IPFS CID of the file\r\n */\n\nconst ipfsId = await ipfsGet('QmXJJ6UF5WkF4WTJvsdhiA1etGwBLfpva7Vr9AudGMe3pj');\n/**\r\n * Upload file to the IPFS storage.\r\n * @param file - data buffer of the file. Content Type: multipart/form-data\r\n * @returns ipfsHash - IPFS hash of the file\r\n */\n\nexport const ipfsHash = await ipfsUpload('logo.jpg', 'fileName');","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/tatum.js"],"names":["ipfsGet","ipfsUpload","ipfsId","ipfsHash"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,UAAjB,QAAkC,gBAAlC;AACA;AACA;AACA;AACA;;AACE,MAAMC,MAAM,GAAG,MAAMF,OAAO,CAAC,gDAAD,CAA5B;AAEF;AACA;AACA;AACA;AACA;;AACE,OAAO,MAAMG,QAAQ,GAAG,MAAMF,UAAU,CAAC,UAAD,EAAa,UAAb,CAAjC","sourcesContent":["import {ipfsGet, ipfsUpload} from '@tatumio/tatum';\r\n/**\r\n * Gets data from the IPFS\r\n * @param id - IPFS CID of the file\r\n */\r\n  const ipfsId = await ipfsGet('QmXJJ6UF5WkF4WTJvsdhiA1etGwBLfpva7Vr9AudGMe3pj');\r\n \r\n/**\r\n * Upload file to the IPFS storage.\r\n * @param file - data buffer of the file. Content Type: multipart/form-data\r\n * @returns ipfsHash - IPFS hash of the file\r\n */\r\n  export const ipfsHash = await ipfsUpload('logo.jpg', 'fileName');"]},"metadata":{},"sourceType":"module"}