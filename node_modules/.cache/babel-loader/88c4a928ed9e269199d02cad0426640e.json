{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmartContractAbi = void 0;\n\nconst errors_1 = require(\"../errors\");\n\nconst testutils_1 = require(\"../testutils\");\n\nconst utils_1 = require(\"../utils\");\n\nconst function_1 = require(\"./function\");\n\nclass SmartContractAbi {\n  constructor(registry, implementsInterfaces) {\n    this.interfaces = [];\n    this.interfaces.push(...registry.getInterfaces(implementsInterfaces));\n  }\n\n  static fromAbiPath(abiPath) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let abiRegistry = yield testutils_1.loadAbiRegistry([abiPath]);\n      let interfaceNames = abiRegistry.interfaces.map(iface => iface.name);\n      return new SmartContractAbi(abiRegistry, interfaceNames);\n    });\n  }\n\n  getAllEndpoints() {\n    let endpoints = [];\n\n    for (const iface of this.interfaces) {\n      endpoints.push(...iface.endpoints);\n    }\n\n    return endpoints;\n  }\n\n  getEndpoint(name) {\n    if (name instanceof function_1.ContractFunction) {\n      name = name.name;\n    }\n\n    let result = this.getAllEndpoints().find(item => item.name === name);\n    utils_1.guardValueIsSet(\"result\", result);\n    return result;\n  }\n\n  getConstructorDefinition() {\n    let constructors = [];\n\n    for (const iface of this.interfaces) {\n      let constructor_definition = iface.getConstructorDefinition();\n\n      if (constructor_definition !== null) {\n        constructors.push(constructor_definition);\n      }\n    }\n\n    switch (constructors.length) {\n      case 0:\n        return null;\n\n      case 1:\n        return constructors[0];\n\n      default:\n        throw new errors_1.ErrInvariantFailed(`Found more than 1 constructor (found ${constructors.length})`);\n    }\n  }\n\n}\n\nexports.SmartContractAbi = SmartContractAbi;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAIA,MAAaA,gBAAb,CAA6B;AAGzBC,cAAYC,QAAZ,EAAmCC,oBAAnC,EAAiE;AAFhD,sBAAkC,EAAlC;AAGb,SAAKC,UAAL,CAAgBC,IAAhB,CAAqB,GAAGH,QAAQ,CAACI,aAAT,CAAuBH,oBAAvB,CAAxB;AACH;;AAEuB,SAAXI,WAAW,CAACC,OAAD,EAAgB;;AACpC,UAAIC,WAAW,GAAG,MAAMC,4BAAgB,CAACF,OAAD,CAAhB,CAAxB;AACA,UAAIG,cAAc,GAAGF,WAAW,CAACL,UAAZ,CAAuBQ,GAAvB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,IAA1C,CAArB;AACA,aAAO,IAAId,gBAAJ,CAAqBS,WAArB,EAAkCE,cAAlC,CAAP;AACH;AAAA;;AAEDI,iBAAe;AACX,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAK,MAAMH,KAAX,IAAoB,KAAKT,UAAzB,EAAqC;AACjCY,eAAS,CAACX,IAAV,CAAe,GAAGQ,KAAK,CAACG,SAAxB;AACH;;AAED,WAAOA,SAAP;AACH;;AAEDC,aAAW,CAACH,IAAD,EAAgC;AACvC,QAAIA,IAAI,YAAYI,2BAApB,EAAsC;AAClCJ,UAAI,GAAGA,IAAI,CAACA,IAAZ;AACH;;AACD,QAAIK,MAAM,GAAG,KAAKJ,eAAL,GAAuBK,IAAvB,CAA4BC,IAAI,IAAIA,IAAI,CAACP,IAAL,KAAcA,IAAlD,CAAb;AACAQ,4BAAgB,QAAhB,EAA0BH,MAA1B;AACA,WAAOA,MAAP;AACH;;AAEDI,0BAAwB;AACpB,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,MAAMX,KAAX,IAAoB,KAAKT,UAAzB,EAAqC;AACjC,UAAIqB,sBAAsB,GAAGZ,KAAK,CAACU,wBAAN,EAA7B;;AACA,UAAIE,sBAAsB,KAAK,IAA/B,EAAqC;AACjCD,oBAAY,CAACnB,IAAb,CAAkBoB,sBAAlB;AACH;AACJ;;AACD,YAAQD,YAAY,CAACE,MAArB;AACI,WAAK,CAAL;AACI,eAAO,IAAP;;AACJ,WAAK,CAAL;AACI,eAAOF,YAAY,CAAC,CAAD,CAAnB;;AACJ;AACI,cAAM,IAAIG,2BAAJ,CAAuB,wCAAwCH,YAAY,CAACE,MAAM,GAAlF,CAAN;AANR;AAQH;;AAhDwB;;AAA7BE","names":["SmartContractAbi","constructor","registry","implementsInterfaces","interfaces","push","getInterfaces","fromAbiPath","abiPath","abiRegistry","testutils_1","interfaceNames","map","iface","name","getAllEndpoints","endpoints","getEndpoint","function_1","result","find","item","utils_1","getConstructorDefinition","constructors","constructor_definition","length","errors_1","exports"],"sourceRoot":"","sources":["../../src/smartcontracts/abi.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}