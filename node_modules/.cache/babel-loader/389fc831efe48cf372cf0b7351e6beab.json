{"ast":null,"code":"const key = process.env.NFTPort_API_KEY;\n\nvar axios = require(\"axios\").default;\n\nexport const NFTPortPinJSONToIPFS = metadata => {\n  console.log(key);\n  var options = {\n    method: 'POST',\n    url: 'https://api.nftport.xyz/v0/metadata',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2',\n      'content-type': 'application/json'\n    },\n    data: metadata\n  };\n  return axios.request(options).then(function (response) {\n    console.log(response.data);\n    return {\n      success: true,\n      url: response.metadata_url\n    };\n  }).catch(function (error) {\n    console.error(error);\n    return {\n      success: false,\n      message: error.message\n    };\n  });\n};\n_c = NFTPortPinJSONToIPFS;\nexport const NFTPortFileUpload = image => {\n  var options = {\n    method: 'POST',\n    url: 'https://api.nftport.xyz/v0/files',\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2',\n      'content-type': 'multipart/form-data; boundary=---011000010111000001101001'\n    },\n    data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n\\r\\n'\n  };\n  axios.request(options).then(function (response) {\n    console.log(response.data);\n    return {\n      success: true,\n      pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.ipfs_url\n    };\n  }).catch(function (error) {\n    console.error(error);\n    return {\n      success: false,\n      message: error.message\n    };\n  });\n};\n_c2 = NFTPortFileUpload;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NFTPortPinJSONToIPFS\");\n$RefreshReg$(_c2, \"NFTPortFileUpload\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/nftport.js"],"names":["key","process","env","NFTPort_API_KEY","axios","require","default","NFTPortPinJSONToIPFS","metadata","console","log","options","method","url","headers","Authorization","data","request","then","response","success","metadata_url","catch","error","message","NFTPortFileUpload","image","pinataUrl","ipfs_url"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA7B;;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,IAAc;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACA,MAAIW,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,GAAG,EAAE,qCAFO;AAGZC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,sCAFR;AAGP,sBAAgB;AAHT,KAHG;AAQZC,IAAAA,IAAI,EAAER;AARM,GAAd;AAWA,SAAOJ,KAAK,CACTa,OADI,CACIN,OADJ,EACaO,IADb,CACkB,UAAUC,QAAV,EAAoB;AACzCV,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACH,IAArB;AACA,WAAO;AACLI,MAAAA,OAAO,EAAE,IADJ;AAELP,MAAAA,GAAG,EAAEM,QAAQ,CAACE;AAFT,KAAP;AAID,GAPI,EAOFC,KAPE,CAOI,UAAUC,KAAV,EAAiB;AAC1Bd,IAAAA,OAAO,CAACc,KAAR,CAAcA,KAAd;AACA,WAAO;AACLH,MAAAA,OAAO,EAAE,KADJ;AAELI,MAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,KAAP;AAID,GAbM,CAAP;AAeD,CA5BM;KAAMjB,oB;AA8Bb,OAAO,MAAMkB,iBAAiB,GAAIC,KAAD,IAAW;AAE1C,MAAIf,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,GAAG,EAAE,kCAFO;AAGZC,IAAAA,OAAO,EAAE;AACP,sBAAgB,qBADT;AAEPC,MAAAA,aAAa,EAAE,sCAFR;AAGP,sBAAgB;AAHT,KAHG;AAQZC,IAAAA,IAAI,EAAE;AARM,GAAd;AAWAZ,EAAAA,KAAK,CAACa,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC9CV,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACH,IAArB;AACA,WAAO;AACLI,MAAAA,OAAO,EAAE,IADJ;AAELO,MAAAA,SAAS,EAAE,uCAAuCR,QAAQ,CAACS;AAFtD,KAAP;AAID,GAND,EAMGN,KANH,CAMS,UAAUC,KAAV,EAAiB;AACxBd,IAAAA,OAAO,CAACc,KAAR,CAAcA,KAAd;AACA,WAAO;AACLH,MAAAA,OAAO,EAAE,KADJ;AAELI,MAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,KAAP;AAID,GAZD;AAcD,CA3BM;MAAMC,iB","sourcesContent":["const key = process.env.NFTPort_API_KEY;\r\n\r\nvar axios = require(\"axios\").default;\r\n\r\nexport const NFTPortPinJSONToIPFS = (metadata) => {\r\n  console.log(key);\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'https://api.nftport.xyz/v0/metadata',\r\n    headers: {\r\n      'Content-Type': 'application/json', \r\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2',\r\n      'content-type': 'application/json'\r\n    },\r\n    data: metadata,\r\n  }\r\n\r\n  return axios\r\n    .request(options).then(function (response) {\r\n      console.log(response.data);\r\n      return {\r\n        success: true,\r\n        url: response.metadata_url,\r\n      };\r\n    }).catch(function (error) {\r\n    console.error(error);\r\n    return {\r\n      success: false,\r\n      message: error.message,\r\n    }\r\n  });\r\n\r\n};\r\n\r\nexport const NFTPortFileUpload = (image) => {\r\n\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'https://api.nftport.xyz/v0/files',\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2',\r\n      'content-type': 'multipart/form-data; boundary=---011000010111000001101001'\r\n    },\r\n    data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n\\r\\n'\r\n  };\r\n\r\n  axios.request(options).then(function (response) {\r\n    console.log(response.data);\r\n    return {\r\n      success: true,\r\n      pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.ipfs_url\r\n    };\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n    return {\r\n      success: false,\r\n      message: error.message,\r\n    }\r\n  });\r\n\r\n}"]},"metadata":{},"sourceType":"module"}