{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Nonce = void 0;\n\nconst errors = __importStar(require(\"./errors\"));\n/**\n * The nonce, as an immutable object.\n */\n\n\nclass Nonce {\n  /**\n   * Creates a Nonce object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (Number.isNaN(value) || value < 0) {\n      throw new errors.ErrNonceInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a new Nonce object by incrementing the current one.\n   */\n\n\n  increment() {\n    return new Nonce(this.value + 1);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n  equals(other) {\n    if (!other) {\n      return false;\n    }\n\n    return this.value === other.value;\n  }\n\n}\n\nexports.Nonce = Nonce;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;;AAGA,MAAaA,KAAb,CAAkB;AAMd;;;AAGAC,cAAYC,KAAZ,EAAyB;AACrBA,SAAK,GAAGC,MAAM,CAACD,KAAD,CAAd;;AAEA,QAAIC,MAAM,CAACC,KAAP,CAAaF,KAAb,KAAuBA,KAAK,GAAG,CAAnC,EAAsC;AAClC,YAAM,IAAIG,MAAM,CAACC,eAAX,CAA2BJ,KAA3B,CAAN;AACH;;AAED,SAAKA,KAAL,GAAaA,KAAb;AACH;AAED;;;;;AAGAK,WAAS;AACL,WAAO,IAAIP,KAAJ,CAAU,KAAKE,KAAL,GAAa,CAAvB,CAAP;AACH;;AAEDM,SAAO;AACH,WAAO,KAAKN,KAAZ;AACH;;AAEDO,QAAM,CAACC,KAAD,EAAa;AACf,QAAI,CAACA,KAAL,EAAY;AACR,aAAO,KAAP;AACH;;AAED,WAAO,KAAKR,KAAL,KAAeQ,KAAK,CAACR,KAA5B;AACH;;AApCa;;AAAlBS","names":["Nonce","constructor","value","Number","isNaN","errors","ErrNonceInvalid","increment","valueOf","equals","other","exports"],"sourceRoot":"","sources":["../src/nonce.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}