{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypedEvent = void 0;\n/**\n * An event (a \"Subject\" in the context of the Observer pattern).\n * One or more {@link Listener} objects can register to this.\n *\n * Based on: https://basarat.gitbook.io/typescript/main-1/typed-event\n */\n\nclass TypedEvent {\n  constructor() {\n    this.listeners = [];\n    this.listenersOnce = [];\n  }\n  /**\n   * Registers a listener to this event.\n   */\n\n\n  on(listener) {\n    this.listeners.push(listener);\n    return {\n      dispose: () => this.off(listener)\n    };\n  }\n  /**\n   * Registers a one-time listener to this event.\n   */\n\n\n  once(listener) {\n    this.listenersOnce.push(listener);\n  }\n  /**\n   * Unregisters a listener from this event.\n   */\n\n\n  off(listener) {\n    var callbackIndex = this.listeners.indexOf(listener);\n\n    if (callbackIndex > -1) {\n      this.listeners.splice(callbackIndex, 1);\n    }\n  }\n  /**\n   * Emits an event (with a payload).\n   */\n\n\n  emit(event) {\n    // Notify all listeners\n    this.listeners.forEach(listener => listener(event)); // Notify (then clear) \"once\" listeners\n\n    this.listenersOnce.forEach(listener => listener(event));\n    this.listenersOnce = [];\n  }\n\n}\n\nexports.TypedEvent = TypedEvent;","map":{"version":3,"mappings":";;;;;;AASA;;;;;;;AAMA,MAAaA,UAAb,CAAuB;AAAvBC;AACY,qBAA2B,EAA3B;AACA,yBAA+B,EAA/B;AAwCX;AAtCG;;;;;AAGAC,IAAE,CAACC,QAAD,EAAsB;AACpB,SAAKC,SAAL,CAAeC,IAAf,CAAoBF,QAApB;AACA,WAAO;AACHG,aAAO,EAAE,MAAM,KAAKC,GAAL,CAASJ,QAAT;AADZ,KAAP;AAGH;AAED;;;;;AAGAK,MAAI,CAACL,QAAD,EAAsB;AACtB,SAAKM,aAAL,CAAmBJ,IAAnB,CAAwBF,QAAxB;AACH;AAED;;;;;AAGAI,KAAG,CAACJ,QAAD,EAAsB;AACrB,QAAIO,aAAa,GAAG,KAAKN,SAAL,CAAeO,OAAf,CAAuBR,QAAvB,CAApB;;AACA,QAAIO,aAAa,GAAG,CAAC,CAArB,EAAwB;AACpB,WAAKN,SAAL,CAAeQ,MAAf,CAAsBF,aAAtB,EAAqC,CAArC;AACH;AACJ;AAED;;;;;AAGAG,MAAI,CAACC,KAAD,EAAS;AACT;AACA,SAAKV,SAAL,CAAeW,OAAf,CAAwBZ,QAAD,IAAcA,QAAQ,CAACW,KAAD,CAA7C,EAFS,CAIT;;AACA,SAAKL,aAAL,CAAmBM,OAAnB,CAA4BZ,QAAD,IAAcA,QAAQ,CAACW,KAAD,CAAjD;AACA,SAAKL,aAAL,GAAqB,EAArB;AACH;;AAzCkB;;AAAvBO","names":["TypedEvent","constructor","on","listener","listeners","push","dispose","off","once","listenersOnce","callbackIndex","indexOf","splice","emit","event","forEach","exports"],"sourceRoot":"","sources":["../src/events.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}