{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractLogger = void 0;\n/**\n * Provides a simple interface in order to easily call or query the smart contract's methods.\n */\n\nclass ContractLogger {\n  synchronizedNetworkConfig(networkConfig) {\n    console.log(`Synchronized network config - chainID: ${networkConfig.ChainID.valueOf()}`);\n  }\n\n  transactionCreated(transaction) {\n    console.log(`Tx ${transaction.getHash()} created. Sending...`);\n  }\n\n  deployComplete(transaction, smartContractResults, smartContractAddress) {\n    logReturnMessages(transaction, smartContractResults);\n    console.log(`done. (address: ${smartContractAddress.bech32()} )`);\n  }\n\n  transactionSent(_transaction) {\n    console.log(`awaiting results...`);\n  }\n\n  transactionComplete(_result, _resultData, transaction, smartContractResults) {\n    logReturnMessages(transaction, smartContractResults);\n    console.log(`done.`);\n  }\n\n  queryCreated(_query) {\n    console.log(`Query created. Sending...`);\n  }\n\n  queryComplete(_result, _response) {\n    console.log(`done.`);\n  }\n\n}\n\nexports.ContractLogger = ContractLogger;\n\nfunction logReturnMessages(transaction, smartContractResults) {\n  let immediate = smartContractResults.getImmediate();\n  logSmartContractResultIfMessage(\"(immediate)\", transaction, immediate);\n  let resultingCalls = smartContractResults.getResultingCalls();\n\n  for (let i in resultingCalls) {\n    logSmartContractResultIfMessage(\"(resulting call)\", transaction, resultingCalls[i]);\n  }\n}\n\nfunction logSmartContractResultIfMessage(info, _transaction, smartContractResult) {\n  if (smartContractResult.returnMessage) {\n    console.log(`Return message ${info} message: ${smartContractResult.returnMessage}`);\n  }\n}","map":{"version":3,"mappings":";;;;;;AAEA;;;;AAGA,MAAaA,cAAb,CAA2B;AAEvBC,2BAAyB,CAACC,aAAD,EAA6B;AAClDC,WAAO,CAACC,GAAR,CAAY,0CAA0CF,aAAa,CAACG,OAAd,CAAsBC,OAAtB,EAA+B,EAArF;AACH;;AAEDC,oBAAkB,CAACC,WAAD,EAAyB;AACvCL,WAAO,CAACC,GAAR,CAAY,MAAMI,WAAW,CAACC,OAAZ,EAAqB,sBAAvC;AACH;;AAEDC,gBAAc,CAACF,WAAD,EAA2BG,oBAA3B,EAAuEC,oBAAvE,EAAoG;AAC9GC,qBAAiB,CAACL,WAAD,EAAcG,oBAAd,CAAjB;AACAR,WAAO,CAACC,GAAR,CAAY,mBAAmBQ,oBAAoB,CAACE,MAArB,EAA6B,IAA5D;AACH;;AAEDC,iBAAe,CAACC,YAAD,EAA0B;AACrCb,WAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAEDa,qBAAmB,CAACC,OAAD,EAAeC,WAAf,EAAoCX,WAApC,EAA8DG,oBAA9D,EAAwG;AACvHE,qBAAiB,CAACL,WAAD,EAAcG,oBAAd,CAAjB;AACAR,WAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAEDgB,cAAY,CAACC,MAAD,EAAc;AACtBlB,WAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;;AAEDkB,eAAa,CAACJ,OAAD,EAAeK,SAAf,EAAuC;AAChDpB,WAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AA9BsB;;AAA3BoB;;AAiCA,SAASX,iBAAT,CAA2BL,WAA3B,EAAqDG,oBAArD,EAA+F;AAC3F,MAAIc,SAAS,GAAGd,oBAAoB,CAACe,YAArB,EAAhB;AACAC,iCAA+B,CAAC,aAAD,EAAgBnB,WAAhB,EAA6BiB,SAA7B,CAA/B;AAEA,MAAIG,cAAc,GAAGjB,oBAAoB,CAACkB,iBAArB,EAArB;;AACA,OAAK,IAAIC,CAAT,IAAcF,cAAd,EAA8B;AAC1BD,mCAA+B,CAAC,kBAAD,EAAqBnB,WAArB,EAAkCoB,cAAc,CAACE,CAAD,CAAhD,CAA/B;AACH;AACJ;;AAED,SAASH,+BAAT,CAAyCI,IAAzC,EAAuDf,YAAvD,EAAkFgB,mBAAlF,EAAkH;AAC9G,MAAIA,mBAAmB,CAACC,aAAxB,EAAuC;AACnC9B,WAAO,CAACC,GAAR,CAAY,kBAAkB2B,IAAI,aAAaC,mBAAmB,CAACC,aAAa,EAAhF;AACH;AACJ","names":["ContractLogger","synchronizedNetworkConfig","networkConfig","console","log","ChainID","valueOf","transactionCreated","transaction","getHash","deployComplete","smartContractResults","smartContractAddress","logReturnMessages","bech32","transactionSent","_transaction","transactionComplete","_result","_resultData","queryCreated","_query","queryComplete","_response","exports","immediate","getImmediate","logSmartContractResultIfMessage","resultingCalls","getResultingCalls","i","info","smartContractResult","returnMessage"],"sourceRoot":"","sources":["../../../src/smartcontracts/wrapper/contractLogger.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}