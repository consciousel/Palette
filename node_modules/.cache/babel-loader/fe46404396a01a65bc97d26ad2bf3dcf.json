{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\nexport var MATCHES = 'matches';\nexport function matches(value, pattern, modifiers) {\n  return typeof value === 'string' && matchesValidator(value, pattern, modifiers);\n}\nexport function Matches(pattern, modifiersOrAnnotationOptions, validationOptions) {\n  var modifiers;\n\n  if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n    validationOptions = modifiersOrAnnotationOptions;\n  } else {\n    modifiers = modifiersOrAnnotationOptions;\n  }\n\n  return ValidateBy({\n    name: MATCHES,\n    constraints: [pattern, modifiers],\n    validator: {\n      validate: function (value, args) {\n        return matches(value, args.constraints[0], args.constraints[1]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix, args) {\n        return eachPrefix + '$property must match $constraint1 regular expression';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAhB;AAQP,OAAM,SAAUC,OAAV,CAAkBC,KAAlB,EAAiCC,OAAjC,EAA2DC,SAA3D,EAA6E;AACjF,SAAO,OAAOF,KAAP,KAAiB,QAAjB,IAA6BH,gBAAgB,CAACG,KAAD,EAASC,OAAT,EAAqCC,SAArC,CAApD;AACD;AAQD,OAAM,SAAUC,OAAV,CACJF,OADI,EAEJG,4BAFI,EAGJC,iBAHI,EAGiC;AAErC,MAAIH,SAAJ;;AACA,MAAIE,4BAA4B,IAAIA,4BAA4B,YAAYE,MAAxE,IAAkF,CAACD,iBAAvF,EAA0G;AACxGA,qBAAiB,GAAGD,4BAApB;AACD,GAFD,MAEO;AACLF,aAAS,GAAGE,4BAAZ;AACD;;AAED,SAAOR,UAAU,CACf;AACEW,QAAI,EAAET,OADR;AAEEU,eAAW,EAAE,CAACP,OAAD,EAAUC,SAAV,CAFf;AAGEO,aAAS,EAAE;AACTC,cAAQ,EAAE,UAACV,KAAD,EAAQW,IAAR,EAAY;AAAc,sBAAO,CAACX,KAAD,EAAQW,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,EAA6BG,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAA7B,CAAP;AAAwD,OADnF;AAETI,oBAAc,EAAEjB,YAAY,CAC1B,UAACkB,UAAD,EAAaF,IAAb,EAAiB;AAAK,yBAAU,GAAG,sDAAb;AAAmE,OAD/D,EAE1BN,iBAF0B;AAFnB;AAHb,GADe,EAYfA,iBAZe,CAAjB;AAcD","names":["buildMessage","ValidateBy","matchesValidator","MATCHES","matches","value","pattern","modifiers","Matches","modifiersOrAnnotationOptions","validationOptions","Object","name","constraints","validator","validate","args","defaultMessage","eachPrefix"],"sourceRoot":"","sources":["../../../../src/decorator/string/Matches.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}