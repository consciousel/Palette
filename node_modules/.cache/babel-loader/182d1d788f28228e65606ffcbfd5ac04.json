{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.H256BinaryCodec = void 0;\n\nconst h256_1 = require(\"../typesystem/h256\");\n\nclass H256BinaryCodec {\n  /**\n   * Reads and decodes a H256Value from a given buffer.\n   *\n   * @param buffer the input buffer\n   */\n  decodeNested(buffer) {\n    // We don't check the size of the buffer, we just read 32 bytes.\n    let slice = buffer.slice(0, 32);\n    return [new h256_1.H256Value(slice), 32];\n  }\n  /**\n   * Reads and decodes a H256Value from a given buffer.\n   *\n   * @param buffer the input buffer\n   */\n\n\n  decodeTopLevel(buffer) {\n    let [decoded, length] = this.decodeNested(buffer);\n    return decoded;\n  }\n  /**\n   * Encodes a H256Value to a buffer.\n   */\n\n\n  encodeNested(primitive) {\n    return primitive.valueOf();\n  }\n  /**\n   * Encodes a H256Value to a buffer.\n   */\n\n\n  encodeTopLevel(primitive) {\n    return primitive.valueOf();\n  }\n\n}\n\nexports.H256BinaryCodec = H256BinaryCodec;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAAaA,eAAb,CAA4B;AACxB;;;;;AAKAC,cAAY,CAACC,MAAD,EAAe;AACvB;AACA,QAAIC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAZ;AACA,WAAO,CAAC,IAAIC,gBAAJ,CAAcD,KAAd,CAAD,EAAuB,EAAvB,CAAP;AACH;AAED;;;;;;;AAKAE,gBAAc,CAACH,MAAD,EAAe;AACzB,QAAI,CAACI,OAAD,EAAUC,MAAV,IAAoB,KAAKN,YAAL,CAAkBC,MAAlB,CAAxB;AACA,WAAOI,OAAP;AACH;AAED;;;;;AAGAE,cAAY,CAACC,SAAD,EAAqB;AAC7B,WAAOA,SAAS,CAACC,OAAV,EAAP;AACH;AAED;;;;;AAGAC,gBAAc,CAACF,SAAD,EAAqB;AAC/B,WAAOA,SAAS,CAACC,OAAV,EAAP;AACH;;AAlCuB;;AAA5BE","names":["H256BinaryCodec","decodeNested","buffer","slice","h256_1","decodeTopLevel","decoded","length","encodeNested","primitive","valueOf","encodeTopLevel","exports"],"sourceRoot":"","sources":["../../../src/smartcontracts/codec/h256.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}