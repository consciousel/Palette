{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nvar urlOfLastUpload = \"\";\nvar assetUrl = \"\"; // Define function to return the url of the uploaded image\n\nexport function uploadedAsset(imageUrl) {\n  _s();\n\n  const [url, setUrl] = useState(\"\");\n  console.log(imageUrl); // Record image url after upload\n\n  if (!imageUrl === \"\") {\n    urlOfLastUpload = imageUrl;\n  } // Get url of last uploaded image\n\n\n  if (imageUrl === \"\") {\n    assetUrl = urlOfLastUpload;\n  } else {\n    assetUrl = imageUrl;\n  }\n\n  setUrl(imageUrl);\n  console.log(url);\n  return assetUrl;\n}\n\n_s(uploadedAsset, \"tyJwPUNTvQ8RPvFiUPpH5FS/SJw=\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/file-upload.js"],"names":["React","useState","urlOfLastUpload","assetUrl","uploadedAsset","imageUrl","url","setUrl","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,QAAQ,GAAG,EAAf,C,CAGA;;AACA,OAAO,SAASC,aAAT,CAAwBC,QAAxB,EAAkC;AAAA;;AACrC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAFqC,CAIrC;;AACA,MAAG,CAACA,QAAD,KAAc,EAAjB,EAAqB;AACjBH,IAAAA,eAAe,GAAGG,QAAlB;AACH,GAPoC,CASrC;;;AACA,MAAGA,QAAQ,KAAK,EAAhB,EAAmB;AACfF,IAAAA,QAAQ,GAAGD,eAAX;AACH,GAFD,MAEO;AACHC,IAAAA,QAAQ,GAAGE,QAAX;AACH;;AACDE,EAAAA,MAAM,CAACF,QAAD,CAAN;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,SAAOH,QAAP;AACH;;GAlBeC,a","sourcesContent":["import React, { useState } from 'react'\r\n\r\nvar urlOfLastUpload = \"\"\r\nvar assetUrl = \"\"\r\n\r\n\r\n// Define function to return the url of the uploaded image\r\nexport function uploadedAsset (imageUrl) {\r\n    const [url, setUrl] = useState(\"\");\r\n    console.log(imageUrl)\r\n\r\n    // Record image url after upload\r\n    if(!imageUrl === \"\") {\r\n        urlOfLastUpload = imageUrl\r\n    }    \r\n\r\n    // Get url of last uploaded image\r\n    if(imageUrl === \"\"){\r\n        assetUrl = urlOfLastUpload\r\n    } else {\r\n        assetUrl = imageUrl\r\n    }\r\n    setUrl(imageUrl)\r\n    console.log(url)\r\n    return assetUrl\r\n}"]},"metadata":{},"sourceType":"module"}