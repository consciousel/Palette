{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExtensionProvider = void 0;\n\nclass ExtensionProvider {\n  constructor() {\n    this.popupName = \"connectPopup\";\n    this.popupOptions = \"directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=375,height=569\";\n    this.extensionId = \"\";\n    this.extensionURL = \"\";\n    this.initialized = false;\n    this.extensionPopupWindow = null;\n    this.init().then();\n  }\n\n  init() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (window && window.elrondWallet) {\n        this.extensionId = window.elrondWallet.extensionId;\n        this.extensionURL = `chrome-extension://${this.extensionId}/index.html`;\n        this.initialized = true;\n      }\n\n      return this.initialized;\n    });\n  }\n\n  login() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.initialized) {\n        throw new Error(\"Wallet provider is not initialised, call init() first\");\n      }\n\n      this.openExtensionPopup();\n      const {\n        token\n      } = options;\n      const data = token ? token : \"\";\n      yield this.startExtMsgChannel(\"connect\", data);\n      return this.account.address;\n    });\n  }\n\n  logout() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.initialized) {\n        throw new Error(\"Wallet provider is not initialised, call init() first\");\n      }\n\n      return yield this.startBgrMsgChannel(\"logout\", this.account.address);\n    });\n  }\n\n  getAddress() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.initialized) {\n        throw new Error(\"Wallet provider is not initialised, call init() first\");\n      }\n\n      return this.account.address;\n    });\n  }\n\n  isInitialized() {\n    return this.initialized;\n  }\n\n  isConnected() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return !!this.account;\n    });\n  }\n\n  sendTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.startExtMsgChannel(\"sendTransactions\", {\n        from: this.account.index,\n        transactions: [transaction]\n      })[0];\n    });\n  }\n\n  signTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.startExtMsgChannel(\"signTransactions\", {\n        from: this.account.index,\n        transactions: [transaction]\n      })[0];\n    });\n  }\n\n  signTransactions(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.startExtMsgChannel(\"sendTransactions\", {\n        from: this.account.index,\n        transactions: transactions\n      });\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.openExtensionPopup();\n      const data = {\n        account: this.account.index,\n        message: message.message\n      };\n      return yield this.startExtMsgChannel(\"signMessage\", data);\n    });\n  }\n\n  openExtensionPopup() {\n    if (!this.initialized) {\n      throw new Error(\"Wallet provider is not initialised, call init() first\");\n    }\n\n    this.extensionPopupWindow = window.open(this.extensionURL, this.popupName, this.popupOptions);\n  }\n\n  startBgrMsgChannel(operation, connectData) {\n    return new Promise((resolve, reject) => {\n      window.postMessage({\n        target: \"erdw-inpage\",\n        type: operation,\n        data: connectData\n      }, window.origin);\n\n      const eventHandler = event => {\n        if (event.isTrusted && event.data.type && event.data.target === \"erdw-contentScript\") {\n          switch (event.data.type) {\n            case \"logoutResponse\":\n              window.removeEventListener(\"message\", eventHandler);\n              resolve(true);\n              break;\n          }\n        }\n      };\n\n      setTimeout(() => {\n        reject(\"Extension logout response timeout. No response from extension.\");\n      }, 3000);\n      window.addEventListener(\"message\", eventHandler, false);\n    });\n  }\n\n  startExtMsgChannel(operation, connectData) {\n    return new Promise((resolve, reject) => {\n      let isResolved = false;\n\n      const eventHandler = event => {\n        var _a, _b;\n\n        if (event.isTrusted && event.data.type && event.data.target === \"erdw-extension\") {\n          switch (event.data.type) {\n            case \"popupReady\":\n              event.ports[0].postMessage({\n                target: \"erdw-inpage\",\n                type: operation,\n                data: connectData\n              });\n              break;\n\n            case \"connectResult\":\n              (_a = this.extensionPopupWindow) === null || _a === void 0 ? void 0 : _a.close();\n              this.account = event.data.data;\n              window.removeEventListener(\"message\", eventHandler);\n              isResolved = true;\n              resolve(event.data.data);\n              break;\n\n            default:\n              this.handleExtResponseErr(event);\n              (_b = this.extensionPopupWindow) === null || _b === void 0 ? void 0 : _b.close();\n              window.removeEventListener(\"message\", eventHandler);\n              isResolved = true;\n              resolve(event.data.data);\n              break;\n          }\n        }\n      };\n\n      const windowCloseInterval = setInterval(() => {\n        var _a;\n\n        if ((_a = this.extensionPopupWindow) === null || _a === void 0 ? void 0 : _a.closed) {\n          window.removeEventListener(\"message\", eventHandler);\n          clearInterval(windowCloseInterval);\n          if (!isResolved) reject(\"Extension window was closed without response.\");\n        }\n      }, 500);\n      window.addEventListener(\"message\", eventHandler, false);\n    });\n  }\n\n  handleExtResponseErr(event) {\n    if (!event.data && !event.data.data) {\n      throw new Error(\"Extension response is empty.\");\n    }\n\n    if (event.data.type === \"transactionComplete\" && event.data.data.length === 0) {\n      throw new Error(\"Transactions list response is empty.\");\n    }\n  }\n\n}\n\nexports.ExtensionProvider = ExtensionProvider;","map":{"version":3,"mappings":"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","names":["ExtensionProvider","constructor","extensionPopupWindow","init","then","window","elrondWallet","extensionId","extensionURL","initialized","login","options","Error","openExtensionPopup","token","data","startExtMsgChannel","account","address","logout","startBgrMsgChannel","getAddress","isInitialized","isConnected","sendTransaction","transaction","from","index","transactions","signTransaction","signTransactions","signMessage","message","open","popupName","popupOptions","operation","connectData","Promise","resolve","reject","postMessage","target","type","origin","eventHandler","event","isTrusted","removeEventListener","setTimeout","addEventListener","isResolved","ports","_a","close","handleExtResponseErr","_b","windowCloseInterval","setInterval","closed","clearInterval","length","exports"],"sourceRoot":"","sources":["../../src/dapp/extensionProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}