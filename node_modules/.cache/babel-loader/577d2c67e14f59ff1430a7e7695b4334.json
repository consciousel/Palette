{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isVariableWidthValidator from 'validator/lib/isVariableWidth';\nexport var IS_VARIABLE_WIDTH = 'isVariableWidth';\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\n\nexport function isVariableWidth(value) {\n  return typeof value === 'string' && isVariableWidthValidator(value);\n}\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsVariableWidth(validationOptions) {\n  return ValidateBy({\n    name: IS_VARIABLE_WIDTH,\n    validator: {\n      validate: function (value, args) {\n        return isVariableWidth(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must contain a full-width and half-width characters';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,iBAA1B;AAEP;;;;;AAIA,OAAM,SAAUC,eAAV,CAA0BC,KAA1B,EAAwC;AAC5C,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BH,wBAAwB,CAACG,KAAD,CAA5D;AACD;AAED;;;;;AAIA,OAAM,SAAUC,eAAV,CAA0BC,iBAA1B,EAA+D;AACnE,SAAON,UAAU,CACf;AACEO,QAAI,EAAEL,iBADR;AAEEM,aAAS,EAAE;AACTC,cAAQ,EAAE,UAACL,KAAD,EAAQM,IAAR,EAAY;AAAc,8BAAe,CAACN,KAAD,CAAf;AAAsB,OADjD;AAETO,oBAAc,EAAEZ,YAAY,CAC1B,sBAAU;AAAI,yBAAU,GAAG,+DAAb;AAA4E,OADhE,EAE1BO,iBAF0B;AAFnB;AAFb,GADe,EAWfA,iBAXe,CAAjB;AAaD","names":["buildMessage","ValidateBy","isVariableWidthValidator","IS_VARIABLE_WIDTH","isVariableWidth","value","IsVariableWidth","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsVariableWidth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}