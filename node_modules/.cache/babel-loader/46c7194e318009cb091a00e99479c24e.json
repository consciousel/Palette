{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureIdValidator = void 0;\n\nconst class_validator_1 = require(\"class-validator\");\n\nlet SignatureIdValidator = class SignatureIdValidator {\n  defaultMessage(validationArguments) {\n    return 'Either signatureId, privateKey/secret/fromPrivateKey or feesCovered must be present. Combination is not allowed.';\n  }\n\n  validate(value, validationArguments) {\n    const data = validationArguments === null || validationArguments === void 0 ? void 0 : validationArguments.object;\n\n    if (data.feesCovered) {\n      if (data.fromPrivateKey || data.signatureId || data.privateKey || data.secret || data.fromSecret) {\n        return false;\n      }\n\n      return true;\n    }\n\n    if (data.fromPrivateKey && data.signatureId) {\n      return false;\n    }\n\n    if (!data.fromPrivateKey && !data.signatureId) {\n      return false;\n    }\n\n    if (data.privateKey && data.signatureId) {\n      return false;\n    }\n\n    if (data.secret && data.signatureId) {\n      return false;\n    }\n\n    if (data.fromSecret && data.signatureId) {\n      return false;\n    }\n\n    return true;\n  }\n\n};\nSignatureIdValidator = __decorate([class_validator_1.ValidatorConstraint({\n  name: 'signatureId',\n  async: false\n})], SignatureIdValidator);\nexports.SignatureIdValidator = SignatureIdValidator;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA;;AAGA,IAAaA,oBAAoB,GAAjC,MAAaA,oBAAb,CAAiC;AACxBC,gBAAc,CAACC,mBAAD,EAA0C;AAC7D,WAAO,kHAAP;AACD;;AAEMC,UAAQ,CAACC,KAAD,EAAaF,mBAAb,EAAsD;AACnE,UAAMG,IAAI,GAAGH,mBAAmB,SAAnB,uBAAmB,WAAnB,GAAmB,MAAnB,sBAAmB,CAAEI,MAAlC;;AACA,QAAID,IAAI,CAACE,WAAT,EAAsB;AACpB,UAAIF,IAAI,CAACG,cAAL,IAAuBH,IAAI,CAACI,WAA5B,IAA2CJ,IAAI,CAACK,UAAhD,IAA8DL,IAAI,CAACM,MAAnE,IAA6EN,IAAI,CAACO,UAAtF,EAAkG;AAChG,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD;;AACD,QAAIP,IAAI,CAACG,cAAL,IAAuBH,IAAI,CAACI,WAAhC,EAA6C;AAC3C,aAAO,KAAP;AACD;;AACD,QAAI,CAACJ,IAAI,CAACG,cAAN,IAAwB,CAACH,IAAI,CAACI,WAAlC,EAA+C;AAC7C,aAAO,KAAP;AACD;;AACD,QAAIJ,IAAI,CAACK,UAAL,IAAmBL,IAAI,CAACI,WAA5B,EAAyC;AACvC,aAAO,KAAP;AACD;;AACD,QAAIJ,IAAI,CAACM,MAAL,IAAeN,IAAI,CAACI,WAAxB,EAAqC;AACnC,aAAO,KAAP;AACD;;AACD,QAAIJ,IAAI,CAACO,UAAL,IAAmBP,IAAI,CAACI,WAA5B,EAAyC;AACvC,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AA7B8B,CAAjC;AAAaT,oBAAoB,eADhCa,sCAAoB;AAAEC,MAAI,EAAE,aAAR;AAAuBC,OAAK,EAAE;AAA9B,CAApB,CACgC,GAApBf,oBAAoB,CAApB;AAAAgB","names":["SignatureIdValidator","defaultMessage","validationArguments","validate","value","data","object","feesCovered","fromPrivateKey","signatureId","privateKey","secret","fromSecret","class_validator_1","name","async","exports"],"sourceRoot":"","sources":["../../../../src/model/validation/SignatureIdValidator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}