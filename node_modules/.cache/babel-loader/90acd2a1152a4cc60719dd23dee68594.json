{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatLogQuery = exports.formatOptions = exports.formatRange = exports.fromETHBlockNumberOrHash = exports.fromETHBlockNumber = void 0;\n\nconst utils = require(\"./\");\n\nconst OBJhas = (obj, p) => {\n  return obj.hasOwnProperty(p);\n};\n\nexports.fromETHBlockNumber = function (blockNumber) {\n  if (typeof blockNumber === 'number') {\n    return blockNumber;\n  } else if (typeof blockNumber === 'string') {\n    if (blockNumber === 'earliest') {\n      return 0;\n    } else if (blockNumber === 'latest' || blockNumber === 'pending') {\n      return 'best';\n    } else {\n      const num = utils.toInteger(blockNumber);\n      return num || num === 0 ? num : 'best';\n    }\n  } else {\n    return 'best';\n  }\n};\n\nexports.fromETHBlockNumberOrHash = function (blockRevision) {\n  if (/^(-0x|0x)?[0-9a-fA-F]{64}$/i.test(blockRevision)) {\n    return blockRevision;\n  } else {\n    return exports.fromETHBlockNumber(blockRevision);\n  }\n};\n\nexports.formatRange = function (range) {\n  const defaultUnit = 'block';\n  const ret = {\n    unit: range.unit || defaultUnit,\n    from: 0,\n    to: Number.MAX_SAFE_INTEGER\n  };\n\n  if (ret.unit !== 'block' && ret.unit !== 'time') {\n    ret.unit = defaultUnit;\n  }\n\n  if (range.unit === 'block') {\n    if (OBJhas(range, 'from')) {\n      const t = exports.fromETHBlockNumber(range.from);\n\n      if (t === 'best') {\n        ret.from = Number.MAX_SAFE_INTEGER;\n      } else {\n        ret.from = t;\n      }\n    }\n\n    if (OBJhas(range, 'to')) {\n      const t = exports.fromETHBlockNumber(range.to);\n\n      if (t === 'best') {\n        ret.to = Number.MAX_SAFE_INTEGER;\n      } else {\n        ret.to = t;\n      }\n    }\n\n    return ret;\n  }\n\n  if (OBJhas(range, 'from')) {\n    const t = utils.toInteger(range.from);\n\n    if (t !== null) {\n      ret.from = t;\n    }\n  }\n\n  if (OBJhas(range, 'to')) {\n    const t = utils.toInteger(range.to);\n\n    if (t !== null) {\n      ret.to = t;\n    }\n  }\n\n  return ret;\n};\n\nexports.formatOptions = function (options) {\n  const ret = {\n    offset: 0,\n    limit: utils.params.defaultLogLimit\n  };\n\n  if (OBJhas(options, 'offset')) {\n    const temp = utils.toInteger(options.offset);\n\n    if (temp) {\n      ret.offset = temp;\n    }\n  }\n\n  if (OBJhas(options, 'limit')) {\n    const temp = utils.toInteger(options.limit);\n\n    if (temp) {\n      ret.limit = temp;\n    }\n  }\n\n  if (ret.limit > utils.params.maxLogLimit) {\n    ret.limit = utils.params.maxLogLimit;\n  }\n\n  return ret;\n};\n\nexports.formatLogQuery = function (params) {\n  let address = '';\n  let order = 'ASC';\n\n  if (params.address) {\n    address = params.address;\n  }\n\n  if (params.order && (params.order.toUpperCase() === 'ASC' || params.order.toUpperCase() === 'DESC')) {\n    order = params.order.toUpperCase();\n  }\n\n  const body = {\n    criteriaSet: [],\n    order\n  };\n\n  if (params.options) {\n    body.options = exports.formatOptions(params.options);\n  } // discard fromBlock and toBlock if range presents\n\n\n  if (params.range) {\n    body.range = exports.formatRange(params.range);\n  } else {\n    const range = {\n      unit: 'block',\n      from: params.fromBlock || 0,\n      to: params.toBlock || Number.MAX_SAFE_INTEGER\n    };\n    body.range = exports.formatRange(range);\n  }\n\n  const topics = [];\n\n  if (params.topics && params.topics.length) {\n    for (let i = 0; i < params.topics.length; i++) {\n      if (typeof params.topics[i] === 'string') {\n        topics.push({\n          name: 'topic' + i,\n          array: [params.topics[i]]\n        });\n      } else if (utils.isArray(params.topics[i]) && params.topics[i].length) {\n        topics.push({\n          name: 'topic' + i,\n          array: params.topics[i]\n        });\n      }\n    }\n  }\n\n  const outputTopic = function (inputTopics, index, receiver, current) {\n    if (index === inputTopics.length) {\n      const o = {};\n\n      if (address) {\n        current.address = address;\n      }\n\n      Object.assign(o, current);\n      receiver.push(o);\n      return;\n    }\n\n    for (const item of inputTopics[index].array) {\n      current[inputTopics[index].name] = item;\n      outputTopic(inputTopics, index + 1, receiver, current);\n    }\n  };\n\n  if (topics.length) {\n    outputTopic(topics, 0, body.criteriaSet, {});\n  }\n\n  if (!body.criteriaSet.length && address) {\n    body.criteriaSet.push({\n      address\n    });\n  }\n\n  return body;\n};","map":{"version":3,"mappings":"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","names":["OBJhas","obj","p","hasOwnProperty","exports","blockNumber","num","utils","toInteger","blockRevision","test","range","defaultUnit","ret","unit","from","to","Number","MAX_SAFE_INTEGER","t","options","offset","limit","params","defaultLogLimit","temp","maxLogLimit","address","order","toUpperCase","body","criteriaSet","fromBlock","toBlock","topics","length","i","push","name","array","isArray","outputTopic","inputTopics","index","receiver","current","o","Object","assign","item"],"sourceRoot":"","sources":["../../src/utils/option-formatters.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}