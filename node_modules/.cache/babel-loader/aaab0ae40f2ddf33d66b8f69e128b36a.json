{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GasPriceModifier = exports.TransactionOptions = exports.TransactionVersion = exports.ChainID = exports.GasLimit = exports.GasPrice = void 0;\n\nconst networkConfig_1 = require(\"./networkConfig\");\n\nconst errors = __importStar(require(\"./errors\"));\n\nconst balanceBuilder_1 = require(\"./balanceBuilder\");\n\nconst constants_1 = require(\"./constants\");\n/**\n * The gas price, as an immutable object.\n */\n\n\nclass GasPrice {\n  /**\n   * Creates a GasPrice object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (Number.isNaN(value) || value < 0) {\n      throw new errors.ErrGasPriceInvalid(value);\n    }\n\n    this.value = value;\n  }\n\n  toDenominated() {\n    let asBalance = balanceBuilder_1.Egld.raw(this.value.toString(10));\n    return asBalance.toDenominated();\n  }\n  /**\n   * Creates a GasPrice object using the minimum value.\n   */\n\n\n  static min() {\n    let value = networkConfig_1.NetworkConfig.getDefault().MinGasPrice.value;\n    return new GasPrice(value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.GasPrice = GasPrice;\n/**\n * The gas limit, as an immutable object.\n */\n\nclass GasLimit {\n  /**\n   * Creates a GasLimit object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (Number.isNaN(value) || value < 0) {\n      throw new errors.ErrGasLimitInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a GasLimit object for a value-transfer {@link Transaction}.\n   */\n\n\n  static forTransfer(data) {\n    let value = networkConfig_1.NetworkConfig.getDefault().MinGasLimit.value;\n\n    if (data) {\n      value += networkConfig_1.NetworkConfig.getDefault().GasPerDataByte * data.length();\n    }\n\n    return new GasLimit(value);\n  }\n  /**\n   * Creates a GasLimit object using the minimum value.\n   */\n\n\n  static min() {\n    let value = networkConfig_1.NetworkConfig.getDefault().MinGasLimit.value;\n    return new GasLimit(value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.GasLimit = GasLimit;\n\nclass ChainID {\n  /**\n   * Creates a ChainID object given a value.\n   */\n  constructor(value) {\n    if (!value) {\n      throw new errors.ErrChainIDInvalid(value);\n    }\n\n    this.value = value;\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.ChainID = ChainID;\n\nclass TransactionVersion {\n  /**\n   * Creates a TransactionVersion object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value < 1) {\n      throw new errors.ErrTransactionVersionInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a TransactionVersion object with the default version setting\n   */\n\n\n  static withDefaultVersion() {\n    return new TransactionVersion(constants_1.TRANSACTION_VERSION_DEFAULT);\n  }\n  /**\n   * Creates a TransactionVersion object with the VERSION setting for hash signing\n   */\n\n\n  static withTxHashSignVersion() {\n    return new TransactionVersion(constants_1.TRANSACTION_VERSION_TX_HASH_SIGN);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.TransactionVersion = TransactionVersion;\n\nclass TransactionOptions {\n  /**\n   * Creates a TransactionOptions object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value < 0) {\n      throw new errors.ErrTransactionOptionsInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a TransactionOptions object with the default options setting\n   */\n\n\n  static withDefaultOptions() {\n    return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_DEFAULT);\n  }\n  /**\n   * Created a TransactionsOptions object with the setting for hash signing\n   */\n\n\n  static withTxHashSignOptions() {\n    return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_TX_HASH_SIGN);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.TransactionOptions = TransactionOptions;\n\nclass GasPriceModifier {\n  /**\n   * Creates a GasPriceModifier object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value <= 0 || value > 1) {\n      throw new errors.ErrGasPriceModifierInvalid(value);\n    }\n\n    this.value = value;\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.GasPriceModifier = GasPriceModifier;","map":{"version":3,"mappings":"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","names":["GasPrice","constructor","value","Number","isNaN","errors","ErrGasPriceInvalid","toDenominated","asBalance","balanceBuilder_1","raw","toString","min","networkConfig_1","getDefault","MinGasPrice","valueOf","exports","GasLimit","ErrGasLimitInvalid","forTransfer","data","MinGasLimit","GasPerDataByte","length","ChainID","ErrChainIDInvalid","TransactionVersion","ErrTransactionVersionInvalid","withDefaultVersion","constants_1","withTxHashSignVersion","TransactionOptions","ErrTransactionOptionsInvalid","withDefaultOptions","withTxHashSignOptions","GasPriceModifier","ErrGasPriceModifierInvalid"],"sourceRoot":"","sources":["../src/networkParams.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}