{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendMethods = void 0;\n\nconst Subscriptions = require('web3-core-subscriptions').subscriptions;\n\nconst formatters_1 = require(\"./formatters\");\n\nconst extendMethods = function (web3) {\n  web3.extend({\n    property: 'eth',\n    methods: [new web3.extend.Method({\n      name: 'getEnergy',\n      call: 'eth_getEnergy',\n      params: 2,\n      inputFormatter: [web3.extend.utils.toAddress, web3.extend.formatters.inputDefaultBlockNumberFormatter],\n      outputFormatter: web3.extend.formatters.outputBigNumberFormatter\n    }), new web3.extend.Method({\n      name: 'getTransaction',\n      call: 'eth_getTransactionByHash',\n      params: 1,\n      inputFormatter: [null],\n      outputFormatter: web3.extend.formatters.outputTransactionFormatter\n    }), new web3.extend.Method({\n      name: 'getTransactionReceipt',\n      call: 'eth_getTransactionReceipt',\n      params: 1,\n      inputFormatter: [null],\n      outputFormatter: web3.extend.formatters.outputTransactionReceiptFormatter\n    }), new web3.extend.Method({\n      name: 'sendTransaction',\n      call: 'eth_sendTransaction',\n      accounts: web3.eth.accounts,\n      params: 1,\n      inputFormatter: [web3.extend.formatters.inputTransactionFormatter]\n    }), new web3.extend.Method({\n      name: 'getBlockRef',\n      call: 'eth_getBlockRef',\n      params: 0\n    }), new web3.extend.Method({\n      name: 'getChainTag',\n      call: 'eth_getChainTag',\n      params: 0\n    }), new web3.extend.Method({\n      name: 'getPastLogs',\n      call: 'eth_getLogs',\n      params: 1,\n      inputFormatter: [web3.extend.formatters.inputLogFormatter],\n      outputFormatter: web3.extend.formatters.outputLogFormatter\n    })]\n  }); // subscriptions\n\n  const subs = new Subscriptions({\n    name: 'subscribe',\n    type: 'eth',\n    subscriptions: {\n      newBlockHeaders: {\n        subscriptionName: 'newHeads',\n        params: 1,\n        inputFormatter: [formatters_1.inputBlockFilterFormatter],\n\n        subscriptionHandler(subscriptionMsg) {\n          if (subscriptionMsg.error) {\n            this.emit('error', subscriptionMsg.error); // web3-core-subscriptions/subscription sets a default value for this.callback\n\n            this.callback(subscriptionMsg.error, null, this);\n          } else {\n            const result = web3.extend.formatters.outputBlockFormatter(subscriptionMsg.data);\n\n            if (result.removed) {\n              this.emit('changed', result);\n            } else {\n              this.emit('data', result);\n            } // web3-core-subscriptions/subscription sets a default value for this.callback\n\n\n            this.callback(null, result, this);\n          }\n        }\n\n      },\n      logs: {\n        params: 1,\n        inputFormatter: [formatters_1.inputLogFilterFormatter],\n\n        subscriptionHandler(subscriptionMsg) {\n          if (subscriptionMsg.error) {\n            this.emit('error', subscriptionMsg.error); // web3-core-subscriptions/subscription sets a default value for this.callback\n\n            this.callback(subscriptionMsg.error, null, this);\n          } else {\n            const result = web3.extend.formatters.outputLogFormatter(subscriptionMsg.data);\n\n            if (result.removed) {\n              this.emit('changed', result);\n            } else {\n              this.emit('data', result);\n            } // web3-core-subscriptions/subscription sets a default value for this.callback\n\n\n            this.callback(null, result, this);\n          }\n        }\n\n      },\n      transfers: {\n        params: 1,\n        inputFormatter: [formatters_1.inputTransferFilterFormatter],\n\n        subscriptionHandler(subscriptionMsg) {\n          if (subscriptionMsg.error) {\n            this.emit('error', subscriptionMsg.error); // web3-core-subscriptions/subscription sets a default value for this.callback\n\n            this.callback(subscriptionMsg.error, null, this);\n          } else {\n            const result = subscriptionMsg.data;\n\n            if (result.removed) {\n              this.emit('changed', result);\n            } else {\n              this.emit('data', result);\n            } // web3-core-subscriptions/subscription sets a default value for this.callback\n\n\n            this.callback(null, result, this);\n          }\n        }\n\n      }\n    }\n  });\n  subs.attachToObject(web3.eth);\n  subs.setRequestManager(web3.eth._requestManager);\n  web3.eth.clearSubscriptions = web3.eth._requestManager.clearSubscriptions.bind(web3.eth._requestManager);\n};\n\nexports.extendMethods = extendMethods;","map":{"version":3,"mappings":"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","names":["Subscriptions","require","subscriptions","extendMethods","web3","extend","property","methods","Method","name","call","params","inputFormatter","utils","toAddress","formatters","inputDefaultBlockNumberFormatter","outputFormatter","outputBigNumberFormatter","outputTransactionFormatter","outputTransactionReceiptFormatter","accounts","eth","inputTransactionFormatter","inputLogFormatter","outputLogFormatter","subs","type","newBlockHeaders","subscriptionName","formatters_1","subscriptionHandler","subscriptionMsg","error","emit","callback","result","outputBlockFormatter","data","removed","logs","transfers","attachToObject","setRequestManager","_requestManager","clearSubscriptions","bind","exports"],"sourceRoot":"","sources":["../../src/extend/methods.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}