{"ast":null,"code":"import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Ignores the other validators on a property when the provided condition function returns false.\n */\n\nexport function ValidateIf(condition, validationOptions) {\n  return function (object, propertyName) {\n    var args = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [condition],\n      validationOptions: validationOptions\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}","map":{"version":3,"mappings":"AAEA,SAASA,eAAT,QAAgC,kCAAhC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AAEA;;;;AAGA,OAAM,SAAUC,UAAV,CACJC,SADI,EAEJC,iBAFI,EAEiC;AAErC,SAAO,UAAUC,MAAV,EAA0BC,YAA1B,EAA8C;AACnD,QAAMC,IAAI,GAA2B;AACnCC,UAAI,EAAET,eAAe,CAACU,sBADa;AAEnCC,YAAM,EAAEL,MAAM,CAACM,WAFoB;AAGnCL,kBAAY,EAAEA,YAHqB;AAInCM,iBAAW,EAAE,CAACT,SAAD,CAJsB;AAKnCC,uBAAiB,EAAEA;AALgB,KAArC;AAOAH,sBAAkB,GAAGY,qBAArB,CAA2C,IAAIb,kBAAJ,CAAuBO,IAAvB,CAA3C;AACD,GATD;AAUD","names":["ValidationTypes","ValidationMetadata","getMetadataStorage","ValidateIf","condition","validationOptions","object","propertyName","args","type","CONDITIONAL_VALIDATION","target","constructor","constraints","addValidationMetadata"],"sourceRoot":"","sources":["../../../../src/decorator/common/ValidateIf.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}