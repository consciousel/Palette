{"ast":null,"code":"var original = require('original');\n\nvar parse = require('url').parse;\n\nvar events = require('events');\n\nvar https = require('https');\n\nvar http = require('http');\n\nvar util = require('util');\n\nvar httpsOptions = ['pfx', 'key', 'passphrase', 'cert', 'ca', 'ciphers', 'rejectUnauthorized', 'secureProtocol', 'servername', 'checkServerIdentity'];\nvar bom = [239, 187, 191];\nvar colon = 58;\nvar space = 32;\nvar lineFeed = 10;\nvar carriageReturn = 13;\n\nfunction hasBom(buf) {\n  return bom.every(function (charCode, index) {\n    return buf[index] === charCode;\n  });\n}\n/**\n * Creates a new EventSource object\n *\n * @param {String} url the URL to which to connect\n * @param {Object} [eventSourceInitDict] extra init params. See README for details.\n * @api public\n **/\n\n\nfunction EventSource(url, eventSourceInitDict) {\n  var readyState = EventSource.CONNECTING;\n  Object.defineProperty(this, 'readyState', {\n    get: function () {\n      return readyState;\n    }\n  });\n  Object.defineProperty(this, 'url', {\n    get: function () {\n      return url;\n    }\n  });\n  var self = this;\n  self.reconnectInterval = 1000;\n  self.connectionInProgress = false;\n\n  function onConnectionClosed(message) {\n    if (readyState === EventSource.CLOSED) return;\n    readyState = EventSource.CONNECTING;\n\n    _emit('error', new Event('error', {\n      message: message\n    })); // The url may have been changed by a temporary\n    // redirect. If that's the case, revert it now.\n\n\n    if (reconnectUrl) {\n      url = reconnectUrl;\n      reconnectUrl = null;\n    }\n\n    setTimeout(function () {\n      if (readyState !== EventSource.CONNECTING || self.connectionInProgress) {\n        return;\n      }\n\n      self.connectionInProgress = true;\n      connect();\n    }, self.reconnectInterval);\n  }\n\n  var req;\n  var lastEventId = '';\n\n  if (eventSourceInitDict && eventSourceInitDict.headers && eventSourceInitDict.headers['Last-Event-ID']) {\n    lastEventId = eventSourceInitDict.headers['Last-Event-ID'];\n    delete eventSourceInitDict.headers['Last-Event-ID'];\n  }\n\n  var discardTrailingNewline = false;\n  var data = '';\n  var eventName = '';\n  var reconnectUrl = null;\n\n  function connect() {\n    var options = parse(url);\n    var isSecure = options.protocol === 'https:';\n    options.headers = {\n      'Cache-Control': 'no-cache',\n      'Accept': 'text/event-stream'\n    };\n    if (lastEventId) options.headers['Last-Event-ID'] = lastEventId;\n\n    if (eventSourceInitDict && eventSourceInitDict.headers) {\n      for (var i in eventSourceInitDict.headers) {\n        var header = eventSourceInitDict.headers[i];\n\n        if (header) {\n          options.headers[i] = header;\n        }\n      }\n    } // Legacy: this should be specified as `eventSourceInitDict.https.rejectUnauthorized`,\n    // but for now exists as a backwards-compatibility layer\n\n\n    options.rejectUnauthorized = !(eventSourceInitDict && !eventSourceInitDict.rejectUnauthorized);\n\n    if (eventSourceInitDict && eventSourceInitDict.createConnection !== undefined) {\n      options.createConnection = eventSourceInitDict.createConnection;\n    } // If specify http proxy, make the request to sent to the proxy server,\n    // and include the original url in path and Host headers\n\n\n    var useProxy = eventSourceInitDict && eventSourceInitDict.proxy;\n\n    if (useProxy) {\n      var proxy = parse(eventSourceInitDict.proxy);\n      isSecure = proxy.protocol === 'https:';\n      options.protocol = isSecure ? 'https:' : 'http:';\n      options.path = url;\n      options.headers.Host = options.host;\n      options.hostname = proxy.hostname;\n      options.host = proxy.host;\n      options.port = proxy.port;\n    } // If https options are specified, merge them into the request options\n\n\n    if (eventSourceInitDict && eventSourceInitDict.https) {\n      for (var optName in eventSourceInitDict.https) {\n        if (httpsOptions.indexOf(optName) === -1) {\n          continue;\n        }\n\n        var option = eventSourceInitDict.https[optName];\n\n        if (option !== undefined) {\n          options[optName] = option;\n        }\n      }\n    } // Pass this on to the XHR\n\n\n    if (eventSourceInitDict && eventSourceInitDict.withCredentials !== undefined) {\n      options.withCredentials = eventSourceInitDict.withCredentials;\n    }\n\n    req = (isSecure ? https : http).request(options, function (res) {\n      self.connectionInProgress = false; // Handle HTTP errors\n\n      if (res.statusCode === 500 || res.statusCode === 502 || res.statusCode === 503 || res.statusCode === 504) {\n        _emit('error', new Event('error', {\n          status: res.statusCode,\n          message: res.statusMessage\n        }));\n\n        onConnectionClosed();\n        return;\n      } // Handle HTTP redirects\n\n\n      if (res.statusCode === 301 || res.statusCode === 302 || res.statusCode === 307) {\n        if (!res.headers.location) {\n          // Server sent redirect response without Location header.\n          _emit('error', new Event('error', {\n            status: res.statusCode,\n            message: res.statusMessage\n          }));\n\n          return;\n        }\n\n        if (res.statusCode === 307) reconnectUrl = url;\n        url = res.headers.location;\n        process.nextTick(connect);\n        return;\n      }\n\n      if (res.statusCode !== 200) {\n        _emit('error', new Event('error', {\n          status: res.statusCode,\n          message: res.statusMessage\n        }));\n\n        return self.close();\n      }\n\n      readyState = EventSource.OPEN;\n      res.on('close', function () {\n        res.removeAllListeners('close');\n        res.removeAllListeners('end');\n        onConnectionClosed();\n      });\n      res.on('end', function () {\n        res.removeAllListeners('close');\n        res.removeAllListeners('end');\n        onConnectionClosed();\n      });\n\n      _emit('open', new Event('open')); // text/event-stream parser adapted from webkit's\n      // Source/WebCore/page/EventSource.cpp\n\n\n      var isFirst = true;\n      var buf;\n      var startingPos = 0;\n      var startingFieldLength = -1;\n      res.on('data', function (chunk) {\n        buf = buf ? Buffer.concat([buf, chunk]) : chunk;\n\n        if (isFirst && hasBom(buf)) {\n          buf = buf.slice(bom.length);\n        }\n\n        isFirst = false;\n        var pos = 0;\n        var length = buf.length;\n\n        while (pos < length) {\n          if (discardTrailingNewline) {\n            if (buf[pos] === lineFeed) {\n              ++pos;\n            }\n\n            discardTrailingNewline = false;\n          }\n\n          var lineLength = -1;\n          var fieldLength = startingFieldLength;\n          var c;\n\n          for (var i = startingPos; lineLength < 0 && i < length; ++i) {\n            c = buf[i];\n\n            if (c === colon) {\n              if (fieldLength < 0) {\n                fieldLength = i - pos;\n              }\n            } else if (c === carriageReturn) {\n              discardTrailingNewline = true;\n              lineLength = i - pos;\n            } else if (c === lineFeed) {\n              lineLength = i - pos;\n            }\n          }\n\n          if (lineLength < 0) {\n            startingPos = length - pos;\n            startingFieldLength = fieldLength;\n            break;\n          } else {\n            startingPos = 0;\n            startingFieldLength = -1;\n          }\n\n          parseEventStreamLine(buf, pos, fieldLength, lineLength);\n          pos += lineLength + 1;\n        }\n\n        if (pos === length) {\n          buf = void 0;\n        } else if (pos > 0) {\n          buf = buf.slice(pos);\n        }\n      });\n    });\n    req.on('error', function (err) {\n      self.connectionInProgress = false;\n      onConnectionClosed(err.message);\n    });\n    if (req.setNoDelay) req.setNoDelay(true);\n    req.end();\n  }\n\n  connect();\n\n  function _emit() {\n    if (self.listeners(arguments[0]).length > 0) {\n      self.emit.apply(self, arguments);\n    }\n  }\n\n  this._close = function () {\n    if (readyState === EventSource.CLOSED) return;\n    readyState = EventSource.CLOSED;\n    if (req.abort) req.abort();\n    if (req.xhr && req.xhr.abort) req.xhr.abort();\n  };\n\n  function parseEventStreamLine(buf, pos, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        var type = eventName || 'message';\n\n        _emit(type, new MessageEvent(type, {\n          data: data.slice(0, -1),\n          // remove trailing newline\n          lastEventId: lastEventId,\n          origin: original(url)\n        }));\n\n        data = '';\n      }\n\n      eventName = void 0;\n    } else if (fieldLength > 0) {\n      var noValue = fieldLength < 0;\n      var step = 0;\n      var field = buf.slice(pos, pos + (noValue ? lineLength : fieldLength)).toString();\n\n      if (noValue) {\n        step = lineLength;\n      } else if (buf[pos + fieldLength + 1] !== space) {\n        step = fieldLength + 1;\n      } else {\n        step = fieldLength + 2;\n      }\n\n      pos += step;\n      var valueLength = lineLength - step;\n      var value = buf.slice(pos, pos + valueLength).toString();\n\n      if (field === 'data') {\n        data += value + '\\n';\n      } else if (field === 'event') {\n        eventName = value;\n      } else if (field === 'id') {\n        lastEventId = value;\n      } else if (field === 'retry') {\n        var retry = parseInt(value, 10);\n\n        if (!Number.isNaN(retry)) {\n          self.reconnectInterval = retry;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = EventSource;\nutil.inherits(EventSource, events.EventEmitter);\nEventSource.prototype.constructor = EventSource; // make stacktraces readable\n\n['open', 'error', 'message'].forEach(function (method) {\n  Object.defineProperty(EventSource.prototype, 'on' + method, {\n    /**\n     * Returns the current listener\n     *\n     * @return {Mixed} the set function or undefined\n     * @api private\n     */\n    get: function get() {\n      var listener = this.listeners(method)[0];\n      return listener ? listener._listener ? listener._listener : listener : undefined;\n    },\n\n    /**\n     * Start listening for events\n     *\n     * @param {Function} listener the listener\n     * @return {Mixed} the set function or undefined\n     * @api private\n     */\n    set: function set(listener) {\n      this.removeAllListeners(method);\n      this.addEventListener(method, listener);\n    }\n  });\n});\n/**\n * Ready states\n */\n\nObject.defineProperty(EventSource, 'CONNECTING', {\n  enumerable: true,\n  value: 0\n});\nObject.defineProperty(EventSource, 'OPEN', {\n  enumerable: true,\n  value: 1\n});\nObject.defineProperty(EventSource, 'CLOSED', {\n  enumerable: true,\n  value: 2\n});\nEventSource.prototype.CONNECTING = 0;\nEventSource.prototype.OPEN = 1;\nEventSource.prototype.CLOSED = 2;\n/**\n * Closes the connection, if one is made, and sets the readyState attribute to 2 (closed)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventSource/close\n * @api public\n */\n\nEventSource.prototype.close = function () {\n  this._close();\n};\n/**\n * Emulates the W3C Browser based WebSocket interface using addEventListener.\n *\n * @param {String} type A string representing the event type to listen out for\n * @param {Function} listener callback\n * @see https://developer.mozilla.org/en/DOM/element.addEventListener\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\n\n\nEventSource.prototype.addEventListener = function addEventListener(type, listener) {\n  if (typeof listener === 'function') {\n    // store a reference so we can return the original function again\n    listener._listener = listener;\n    this.on(type, listener);\n  }\n};\n/**\n * Emulates the W3C Browser based WebSocket interface using dispatchEvent.\n *\n * @param {Event} event An event to be dispatched\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n * @api public\n */\n\n\nEventSource.prototype.dispatchEvent = function dispatchEvent(event) {\n  if (!event.type) {\n    throw new Error('UNSPECIFIED_EVENT_TYPE_ERR');\n  } // if event is instance of an CustomEvent (or has 'details' property),\n  // send the detail object as the payload for the event\n\n\n  this.emit(event.type, event.detail);\n};\n/**\n * Emulates the W3C Browser based WebSocket interface using removeEventListener.\n *\n * @param {String} type A string representing the event type to remove\n * @param {Function} listener callback\n * @see https://developer.mozilla.org/en/DOM/element.removeEventListener\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\n\n\nEventSource.prototype.removeEventListener = function removeEventListener(type, listener) {\n  if (typeof listener === 'function') {\n    listener._listener = undefined;\n    this.removeListener(type, listener);\n  }\n};\n/**\n * W3C Event\n *\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#interface-Event\n * @api private\n */\n\n\nfunction Event(type, optionalProperties) {\n  Object.defineProperty(this, 'type', {\n    writable: false,\n    value: type,\n    enumerable: true\n  });\n\n  if (optionalProperties) {\n    for (var f in optionalProperties) {\n      if (optionalProperties.hasOwnProperty(f)) {\n        Object.defineProperty(this, f, {\n          writable: false,\n          value: optionalProperties[f],\n          enumerable: true\n        });\n      }\n    }\n  }\n}\n/**\n * W3C MessageEvent\n *\n * @see http://www.w3.org/TR/webmessaging/#event-definitions\n * @api private\n */\n\n\nfunction MessageEvent(type, eventInitDict) {\n  Object.defineProperty(this, 'type', {\n    writable: false,\n    value: type,\n    enumerable: true\n  });\n\n  for (var f in eventInitDict) {\n    if (eventInitDict.hasOwnProperty(f)) {\n      Object.defineProperty(this, f, {\n        writable: false,\n        value: eventInitDict[f],\n        enumerable: true\n      });\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/node_modules/eventsource/lib/eventsource.js"],"names":["original","require","parse","events","https","http","util","httpsOptions","bom","colon","space","lineFeed","carriageReturn","hasBom","buf","every","charCode","index","EventSource","url","eventSourceInitDict","readyState","CONNECTING","Object","defineProperty","get","self","reconnectInterval","connectionInProgress","onConnectionClosed","message","CLOSED","_emit","Event","reconnectUrl","setTimeout","connect","req","lastEventId","headers","discardTrailingNewline","data","eventName","options","isSecure","protocol","i","header","rejectUnauthorized","createConnection","undefined","useProxy","proxy","path","Host","host","hostname","port","optName","indexOf","option","withCredentials","request","res","statusCode","status","statusMessage","location","process","nextTick","close","OPEN","on","removeAllListeners","isFirst","startingPos","startingFieldLength","chunk","Buffer","concat","slice","length","pos","lineLength","fieldLength","c","parseEventStreamLine","err","setNoDelay","end","listeners","arguments","emit","apply","_close","abort","xhr","type","MessageEvent","origin","noValue","step","field","toString","valueLength","value","retry","parseInt","Number","isNaN","module","exports","inherits","EventEmitter","prototype","constructor","forEach","method","listener","_listener","set","addEventListener","enumerable","dispatchEvent","event","Error","detail","removeEventListener","removeListener","optionalProperties","writable","f","hasOwnProperty","eventInitDict"],"mappings":"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","sourcesContent":["var original = require('original')\nvar parse = require('url').parse\nvar events = require('events')\nvar https = require('https')\nvar http = require('http')\nvar util = require('util')\n\nvar httpsOptions = [\n  'pfx', 'key', 'passphrase', 'cert', 'ca', 'ciphers',\n  'rejectUnauthorized', 'secureProtocol', 'servername', 'checkServerIdentity'\n]\n\nvar bom = [239, 187, 191]\nvar colon = 58\nvar space = 32\nvar lineFeed = 10\nvar carriageReturn = 13\n\nfunction hasBom (buf) {\n  return bom.every(function (charCode, index) {\n    return buf[index] === charCode\n  })\n}\n\n/**\n * Creates a new EventSource object\n *\n * @param {String} url the URL to which to connect\n * @param {Object} [eventSourceInitDict] extra init params. See README for details.\n * @api public\n **/\nfunction EventSource (url, eventSourceInitDict) {\n  var readyState = EventSource.CONNECTING\n  Object.defineProperty(this, 'readyState', {\n    get: function () {\n      return readyState\n    }\n  })\n\n  Object.defineProperty(this, 'url', {\n    get: function () {\n      return url\n    }\n  })\n\n  var self = this\n  self.reconnectInterval = 1000\n  self.connectionInProgress = false\n\n  function onConnectionClosed (message) {\n    if (readyState === EventSource.CLOSED) return\n    readyState = EventSource.CONNECTING\n    _emit('error', new Event('error', {message: message}))\n\n    // The url may have been changed by a temporary\n    // redirect. If that's the case, revert it now.\n    if (reconnectUrl) {\n      url = reconnectUrl\n      reconnectUrl = null\n    }\n    setTimeout(function () {\n      if (readyState !== EventSource.CONNECTING || self.connectionInProgress) {\n        return\n      }\n      self.connectionInProgress = true\n      connect()\n    }, self.reconnectInterval)\n  }\n\n  var req\n  var lastEventId = ''\n  if (eventSourceInitDict && eventSourceInitDict.headers && eventSourceInitDict.headers['Last-Event-ID']) {\n    lastEventId = eventSourceInitDict.headers['Last-Event-ID']\n    delete eventSourceInitDict.headers['Last-Event-ID']\n  }\n\n  var discardTrailingNewline = false\n  var data = ''\n  var eventName = ''\n\n  var reconnectUrl = null\n\n  function connect () {\n    var options = parse(url)\n    var isSecure = options.protocol === 'https:'\n    options.headers = { 'Cache-Control': 'no-cache', 'Accept': 'text/event-stream' }\n    if (lastEventId) options.headers['Last-Event-ID'] = lastEventId\n    if (eventSourceInitDict && eventSourceInitDict.headers) {\n      for (var i in eventSourceInitDict.headers) {\n        var header = eventSourceInitDict.headers[i]\n        if (header) {\n          options.headers[i] = header\n        }\n      }\n    }\n\n    // Legacy: this should be specified as `eventSourceInitDict.https.rejectUnauthorized`,\n    // but for now exists as a backwards-compatibility layer\n    options.rejectUnauthorized = !(eventSourceInitDict && !eventSourceInitDict.rejectUnauthorized)\n\n    if (eventSourceInitDict && eventSourceInitDict.createConnection !== undefined) {\n      options.createConnection = eventSourceInitDict.createConnection\n    }\n\n    // If specify http proxy, make the request to sent to the proxy server,\n    // and include the original url in path and Host headers\n    var useProxy = eventSourceInitDict && eventSourceInitDict.proxy\n    if (useProxy) {\n      var proxy = parse(eventSourceInitDict.proxy)\n      isSecure = proxy.protocol === 'https:'\n\n      options.protocol = isSecure ? 'https:' : 'http:'\n      options.path = url\n      options.headers.Host = options.host\n      options.hostname = proxy.hostname\n      options.host = proxy.host\n      options.port = proxy.port\n    }\n\n    // If https options are specified, merge them into the request options\n    if (eventSourceInitDict && eventSourceInitDict.https) {\n      for (var optName in eventSourceInitDict.https) {\n        if (httpsOptions.indexOf(optName) === -1) {\n          continue\n        }\n\n        var option = eventSourceInitDict.https[optName]\n        if (option !== undefined) {\n          options[optName] = option\n        }\n      }\n    }\n\n    // Pass this on to the XHR\n    if (eventSourceInitDict && eventSourceInitDict.withCredentials !== undefined) {\n      options.withCredentials = eventSourceInitDict.withCredentials\n    }\n\n    req = (isSecure ? https : http).request(options, function (res) {\n      self.connectionInProgress = false\n      // Handle HTTP errors\n      if (res.statusCode === 500 || res.statusCode === 502 || res.statusCode === 503 || res.statusCode === 504) {\n        _emit('error', new Event('error', {status: res.statusCode, message: res.statusMessage}))\n        onConnectionClosed()\n        return\n      }\n\n      // Handle HTTP redirects\n      if (res.statusCode === 301 || res.statusCode === 302 || res.statusCode === 307) {\n        if (!res.headers.location) {\n          // Server sent redirect response without Location header.\n          _emit('error', new Event('error', {status: res.statusCode, message: res.statusMessage}))\n          return\n        }\n        if (res.statusCode === 307) reconnectUrl = url\n        url = res.headers.location\n        process.nextTick(connect)\n        return\n      }\n\n      if (res.statusCode !== 200) {\n        _emit('error', new Event('error', {status: res.statusCode, message: res.statusMessage}))\n        return self.close()\n      }\n\n      readyState = EventSource.OPEN\n      res.on('close', function () {\n        res.removeAllListeners('close')\n        res.removeAllListeners('end')\n        onConnectionClosed()\n      })\n\n      res.on('end', function () {\n        res.removeAllListeners('close')\n        res.removeAllListeners('end')\n        onConnectionClosed()\n      })\n      _emit('open', new Event('open'))\n\n      // text/event-stream parser adapted from webkit's\n      // Source/WebCore/page/EventSource.cpp\n      var isFirst = true\n      var buf\n      var startingPos = 0\n      var startingFieldLength = -1\n      res.on('data', function (chunk) {\n        buf = buf ? Buffer.concat([buf, chunk]) : chunk\n        if (isFirst && hasBom(buf)) {\n          buf = buf.slice(bom.length)\n        }\n\n        isFirst = false\n        var pos = 0\n        var length = buf.length\n\n        while (pos < length) {\n          if (discardTrailingNewline) {\n            if (buf[pos] === lineFeed) {\n              ++pos\n            }\n            discardTrailingNewline = false\n          }\n\n          var lineLength = -1\n          var fieldLength = startingFieldLength\n          var c\n\n          for (var i = startingPos; lineLength < 0 && i < length; ++i) {\n            c = buf[i]\n            if (c === colon) {\n              if (fieldLength < 0) {\n                fieldLength = i - pos\n              }\n            } else if (c === carriageReturn) {\n              discardTrailingNewline = true\n              lineLength = i - pos\n            } else if (c === lineFeed) {\n              lineLength = i - pos\n            }\n          }\n\n          if (lineLength < 0) {\n            startingPos = length - pos\n            startingFieldLength = fieldLength\n            break\n          } else {\n            startingPos = 0\n            startingFieldLength = -1\n          }\n\n          parseEventStreamLine(buf, pos, fieldLength, lineLength)\n\n          pos += lineLength + 1\n        }\n\n        if (pos === length) {\n          buf = void 0\n        } else if (pos > 0) {\n          buf = buf.slice(pos)\n        }\n      })\n    })\n\n    req.on('error', function (err) {\n      self.connectionInProgress = false\n      onConnectionClosed(err.message)\n    })\n\n    if (req.setNoDelay) req.setNoDelay(true)\n    req.end()\n  }\n\n  connect()\n\n  function _emit () {\n    if (self.listeners(arguments[0]).length > 0) {\n      self.emit.apply(self, arguments)\n    }\n  }\n\n  this._close = function () {\n    if (readyState === EventSource.CLOSED) return\n    readyState = EventSource.CLOSED\n    if (req.abort) req.abort()\n    if (req.xhr && req.xhr.abort) req.xhr.abort()\n  }\n\n  function parseEventStreamLine (buf, pos, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        var type = eventName || 'message'\n        _emit(type, new MessageEvent(type, {\n          data: data.slice(0, -1), // remove trailing newline\n          lastEventId: lastEventId,\n          origin: original(url)\n        }))\n        data = ''\n      }\n      eventName = void 0\n    } else if (fieldLength > 0) {\n      var noValue = fieldLength < 0\n      var step = 0\n      var field = buf.slice(pos, pos + (noValue ? lineLength : fieldLength)).toString()\n\n      if (noValue) {\n        step = lineLength\n      } else if (buf[pos + fieldLength + 1] !== space) {\n        step = fieldLength + 1\n      } else {\n        step = fieldLength + 2\n      }\n      pos += step\n\n      var valueLength = lineLength - step\n      var value = buf.slice(pos, pos + valueLength).toString()\n\n      if (field === 'data') {\n        data += value + '\\n'\n      } else if (field === 'event') {\n        eventName = value\n      } else if (field === 'id') {\n        lastEventId = value\n      } else if (field === 'retry') {\n        var retry = parseInt(value, 10)\n        if (!Number.isNaN(retry)) {\n          self.reconnectInterval = retry\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = EventSource\n\nutil.inherits(EventSource, events.EventEmitter)\nEventSource.prototype.constructor = EventSource; // make stacktraces readable\n\n['open', 'error', 'message'].forEach(function (method) {\n  Object.defineProperty(EventSource.prototype, 'on' + method, {\n    /**\n     * Returns the current listener\n     *\n     * @return {Mixed} the set function or undefined\n     * @api private\n     */\n    get: function get () {\n      var listener = this.listeners(method)[0]\n      return listener ? (listener._listener ? listener._listener : listener) : undefined\n    },\n\n    /**\n     * Start listening for events\n     *\n     * @param {Function} listener the listener\n     * @return {Mixed} the set function or undefined\n     * @api private\n     */\n    set: function set (listener) {\n      this.removeAllListeners(method)\n      this.addEventListener(method, listener)\n    }\n  })\n})\n\n/**\n * Ready states\n */\nObject.defineProperty(EventSource, 'CONNECTING', {enumerable: true, value: 0})\nObject.defineProperty(EventSource, 'OPEN', {enumerable: true, value: 1})\nObject.defineProperty(EventSource, 'CLOSED', {enumerable: true, value: 2})\n\nEventSource.prototype.CONNECTING = 0\nEventSource.prototype.OPEN = 1\nEventSource.prototype.CLOSED = 2\n\n/**\n * Closes the connection, if one is made, and sets the readyState attribute to 2 (closed)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventSource/close\n * @api public\n */\nEventSource.prototype.close = function () {\n  this._close()\n}\n\n/**\n * Emulates the W3C Browser based WebSocket interface using addEventListener.\n *\n * @param {String} type A string representing the event type to listen out for\n * @param {Function} listener callback\n * @see https://developer.mozilla.org/en/DOM/element.addEventListener\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\nEventSource.prototype.addEventListener = function addEventListener (type, listener) {\n  if (typeof listener === 'function') {\n    // store a reference so we can return the original function again\n    listener._listener = listener\n    this.on(type, listener)\n  }\n}\n\n/**\n * Emulates the W3C Browser based WebSocket interface using dispatchEvent.\n *\n * @param {Event} event An event to be dispatched\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n * @api public\n */\nEventSource.prototype.dispatchEvent = function dispatchEvent (event) {\n  if (!event.type) {\n    throw new Error('UNSPECIFIED_EVENT_TYPE_ERR')\n  }\n  // if event is instance of an CustomEvent (or has 'details' property),\n  // send the detail object as the payload for the event\n  this.emit(event.type, event.detail)\n}\n\n/**\n * Emulates the W3C Browser based WebSocket interface using removeEventListener.\n *\n * @param {String} type A string representing the event type to remove\n * @param {Function} listener callback\n * @see https://developer.mozilla.org/en/DOM/element.removeEventListener\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\nEventSource.prototype.removeEventListener = function removeEventListener (type, listener) {\n  if (typeof listener === 'function') {\n    listener._listener = undefined\n    this.removeListener(type, listener)\n  }\n}\n\n/**\n * W3C Event\n *\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#interface-Event\n * @api private\n */\nfunction Event (type, optionalProperties) {\n  Object.defineProperty(this, 'type', { writable: false, value: type, enumerable: true })\n  if (optionalProperties) {\n    for (var f in optionalProperties) {\n      if (optionalProperties.hasOwnProperty(f)) {\n        Object.defineProperty(this, f, { writable: false, value: optionalProperties[f], enumerable: true })\n      }\n    }\n  }\n}\n\n/**\n * W3C MessageEvent\n *\n * @see http://www.w3.org/TR/webmessaging/#event-definitions\n * @api private\n */\nfunction MessageEvent (type, eventInitDict) {\n  Object.defineProperty(this, 'type', { writable: false, value: type, enumerable: true })\n  for (var f in eventInitDict) {\n    if (eventInitDict.hasOwnProperty(f)) {\n      Object.defineProperty(this, f, { writable: false, value: eventInitDict[f], enumerable: true })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}