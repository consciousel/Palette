{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionCallBuilder = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar call_builder_1 = require(\"./call_builder\");\n\nvar TransactionCallBuilder = function (_super) {\n  tslib_1.__extends(TransactionCallBuilder, _super);\n\n  function TransactionCallBuilder(serverUrl) {\n    var _this = _super.call(this, serverUrl) || this;\n\n    _this.url.segment(\"transactions\");\n\n    return _this;\n  }\n\n  TransactionCallBuilder.prototype.transaction = function (transactionId) {\n    var builder = new call_builder_1.CallBuilder(this.url.clone());\n    builder.filter.push([transactionId]);\n    return builder;\n  };\n\n  TransactionCallBuilder.prototype.forAccount = function (accountId) {\n    this.filter.push([\"accounts\", accountId, \"transactions\"]);\n    return this;\n  };\n\n  TransactionCallBuilder.prototype.forClaimableBalance = function (claimableBalanceId) {\n    this.filter.push([\"claimable_balances\", claimableBalanceId, \"transactions\"]);\n    return this;\n  };\n\n  TransactionCallBuilder.prototype.forLedger = function (sequence) {\n    var ledgerSequence = typeof sequence === \"number\" ? sequence.toString() : sequence;\n    this.filter.push([\"ledgers\", ledgerSequence, \"transactions\"]);\n    return this;\n  };\n\n  TransactionCallBuilder.prototype.includeFailed = function (value) {\n    this.url.setQuery(\"include_failed\", value.toString());\n    return this;\n  };\n\n  return TransactionCallBuilder;\n}(call_builder_1.CallBuilder);\n\nexports.TransactionCallBuilder = TransactionCallBuilder;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AAaA;AAA4CA;;AAG1C,kCAAYC,SAAZ,EAA0B;AAA1B,gBACEC,kBAAMD,SAAN,KAAgB,IADlB;;AAEEE,SAAI,CAACC,GAAL,CAASC,OAAT,CAAiB,cAAjB;;;AACD;;AAQMC,iDAAP,UACEC,aADF,EACuB;AAErB,QAAMC,OAAO,GAAG,IAAIC,0BAAJ,CACd,KAAKL,GAAL,CAASM,KAAT,EADc,CAAhB;AAGAF,WAAO,CAACG,MAAR,CAAeC,IAAf,CAAoB,CAACL,aAAD,CAApB;AACA,WAAOC,OAAP;AACD,GARM;;AAgBAF,gDAAP,UAAkBO,SAAlB,EAAmC;AACjC,SAAKF,MAAL,CAAYC,IAAZ,CAAiB,CAAC,UAAD,EAAaC,SAAb,EAAwB,cAAxB,CAAjB;AACA,WAAO,IAAP;AACD,GAHM;;AAWAP,yDAAP,UAA2BQ,kBAA3B,EAAqD;AACnD,SAAKH,MAAL,CAAYC,IAAZ,CAAiB,CAAC,oBAAD,EAAuBE,kBAAvB,EAA2C,cAA3C,CAAjB;AACA,WAAO,IAAP;AACD,GAHM;;AAWAR,+CAAP,UAAiBS,QAAjB,EAA0C;AACxC,QAAMC,cAAc,GAClB,OAAOD,QAAP,KAAoB,QAApB,GAA+BA,QAAQ,CAACE,QAAT,EAA/B,GAAqDF,QADvD;AAGA,SAAKJ,MAAL,CAAYC,IAAZ,CAAiB,CAAC,SAAD,EAAYI,cAAZ,EAA4B,cAA5B,CAAjB;AACA,WAAO,IAAP;AACD,GANM;;AAcAV,mDAAP,UAAqBY,KAArB,EAAmC;AACjC,SAAKd,GAAL,CAASe,QAAT,CAAkB,gBAAlB,EAAoCD,KAAK,CAACD,QAAN,EAApC;AACA,WAAO,IAAP;AACD,GAHM;;AAIT;AAtEA,EAA4CR,0BAA5C;;AAAaW","names":["tslib_1","serverUrl","_super","_this","url","segment","TransactionCallBuilder","transactionId","builder","call_builder_1","clone","filter","push","accountId","claimableBalanceId","sequence","ledgerSequence","toString","value","setQuery","exports"],"sourceRoot":"","sources":["../src/transaction_call_builder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}