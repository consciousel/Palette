{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BigIntValue = exports.BigUIntValue = exports.I64Value = exports.U64Value = exports.I32Value = exports.U32Value = exports.I16Value = exports.U16Value = exports.I8Value = exports.U8Value = exports.NumericalValue = exports.BigIntType = exports.BigUIntType = exports.I64Type = exports.U64Type = exports.I32Type = exports.U32Type = exports.I16Type = exports.U16Type = exports.I8Type = exports.U8Type = exports.NumericalType = void 0;\n\nconst errors = __importStar(require(\"../../errors\"));\n\nconst utils_1 = require(\"../../utils\");\n\nconst types_1 = require(\"./types\");\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nclass NumericalType extends types_1.PrimitiveType {\n  constructor(name, sizeInBytes, withSign) {\n    super(name);\n    this.sizeInBytes = sizeInBytes;\n    this.withSign = withSign;\n  }\n\n  hasFixedSize() {\n    return this.sizeInBytes ? true : false;\n  }\n\n  hasArbitrarySize() {\n    return !this.hasFixedSize();\n  }\n\n}\n\nexports.NumericalType = NumericalType;\n\nclass U8Type extends NumericalType {\n  constructor() {\n    super(\"u8\", 1, false);\n  }\n\n}\n\nexports.U8Type = U8Type;\n\nclass I8Type extends NumericalType {\n  constructor() {\n    super(\"i8\", 1, true);\n  }\n\n}\n\nexports.I8Type = I8Type;\n\nclass U16Type extends NumericalType {\n  constructor() {\n    super(\"u16\", 2, false);\n  }\n\n}\n\nexports.U16Type = U16Type;\n\nclass I16Type extends NumericalType {\n  constructor() {\n    super(\"i16\", 2, true);\n  }\n\n}\n\nexports.I16Type = I16Type;\n\nclass U32Type extends NumericalType {\n  constructor() {\n    super(\"u32\", 4, false);\n  }\n\n}\n\nexports.U32Type = U32Type;\n\nclass I32Type extends NumericalType {\n  constructor() {\n    super(\"i32\", 4, true);\n  }\n\n}\n\nexports.I32Type = I32Type;\n\nclass U64Type extends NumericalType {\n  constructor() {\n    super(\"u64\", 8, false);\n  }\n\n}\n\nexports.U64Type = U64Type;\n\nclass I64Type extends NumericalType {\n  constructor() {\n    super(\"i64\", 8, true);\n  }\n\n}\n\nexports.I64Type = I64Type;\n\nclass BigUIntType extends NumericalType {\n  constructor() {\n    super(\"BigUint\", 0, false);\n  }\n\n}\n\nexports.BigUIntType = BigUIntType;\n\nclass BigIntType extends NumericalType {\n  constructor() {\n    super(\"Bigint\", 0, true);\n  }\n\n}\n\nexports.BigIntType = BigIntType;\n/**\n * A numerical value fed to or fetched from a Smart Contract contract, as a strongly-typed, immutable abstraction.\n */\n\nclass NumericalValue extends types_1.PrimitiveValue {\n  constructor(type, value) {\n    super(type);\n    utils_1.guardType(\"type\", NumericalType, type, false);\n\n    if (!(value instanceof bignumber_js_1.default)) {\n      throw new errors.ErrInvalidArgument(\"value\", value, \"not a big number\");\n    }\n\n    this.value = value;\n    this.sizeInBytes = type.sizeInBytes;\n    this.withSign = type.withSign;\n\n    if (!this.withSign && value.isNegative()) {\n      throw new errors.ErrInvalidArgument(\"value\", value.toString(10), \"negative, but type is unsigned\");\n    }\n  }\n  /**\n   * Returns whether two objects have the same value.\n   *\n   * @param other another NumericalValue\n   */\n\n\n  equals(other) {\n    return this.value.isEqualTo(other.value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.NumericalValue = NumericalValue;\n\nclass U8Value extends NumericalValue {\n  constructor(value) {\n    super(new U8Type(), new bignumber_js_1.default(value));\n  }\n\n}\n\nexports.U8Value = U8Value;\n\nclass I8Value extends NumericalValue {\n  constructor(value) {\n    super(new I8Type(), new bignumber_js_1.default(value));\n  }\n\n}\n\nexports.I8Value = I8Value;\n\nclass U16Value extends NumericalValue {\n  constructor(value) {\n    super(new U16Type(), new bignumber_js_1.default(value));\n  }\n\n}\n\nexports.U16Value = U16Value;\n\nclass I16Value extends NumericalValue {\n  constructor(value) {\n    super(new I16Type(), new bignumber_js_1.default(value));\n  }\n\n}\n\nexports.I16Value = I16Value;\n\nclass U32Value extends NumericalValue {\n  constructor(value) {\n    super(new U32Type(), new bignumber_js_1.default(value));\n  }\n\n}\n\nexports.U32Value = U32Value;\n\nclass I32Value extends NumericalValue {\n  constructor(value) {\n    super(new I32Type(), new bignumber_js_1.default(value));\n  }\n\n}\n\nexports.I32Value = I32Value;\n\nclass U64Value extends NumericalValue {\n  constructor(value) {\n    super(new U64Type(), value);\n  }\n\n}\n\nexports.U64Value = U64Value;\n\nclass I64Value extends NumericalValue {\n  constructor(value) {\n    super(new I64Type(), value);\n  }\n\n}\n\nexports.I64Value = I64Value;\n\nclass BigUIntValue extends NumericalValue {\n  constructor(value) {\n    super(new BigUIntType(), value);\n  }\n\n}\n\nexports.BigUIntValue = BigUIntValue;\n\nclass BigIntValue extends NumericalValue {\n  constructor(value) {\n    super(new BigIntType(), value);\n  }\n\n}\n\nexports.BigIntValue = BigIntValue;","map":{"version":3,"mappings":"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","names":["NumericalType","types_1","constructor","name","sizeInBytes","withSign","hasFixedSize","hasArbitrarySize","exports","U8Type","I8Type","U16Type","I16Type","U32Type","I32Type","U64Type","I64Type","BigUIntType","BigIntType","NumericalValue","type","value","utils_1","bignumber_js_1","errors","ErrInvalidArgument","isNegative","toString","equals","other","isEqualTo","valueOf","U8Value","I8Value","U16Value","I16Value","U32Value","I32Value","U64Value","I64Value","BigUIntValue","BigIntValue"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/numerical.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}