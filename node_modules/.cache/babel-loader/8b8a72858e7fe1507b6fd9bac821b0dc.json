{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masho\\\\OneDrive\\\\Desktop\\\\Blockchain\\\\Biconomy\\\\Projects\\\\NFT_minter\\\\src\\\\utils\\\\IPFSUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { ImageUpload } from 'react-ipfs-uploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UploadToIPFS = props => {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState('');\n  const assetUrl = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" NFT Asset Upload \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n      setUrl: setImageUrl,\n      ref: assetUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"AssetUrl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), \" : \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: imageUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadToIPFS, \"S2r2UCAANHTsaeWiZjk7kQgvREg=\");\n\n_c = UploadToIPFS;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadToIPFS\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/IPFSUpload.js"],"names":["React","useState","useRef","ImageUpload","UploadToIPFS","props","imageUrl","setImageUrl","assetUrl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMO,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEK,WAArB;AAAkC,MAAA,GAAG,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,sBAGsB;AACd,MAAA,IAAI,EAAEF,QADQ;AAEd,MAAA,MAAM,EAAC,QAFO;AAGd,MAAA,GAAG,EAAC,qBAHU;AAAA,gBAKbA;AALa;AAAA;AAAA;AAAA;AAAA,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlBM;;GAAMF,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { ImageUpload } from 'react-ipfs-uploader'\r\n\r\nexport const UploadToIPFS = (props) => {\r\n    const [imageUrl, setImageUrl] = useState('')\r\n\r\n    const assetUrl = useRef(null)\r\n\r\n    return (\r\n        <div>\r\n            <h2> NFT Asset Upload </h2>\r\n            <ImageUpload setUrl={setImageUrl} ref={assetUrl} />\r\n            <b>AssetUrl</b> : <a\r\n                href={imageUrl}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n            >\r\n                {imageUrl}\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}