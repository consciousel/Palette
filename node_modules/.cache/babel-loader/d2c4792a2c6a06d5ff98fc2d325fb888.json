{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masho\\\\OneDrive\\\\Desktop\\\\Blockchain\\\\Biconomy\\\\Projects\\\\NFT_minter\\\\src\\\\Minter.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected, mintNFT } from \"./utils/interact.js\";\nimport { onAddAttributesPressed, onMoreTraitsPressed } from \"./utils/attributes.js\";\nimport { ImageUpload } from 'react-ipfs-uploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Minter = props => {\n  _s();\n\n  //State variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [collection, setCollection] = useState(\"\");\n  const [customTraitType1, setCustomTraitType1] = useState(\"\");\n  const [customTrait1, setCustomTrait1] = useState(\"\");\n  const [customTraitType2, setCustomTraitType2] = useState(\"\");\n  const [customTrait2, setCustomTrait2] = useState(\"\");\n  const [customTraitType3, setCustomTraitType3] = useState(\"\");\n  const [customTrait3, setCustomTrait3] = useState(\"\");\n  const [customTraitType4, setCustomTraitType4] = useState(\"\");\n  const [customTrait4, setCustomTrait4] = useState(\"\");\n  const [customTraitType5, setCustomTraitType5] = useState(\"\");\n  const [customTrait5, setCustomTrait5] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchAccountData() {\n      const {\n        address,\n        status\n      } = await getCurrentWalletConnected();\n      setWallet(address);\n      setStatus(status);\n    }\n\n    fetchAccountData();\n    addWalletListener();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    const urlOfLastUpload = imageUrl;\n    console.log(name, description, artist, urlOfLastUpload, attributes);\n    const {\n      status\n    } = await mintNFT(name, description, artist, urlOfLastUpload, attributes);\n    setStatus(status);\n  };\n\n  const onAddAttributesPressed = async () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"Attributes\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83E\\uDD14 Collection: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Put your cool NFT collection name here!!\",\n            onChange: event => setCollection(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u270D\\uFE0F Trait Type 1: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"e.g. Genre;)\",\n            onChange: event => setCustomTraitType1(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u270D\\uFE0F Value: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"e.g. Contemporary Art;)\",\n            onChange: event => setCustomTrait1(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u270D\\uFE0F Trait Type 2: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"e.g. Background;)\",\n            onChange: event => setCustomTraitType2(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u270D\\uFE0F Value: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"e.g. Green;)\",\n            onChange: event => setCustomTrait2(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"attributesButton\",\n          onClick: onMoreTraitsPressed,\n          children: \"Add More Traits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  };\n\n  const onMoreTraitsPressed = async () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Attributes\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u270D\\uFE0F Trait Type 3: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"e.g. Outfit;)\",\n          onChange: event => setCustomTraitType3(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u270D\\uFE0F Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"e.g. Tuxido;)\",\n          onChange: event => setCustomTrait3(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u270D\\uFE0F Trait Type 4: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"e.g. Face;)\",\n          onChange: event => setCustomTraitType4(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u270D\\uFE0F Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"e.g. Pirate;)\",\n          onChange: event => setCustomTrait4(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u270D\\uFE0F Trait Type 5: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"e.g. Special Effects;)\",\n          onChange: event => setCustomTraitType5(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u270D\\uFE0F Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"e.g. Access to exclusive event;)\",\n          onChange: event => setCustomTrait5(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Fill in the details of your NFT in the text-fields above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Minter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"\\uD83C\\uDFA8 Palette NFT Minter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Simply upload your asset/art; fill in the details for your NFT; then press \\\"Mint.\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \" NFT ASSET UPLOAD \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        setUrl: setImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"AssetUrl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), \" :\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: imageUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83E\\uDD14 Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. My first NFT!\",\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u270D\\uFE0F Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. Even cooler than cryptokitties ;)\",\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u270D\\uFE0F Artist: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. Vincent Van Gogh;)\",\n        onChange: event => setArtist(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"attributesButton\",\n      onClick: onAddAttributesPressed,\n      children: \"Add Attributes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"mintButton\",\n      onClick: onMintPressed,\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Minter, \"h3NImtgEZO2v4l7UHW51Ky5k44k=\");\n\n_c = Minter;\nexport default Minter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minter\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/Minter.js"],"names":["useEffect","useState","connectWallet","getCurrentWalletConnected","mintNFT","onAddAttributesPressed","onMoreTraitsPressed","ImageUpload","Minter","props","walletAddress","setWallet","status","setStatus","name","setName","collection","setCollection","customTraitType1","setCustomTraitType1","customTrait1","setCustomTrait1","customTraitType2","setCustomTraitType2","customTrait2","setCustomTrait2","customTraitType3","setCustomTraitType3","customTrait3","setCustomTrait3","customTraitType4","setCustomTraitType4","customTrait4","setCustomTrait4","customTraitType5","setCustomTraitType5","customTrait5","setCustomTrait5","description","setDescription","artist","setArtist","imageUrl","setImageUrl","fetchAccountData","address","addWalletListener","connectWalletPressed","walletResponse","onMintPressed","urlOfLastUpload","console","log","attributes","event","target","value","window","ethereum","on","accounts","length","String","substring"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { \r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n  mintNFT\r\n} from \"./utils/interact.js\";\r\nimport { \r\n  onAddAttributesPressed,\r\n  onMoreTraitsPressed\r\n} from \"./utils/attributes.js\"\r\nimport { ImageUpload } from 'react-ipfs-uploader'\r\n\r\nconst Minter = (props) => {\r\n\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [collection, setCollection] = useState(\"\");\r\n  const [customTraitType1, setCustomTraitType1] = useState(\"\");\r\n  const [customTrait1, setCustomTrait1] = useState(\"\");\r\n  const [customTraitType2, setCustomTraitType2] = useState(\"\");\r\n  const [customTrait2, setCustomTrait2] = useState(\"\");\r\n  const [customTraitType3, setCustomTraitType3] = useState(\"\");\r\n  const [customTrait3, setCustomTrait3] = useState(\"\");\r\n  const [customTraitType4, setCustomTraitType4] = useState(\"\");\r\n  const [customTrait4, setCustomTrait4] = useState(\"\");\r\n  const [customTraitType5, setCustomTraitType5] = useState(\"\");\r\n  const [customTrait5, setCustomTrait5] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchAccountData(){\r\n      const {address, status} = await getCurrentWalletConnected();\r\n      setWallet(address)\r\n      setStatus(status);\r\n    }\r\n    fetchAccountData();\r\n\r\n    addWalletListener();\r\n  },[]);\r\n\r\n  const connectWalletPressed = async () => { \r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n  const onMintPressed = async () => { \r\n    const urlOfLastUpload = imageUrl;\r\n    console.log(name, description, artist, urlOfLastUpload, attributes)\r\n    const { status } = await mintNFT( name, description, artist, urlOfLastUpload, attributes);\r\n    setStatus(status);\r\n  };\r\n\r\n  const onAddAttributesPressed = async () => {\r\n    return (\r\n      <>\r\n      <div class=\"Attributes\">\r\n        <form>\r\n          <h4>🤔 Collection: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Put your cool NFT collection name here!!\"\r\n            onChange={(event) => setCollection(event.target.value)}\r\n          />\r\n          <h4>✍️ Trait Type 1: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Genre;)\"\r\n            onChange={(event) => setCustomTraitType1(event.target.value)}\r\n          />\r\n          <h4>✍️ Value: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Contemporary Art;)\"\r\n            onChange={(event) => setCustomTrait1(event.target.value)}\r\n          /> \r\n          <h4>✍️ Trait Type 2: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Background;)\"\r\n            onChange={(event) => setCustomTraitType2(event.target.value)}\r\n          />\r\n          <h4>✍️ Value: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Green;)\"\r\n            onChange={(event) => setCustomTrait2(event.target.value)}\r\n          />     \r\n        </form>\r\n        <button id=\"attributesButton\" onClick={onMoreTraitsPressed}>\r\n            Add More Traits\r\n        </button>\r\n      </div>\r\n      </>\r\n    );      \r\n  }\r\n\r\n  const onMoreTraitsPressed = async () => {\r\n    return (\r\n      <div class=\"Attributes\">\r\n        <form>\r\n          <h4>✍️ Trait Type 3: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Outfit;)\"\r\n            onChange={(event) => setCustomTraitType3(event.target.value)}\r\n          />\r\n          <h4>✍️ Value: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Tuxido;)\"\r\n            onChange={(event) => setCustomTrait3(event.target.value)}\r\n          /> \r\n          <h4>✍️ Trait Type 4: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Face;)\"\r\n            onChange={(event) => setCustomTraitType4(event.target.value)}\r\n          />\r\n          <h4>✍️ Value: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Pirate;)\"\r\n            onChange={(event) => setCustomTrait4(event.target.value)}\r\n          />\r\n          <h4>✍️ Trait Type 5: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Special Effects;)\"\r\n            onChange={(event) => setCustomTraitType5(event.target.value)}\r\n          />\r\n          <h4>✍️ Value: </h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"e.g. Access to exclusive event;)\"\r\n            onChange={(event) => setCustomTrait5(event.target.value)}\r\n          />       \r\n        </form>\r\n      </div>\r\n    );      \r\n  }\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"👆🏽 Fill in the details of your NFT in the text-fields above.\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n            You must install Metamask, a virtual Ethereum wallet, in your browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Minter\">\r\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\r\n        {walletAddress.length > 0 ? (\r\n          \"Connected: \" +\r\n          String(walletAddress).substring(0, 6) +\r\n          \"...\" +\r\n          String(walletAddress).substring(38)\r\n        ) : (\r\n          <span>Connect Wallet</span>\r\n        )}\r\n      </button>\r\n\r\n      <br></br>\r\n      <h1 id=\"title\">🎨 Palette NFT Minter</h1>\r\n      <p>\r\n        Simply upload your asset/art; fill in the details for your NFT; then press \"Mint.\"\r\n      </p>\r\n      \r\n      <div>\r\n        <h5> NFT ASSET UPLOAD </h5>\r\n          <ImageUpload setUrl={setImageUrl} />\r\n          <b>AssetUrl</b> : \r\n            <a\r\n              href={imageUrl}\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              {imageUrl} \r\n            </a>\r\n      </div>\r\n\r\n      <form>\r\n        <h2>🤔 Name: </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"e.g. My first NFT!\"\r\n          onChange={(event) => setName(event.target.value)}\r\n        />\r\n        <h2>✍️ Description: </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"e.g. Even cooler than cryptokitties ;)\"\r\n          onChange={(event) => setDescription(event.target.value)}\r\n        />\r\n        <h2>✍️ Artist: </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"e.g. Vincent Van Gogh;)\"\r\n          onChange={(event) => setArtist(event.target.value)}\r\n        />     \r\n      </form>\r\n      <button id=\"attributesButton\" onClick={onAddAttributesPressed}>\r\n          Add Attributes\r\n      </button>\r\n      <button id=\"mintButton\" onClick={onMintPressed}>\r\n        Mint NFT\r\n      </button>\r\n      <p id=\"status\">\r\n        {status}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Minter; "]},"metadata":{},"sourceType":"module"}