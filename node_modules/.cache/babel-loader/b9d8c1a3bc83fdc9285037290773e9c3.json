{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFqdnValidator from 'validator/lib/isFQDN';\nexport var IS_FQDN = 'isFqdn';\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\n\nexport function isFQDN(value, options) {\n  return typeof value === 'string' && isFqdnValidator(value, options);\n}\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\n\nexport function IsFQDN(options, validationOptions) {\n  return ValidateBy({\n    name: IS_FQDN,\n    constraints: [options],\n    validator: {\n      validate: function (value, args) {\n        return isFQDN(value, args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a valid domain name';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAGA,OAAO,IAAMC,OAAO,GAAG,QAAhB;AAEP;;;;;AAIA,OAAM,SAAUC,MAAV,CAAiBC,KAAjB,EAAiCC,OAAjC,EAAoE;AACxE,SAAO,OAAOD,KAAP,KAAiB,QAAjB,IAA6BH,eAAe,CAACG,KAAD,EAAQC,OAAR,CAAnD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,MAAV,CAAiBD,OAAjB,EAAsDE,iBAAtD,EAA2F;AAC/F,SAAOP,UAAU,CACf;AACEQ,QAAI,EAAEN,OADR;AAEEO,eAAW,EAAE,CAACJ,OAAD,CAFf;AAGEK,aAAS,EAAE;AACTC,cAAQ,EAAE,UAACP,KAAD,EAAQQ,IAAR,EAAY;AAAc,qBAAM,CAACR,KAAD,EAAQQ,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,CAAN;AAAkC,OAD7D;AAETI,oBAAc,EAAEd,YAAY,CAC1B,sBAAU;AAAI,yBAAU,GAAG,uCAAb;AAAoD,OADxC,EAE1BQ,iBAF0B;AAFnB;AAHb,GADe,EAYfA,iBAZe,CAAjB;AAcD","names":["buildMessage","ValidateBy","isFqdnValidator","IS_FQDN","isFQDN","value","options","IsFQDN","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsFQDN.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}