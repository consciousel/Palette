{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils = __importStar(require(\"./utils\"));\n\nconst common_1 = require(\"../common\");\n\nfunction createPaymentChannelCreateTransaction(account, paymentChannel) {\n  const txJSON = {\n    Account: account,\n    TransactionType: 'PaymentChannelCreate',\n    Amount: common_1.xrpToDrops(paymentChannel.amount),\n    Destination: paymentChannel.destination,\n    SettleDelay: paymentChannel.settleDelay,\n    PublicKey: paymentChannel.publicKey.toUpperCase()\n  };\n\n  if (paymentChannel.cancelAfter != null) {\n    txJSON.CancelAfter = common_1.iso8601ToRippleTime(paymentChannel.cancelAfter);\n  }\n\n  if (paymentChannel.sourceTag != null) {\n    txJSON.SourceTag = paymentChannel.sourceTag;\n  }\n\n  if (paymentChannel.destinationTag != null) {\n    txJSON.DestinationTag = paymentChannel.destinationTag;\n  }\n\n  return txJSON;\n}\n\nfunction preparePaymentChannelCreate(address, paymentChannelCreate) {\n  let instructions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  try {\n    common_1.validate.preparePaymentChannelCreate({\n      address,\n      paymentChannelCreate,\n      instructions\n    });\n    const txJSON = createPaymentChannelCreateTransaction(address, paymentChannelCreate);\n    return utils.prepareTransaction(txJSON, this, instructions);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexports.default = preparePaymentChannelCreate;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAcA,SAASA,qCAAT,CACEC,OADF,EAEEC,cAFF,EAEsC;AAEpC,QAAMC,MAAM,GAAQ;AAClBC,WAAO,EAAEH,OADS;AAElBI,mBAAe,EAAE,sBAFC;AAGlBC,UAAM,EAAEC,oBAAWL,cAAc,CAACM,MAA1B,CAHU;AAIlBC,eAAW,EAAEP,cAAc,CAACQ,WAJV;AAKlBC,eAAW,EAAET,cAAc,CAACU,WALV;AAMlBC,aAAS,EAAEX,cAAc,CAACY,SAAf,CAAyBC,WAAzB;AANO,GAApB;;AASA,MAAIb,cAAc,CAACc,WAAf,IAA8B,IAAlC,EAAwC;AACtCb,UAAM,CAACc,WAAP,GAAqBV,6BAAoBL,cAAc,CAACc,WAAnC,CAArB;AACD;;AACD,MAAId,cAAc,CAACgB,SAAf,IAA4B,IAAhC,EAAsC;AACpCf,UAAM,CAACgB,SAAP,GAAmBjB,cAAc,CAACgB,SAAlC;AACD;;AACD,MAAIhB,cAAc,CAACkB,cAAf,IAAiC,IAArC,EAA2C;AACzCjB,UAAM,CAACkB,cAAP,GAAwBnB,cAAc,CAACkB,cAAvC;AACD;;AAED,SAAOjB,MAAP;AACD;;AAED,SAASmB,2BAAT,CAEEC,OAFF,EAGEC,oBAHF,EAIiC;AAAA,MAA/BC,YAA+B,uEAAF,EAAE;;AAE/B,MAAI;AACFlB,sBAASe,2BAAT,CAAqC;AACnCC,aADmC;AAEnCC,0BAFmC;AAGnCC;AAHmC,KAArC;AAKA,UAAMtB,MAAM,GAAGH,qCAAqC,CAClDuB,OADkD,EAElDC,oBAFkD,CAApD;AAIA,WAAOE,KAAK,CAACC,kBAAN,CAAyBxB,MAAzB,EAAiC,IAAjC,EAAuCsB,YAAvC,CAAP;AACD,GAXD,CAWE,OAAOG,CAAP,EAAU;AACV,WAAOC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAP;AACD;AACF;;AAEDG,kBAAeT,2BAAf","names":["createPaymentChannelCreateTransaction","account","paymentChannel","txJSON","Account","TransactionType","Amount","common_1","amount","Destination","destination","SettleDelay","settleDelay","PublicKey","publicKey","toUpperCase","cancelAfter","CancelAfter","sourceTag","SourceTag","destinationTag","DestinationTag","preparePaymentChannelCreate","address","paymentChannelCreate","instructions","utils","prepareTransaction","e","Promise","reject","exports"],"sourceRoot":"","sources":["../../../src/transaction/payment-channel-create.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}