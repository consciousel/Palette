{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMongoIdValidator from 'validator/lib/isMongoId';\nexport var IS_MONGO_ID = 'isMongoId';\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\n\nexport function isMongoId(value) {\n  return typeof value === 'string' && isMongoIdValidator(value);\n}\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsMongoId(validationOptions) {\n  return ValidateBy({\n    name: IS_MONGO_ID,\n    validator: {\n      validate: function (value, args) {\n        return isMongoId(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a mongodb id';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AAEA,OAAO,IAAMC,WAAW,GAAG,WAApB;AAEP;;;;;AAIA,OAAM,SAAUC,SAAV,CAAoBC,KAApB,EAAkC;AACtC,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BH,kBAAkB,CAACG,KAAD,CAAtD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,SAAV,CAAoBC,iBAApB,EAAyD;AAC7D,SAAON,UAAU,CACf;AACEO,QAAI,EAAEL,WADR;AAEEM,aAAS,EAAE;AACTC,cAAQ,EAAE,UAACL,KAAD,EAAQM,IAAR,EAAY;AAAc,wBAAS,CAACN,KAAD,CAAT;AAAgB,OAD3C;AAETO,oBAAc,EAAEZ,YAAY,CAAC,sBAAU;AAAI,yBAAU,GAAG,gCAAb;AAA6C,OAA5D,EAA8DO,iBAA9D;AAFnB;AAFb,GADe,EAQfA,iBARe,CAAjB;AAUD","names":["buildMessage","ValidateBy","isMongoIdValidator","IS_MONGO_ID","isMongoId","value","IsMongoId","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsMongoId.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}