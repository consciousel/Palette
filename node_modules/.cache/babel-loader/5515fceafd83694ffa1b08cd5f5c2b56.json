{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Balance = void 0;\n\nconst bignumber_js_1 = require(\"bignumber.js\");\n\nconst errors_1 = require(\"./errors\");\n\nconst balanceBuilder_1 = require(\"./balanceBuilder\");\n/**\n * The number of decimals handled when working with EGLD or ESDT values.\n */\n\n\nconst DEFAULT_BIGNUMBER_DECIMAL_PLACES = 18;\nbignumber_js_1.BigNumber.set({\n  DECIMAL_PLACES: DEFAULT_BIGNUMBER_DECIMAL_PLACES,\n  ROUNDING_MODE: 1\n});\n/**\n * Balance, as an immutable object.\n */\n\nclass Balance {\n  /**\n   * Creates a Balance object.\n   */\n  constructor(token, nonce, value) {\n    this.nonce = new bignumber_js_1.BigNumber(0);\n    this.value = new bignumber_js_1.BigNumber(0);\n    this.token = token;\n    this.nonce = new bignumber_js_1.BigNumber(nonce);\n    this.value = new bignumber_js_1.BigNumber(value);\n  }\n  /**\n   * Creates a balance object from an EGLD value (denomination will be applied).\n   */\n\n\n  static egld(value) {\n    return balanceBuilder_1.Egld(value);\n  }\n  /**\n   * Creates a balance object from a string (with denomination included).\n   */\n\n\n  static fromString(value) {\n    return balanceBuilder_1.Egld.raw(value || \"0\");\n  }\n  /**\n   * Creates a zero-valued EGLD balance object.\n   */\n\n\n  static Zero() {\n    return balanceBuilder_1.Egld(0);\n  }\n\n  isZero() {\n    return this.value.isZero();\n  }\n\n  isEgld() {\n    return this.token.isEgld();\n  }\n\n  isSet() {\n    return !this.isZero();\n  }\n  /**\n   * Returns the string representation of the value (as EGLD currency).\n   */\n\n\n  toCurrencyString() {\n    return `${this.toDenominated()} ${this.token.getTokenIdentifier()}`;\n  }\n\n  toDenominated() {\n    return this.value.shiftedBy(-this.token.decimals).toFixed(this.token.decimals);\n  }\n  /**\n   * Returns the string representation of the value (its big-integer form).\n   */\n\n\n  toString() {\n    return this.value.toFixed();\n  }\n  /**\n   * Converts the balance to a pretty, plain JavaScript object.\n   */\n\n\n  toJSON() {\n    return {\n      asString: this.toString(),\n      asCurrencyString: this.toCurrencyString()\n    };\n  }\n\n  getNonce() {\n    return this.nonce;\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n  plus(other) {\n    this.checkSameToken(other);\n    return new Balance(this.token, this.nonce, this.value.plus(other.value));\n  }\n\n  minus(other) {\n    this.checkSameToken(other);\n    return new Balance(this.token, this.nonce, this.value.minus(other.value));\n  }\n\n  times(n) {\n    return new Balance(this.token, this.nonce, this.value.times(n));\n  }\n\n  div(n) {\n    return new Balance(this.token, this.nonce, this.value.div(n));\n  }\n\n  isEqualTo(other) {\n    this.checkSameToken(other);\n    return this.value.isEqualTo(other.value);\n  }\n\n  checkSameToken(other) {\n    if (this.token != other.token) {\n      throw new errors_1.ErrInvalidArgument(\"Different token types\");\n    }\n\n    if (!this.nonce.isEqualTo(other.nonce)) {\n      throw new errors_1.ErrInvalidArgument(\"Different nonces\");\n    }\n  }\n\n}\n\nexports.Balance = Balance;","map":{"version":3,"mappings":"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","names":["DEFAULT_BIGNUMBER_DECIMAL_PLACES","bignumber_js_1","set","DECIMAL_PLACES","ROUNDING_MODE","Balance","constructor","token","nonce","value","egld","balanceBuilder_1","fromString","raw","Zero","isZero","isEgld","isSet","toCurrencyString","toDenominated","getTokenIdentifier","shiftedBy","decimals","toFixed","toString","toJSON","asString","asCurrencyString","getNonce","valueOf","plus","other","checkSameToken","minus","times","n","div","isEqualTo","errors_1","exports"],"sourceRoot":"","sources":["../src/balance.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}