{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserVerifier = void 0;\n\nconst userKeys_1 = require(\"./userKeys\");\n/**\n * ed25519 signature verification\n */\n\n\nclass UserVerifier {\n  constructor(publicKey) {\n    this.publicKey = publicKey;\n  }\n\n  static fromAddress(address) {\n    let publicKey = new userKeys_1.UserPublicKey(address.pubkey());\n    return new UserVerifier(publicKey);\n  }\n  /**\n   * Verify a message's signature.\n   * @param message the message to be verified.\n   */\n\n\n  verify(message) {\n    return this.publicKey.verify(message.serializeForSigning(this.publicKey.toAddress()), Buffer.from(message.getSignature().hex(), 'hex'));\n  }\n\n}\n\nexports.UserVerifier = UserVerifier;","map":{"version":3,"mappings":";;;;;;;AAEA;AAEA;;;;;AAGA,MAAaA,YAAb,CAAyB;AAGvBC,cAAYC,SAAZ,EAAoC;AAClC,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;AAEiB,SAAXC,WAAW,CAACC,OAAD,EAAiB;AACjC,QAAIF,SAAS,GAAG,IAAIG,wBAAJ,CAAkBD,OAAO,CAACE,MAAR,EAAlB,CAAhB;AACA,WAAO,IAAIN,YAAJ,CAAiBE,SAAjB,CAAP;AACD;AAED;;;;;;AAIAK,QAAM,CAACC,OAAD,EAAqB;AACzB,WAAO,KAAKN,SAAL,CAAeK,MAAf,CACLC,OAAO,CAACC,mBAAR,CAA4B,KAAKP,SAAL,CAAeQ,SAAf,EAA5B,CADK,EAELC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACK,YAAR,GAAuBC,GAAvB,EAAZ,EAA0C,KAA1C,CAFK,CAAP;AAGD;;AApBsB;;AAAzBC","names":["UserVerifier","constructor","publicKey","fromAddress","address","userKeys_1","pubkey","verify","message","serializeForSigning","toAddress","Buffer","from","getSignature","hex","exports"],"sourceRoot":"","sources":["../../src/walletcore/userVerifier.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}