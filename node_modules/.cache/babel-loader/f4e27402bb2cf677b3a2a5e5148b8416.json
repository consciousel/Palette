{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UInt = void 0;\n\nvar serialized_type_1 = require(\"./serialized-type\");\n/**\n * Compare numbers and bigInts n1 and n2\n *\n * @param n1 First object to compare\n * @param n2 Second object to compare\n * @returns -1, 0, or 1, depending on how the two objects compare\n */\n\n\nfunction compare(n1, n2) {\n  return n1 < n2 ? -1 : n1 == n2 ? 0 : 1;\n}\n/**\n * Base class for serializing and deserializing unsigned integers.\n */\n\n\nvar UInt =\n/** @class */\nfunction (_super) {\n  __extends(UInt, _super);\n\n  function UInt(bytes) {\n    return _super.call(this, bytes) || this;\n  }\n  /**\n   * Overload of compareTo for Comparable\n   *\n   * @param other other UInt to compare this to\n   * @returns -1, 0, or 1 depending on how the objects relate to each other\n   */\n\n\n  UInt.prototype.compareTo = function (other) {\n    return compare(this.valueOf(), other.valueOf());\n  };\n  /**\n   * Convert a UInt object to JSON\n   *\n   * @returns number or string represented by this.bytes\n   */\n\n\n  UInt.prototype.toJSON = function () {\n    var val = this.valueOf();\n    return typeof val === 'number' ? val : val.toString();\n  };\n\n  return UInt;\n}(serialized_type_1.Comparable);\n\nexports.UInt = UInt;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAGA;;;;;;;;;AAOA,SAASA,OAAT,CACEC,EADF,EAEEC,EAFF,EAEgC;AAE9B,SAAOD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,IAAIC,EAAN,GAAW,CAAX,GAAe,CAArC;AACD;AAED;;;;;AAGA;AAAA;AAAA;AAA4BC;;AAG1B,gBAAYC,KAAZ,EAAyB;WACvBC,kBAAMD,KAAN,KAAY;AACb;AAED;;;;;;;;AAMAE,uCAAUC,KAAV,EAAqB;AACnB,WAAOP,OAAO,CAAC,KAAKQ,OAAL,EAAD,EAAiBD,KAAK,CAACC,OAAN,EAAjB,CAAd;AACD,GAFD;AAIA;;;;;;;AAKAF;AACE,QAAMG,GAAG,GAAG,KAAKD,OAAL,EAAZ;AACA,WAAO,OAAOC,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCA,GAAG,CAACC,QAAJ,EAAvC;AACD,GAHD;;AAWF;AAjCA,EAA4BC,4BAA5B;;AAmCSC","names":["compare","n1","n2","__extends","bytes","_super","UInt","other","valueOf","val","toString","serialized_type_1","exports"],"sourceRoot":"","sources":["../../src/types/uint.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}