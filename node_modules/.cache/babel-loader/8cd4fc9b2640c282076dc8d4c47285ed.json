{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst common_1 = require(\"../common\");\n\nfunction getAccountObjects(address) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield this.request('account_objects', common_1.removeUndefined({\n      account: address,\n      type: options.type,\n      ledger_hash: options.ledgerHash,\n      ledger_index: options.ledgerIndex,\n      limit: options.limit,\n      marker: options.marker\n    }));\n    return response;\n  });\n}\n\nexports.default = getAccountObjects;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAOA,SAA8BA,iBAA9B,CAEEC,OAFF,EAGwC;AAAA,MAAtCC,OAAsC,uEAAF,EAAE;;AAMtC,UAAMC,QAAQ,GAAG,MAAM,KAAKC,OAAL,CACrB,iBADqB,EAErBC,yBAAgB;AACdC,aAAO,EAAEL,OADK;AAEdM,UAAI,EAAEL,OAAO,CAACK,IAFA;AAGdC,iBAAW,EAAEN,OAAO,CAACO,UAHP;AAIdC,kBAAY,EAAER,OAAO,CAACS,WAJR;AAKdC,WAAK,EAAEV,OAAO,CAACU,KALD;AAMdC,YAAM,EAAEX,OAAO,CAACW;AANF,KAAhB,CAFqB,CAAvB;AAYA,WAAOV,QAAP;AACD;AAAA;;AAtBDW","names":["getAccountObjects","address","options","response","request","common_1","account","type","ledger_hash","ledgerHash","ledger_index","ledgerIndex","limit","marker","exports"],"sourceRoot":"","sources":["../../../src/ledger/accountobjects.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}