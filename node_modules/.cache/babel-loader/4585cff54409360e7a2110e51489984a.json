{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = __importStar(require(\"lodash\"));\n\nconst assert = __importStar(require(\"assert\"));\n\nconst utils = __importStar(require(\"./utils\"));\n\nconst common_1 = require(\"../../common\");\n\nconst amount_1 = __importDefault(require(\"./amount\"));\n\nfunction isNoDirectRipple(tx) {\n  return (tx.Flags & common_1.txFlags.Payment.NoRippleDirect) !== 0;\n}\n\nfunction isQualityLimited(tx) {\n  return (tx.Flags & common_1.txFlags.Payment.LimitQuality) !== 0;\n}\n\nfunction removeGenericCounterparty(amount, address) {\n  return amount.counterparty === address ? _.omit(amount, 'counterparty') : amount;\n}\n\nfunction parsePayment(tx) {\n  assert.ok(tx.TransactionType === 'Payment');\n  const source = {\n    address: tx.Account,\n    maxAmount: removeGenericCounterparty(amount_1.default(tx.SendMax || tx.Amount), tx.Account),\n    tag: tx.SourceTag\n  };\n  const destination = {\n    address: tx.Destination,\n    tag: tx.DestinationTag\n  };\n  return common_1.removeUndefined({\n    source: common_1.removeUndefined(source),\n    destination: common_1.removeUndefined(destination),\n    memos: utils.parseMemos(tx),\n    invoiceID: tx.InvoiceID,\n    paths: tx.Paths ? JSON.stringify(tx.Paths) : undefined,\n    allowPartialPayment: utils.isPartialPayment(tx) || undefined,\n    noDirectRipple: isNoDirectRipple(tx) || undefined,\n    limitQuality: isQualityLimited(tx) || undefined\n  });\n}\n\nexports.default = parsePayment;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,SAASA,gBAAT,CAA0BC,EAA1B,EAA4B;AAC1B,SAAO,CAACA,EAAE,CAACC,KAAH,GAAWC,iBAAQC,OAAR,CAAgBC,cAA5B,MAAgD,CAAvD;AACD;;AAED,SAASC,gBAAT,CAA0BL,EAA1B,EAA4B;AAC1B,SAAO,CAACA,EAAE,CAACC,KAAH,GAAWC,iBAAQC,OAAR,CAAgBG,YAA5B,MAA8C,CAArD;AACD;;AAED,SAASC,yBAAT,CAAmCC,MAAnC,EAA2CC,OAA3C,EAAkD;AAChD,SAAOD,MAAM,CAACE,YAAP,KAAwBD,OAAxB,GACHE,CAAC,CAACC,IAAF,CAAOJ,MAAP,EAAe,cAAf,CADG,GAEHA,MAFJ;AAGD;;AAGD,SAASK,YAAT,CAAsBb,EAAtB,EAA6B;AAC3Bc,QAAM,CAACC,EAAP,CAAUf,EAAE,CAACgB,eAAH,KAAuB,SAAjC;AAEA,QAAMC,MAAM,GAAG;AACbR,WAAO,EAAET,EAAE,CAACkB,OADC;AAEbC,aAAS,EAAEZ,yBAAyB,CAClCa,iBAAYpB,EAAE,CAACqB,OAAH,IAAcrB,EAAE,CAACsB,MAA7B,CADkC,EAElCtB,EAAE,CAACkB,OAF+B,CAFvB;AAMbK,OAAG,EAAEvB,EAAE,CAACwB;AANK,GAAf;AASA,QAAMC,WAAW,GAGb;AACFhB,WAAO,EAAET,EAAE,CAAC0B,WADV;AAEFH,OAAG,EAAEvB,EAAE,CAAC2B;AAFN,GAHJ;AASA,SAAOzB,yBAAgB;AACrBe,UAAM,EAAEf,yBAAgBe,MAAhB,CADa;AAErBQ,eAAW,EAAEvB,yBAAgBuB,WAAhB,CAFQ;AAGrBG,SAAK,EAAEC,KAAK,CAACC,UAAN,CAAiB9B,EAAjB,CAHc;AAIrB+B,aAAS,EAAE/B,EAAE,CAACgC,SAJO;AAKrBC,SAAK,EAAEjC,EAAE,CAACkC,KAAH,GAAWC,IAAI,CAACC,SAAL,CAAepC,EAAE,CAACkC,KAAlB,CAAX,GAAsCG,SALxB;AAMrBC,uBAAmB,EAAET,KAAK,CAACU,gBAAN,CAAuBvC,EAAvB,KAA8BqC,SAN9B;AAOrBG,kBAAc,EAAEzC,gBAAgB,CAACC,EAAD,CAAhB,IAAwBqC,SAPnB;AAQrBI,gBAAY,EAAEpC,gBAAgB,CAACL,EAAD,CAAhB,IAAwBqC;AARjB,GAAhB,CAAP;AAUD;;AAEDK,kBAAe7B,YAAf","names":["isNoDirectRipple","tx","Flags","common_1","Payment","NoRippleDirect","isQualityLimited","LimitQuality","removeGenericCounterparty","amount","address","counterparty","_","omit","parsePayment","assert","ok","TransactionType","source","Account","maxAmount","amount_1","SendMax","Amount","tag","SourceTag","destination","Destination","DestinationTag","memos","utils","parseMemos","invoiceID","InvoiceID","paths","Paths","JSON","stringify","undefined","allowPartialPayment","isPartialPayment","noDirectRipple","limitQuality","exports"],"sourceRoot":"","sources":["../../../../src/ledger/parse/payment.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}