{"ast":null,"code":"/*\n  info from:\n    https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n*/\nvar common = {\n  name: 'Groestlcoin',\n  per1: 1e8,\n  unit: 'GRS',\n  messagePrefix: '\\x1CGroestlCoin Signed Message:\\n'\n};\nvar main = Object.assign({}, {\n  hashGenesisBlock: '00000ac5927c594d49cc0bdb81759d0da8297eb614683d3acb62f0703b639023',\n  // nDefaultPort\n  port: 1331,\n  portRpc: 1441,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd4b4bef9 // careful, sent over wire as little endian\n\n  },\n  bech32: 'grs',\n  // vSeeds\n  seedsDns: ['dnsseed1.groestlcoin.org', 'dnsseed2.groestlcoin.org', 'dnsseed3.groestlcoin.org', 'dnsseed4.groestlcoin.org'],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 17,\n    private: 0x80,\n    public: 0x24,\n    scripthash: 0x05\n  }\n}, common);\nvar test = Object.assign({}, {\n  hashGenesisBlock: '0x000000ffbb50fc9898cdd36ec163e6ba23230164c0052a28876255b7dcf2cd36',\n  port: 17777,\n  portRpc: 17766,\n  protocol: {\n    magic: 0x0709110b\n  },\n  bech32: 'tgrs',\n  seedsDns: ['testnet-seed1.groestlcoin.org', 'testnet-seed2.groestlcoin.org'],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common);\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0x000000ffbb50fc9898cdd36ec163e6ba23230164c0052a28876255b7dcf2cd36',\n  port: 18888,\n  portRpc: 18443,\n  protocol: {\n    magic: 0xdab5bffa\n  },\n  bech32: 'grsrt',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common);\nmodule.exports = {\n  main,\n  test,\n  regtest\n};","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/node_modules/coininfo/lib/coins/grs.js"],"names":["common","name","per1","unit","messagePrefix","main","Object","assign","hashGenesisBlock","port","portRpc","protocol","magic","bech32","seedsDns","versions","bip32","private","public","bip44","scripthash","test","regtest","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,aADK;AAEXC,EAAAA,IAAI,EAAE,GAFK;AAGXC,EAAAA,IAAI,EAAE,KAHK;AAIXC,EAAAA,aAAa,EAAE;AAJJ,CAAb;AAOA,IAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAC3BC,EAAAA,gBAAgB,EAAE,kEADS;AAE3B;AACAC,EAAAA,IAAI,EAAE,IAHqB;AAI3BC,EAAAA,OAAO,EAAE,IAJkB;AAK3BC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,KAAK,EAAE,UAFC,CAEU;;AAFV,GALiB;AAS3BC,EAAAA,MAAM,EAAE,KATmB;AAU3B;AACAC,EAAAA,QAAQ,EAAE,CACR,0BADQ,EAER,0BAFQ,EAGR,0BAHQ,EAIR,0BAJQ,CAXiB;AAiB3B;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,UADJ;AAELC,MAAAA,MAAM,EAAE;AAFH,KADC;AAKRC,IAAAA,KAAK,EAAE,EALC;AAMRF,IAAAA,OAAO,EAAE,IAND;AAORC,IAAAA,MAAM,EAAE,IAPA;AAQRE,IAAAA,UAAU,EAAE;AARJ;AAlBiB,CAAlB,EA4BRpB,MA5BQ,CAAX;AA8BA,IAAIqB,IAAI,GAAGf,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAC3BC,EAAAA,gBAAgB,EAAE,oEADS;AAE3BC,EAAAA,IAAI,EAAE,KAFqB;AAG3BC,EAAAA,OAAO,EAAE,KAHkB;AAI3BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AADC,GAJiB;AAO3BC,EAAAA,MAAM,EAAE,MAPmB;AAQ3BC,EAAAA,QAAQ,EAAE,CACR,+BADQ,EAER,+BAFQ,CARiB;AAY3BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,UADJ;AAELC,MAAAA,MAAM,EAAE;AAFH,KADC;AAKRC,IAAAA,KAAK,EAAE,CALC;AAMRF,IAAAA,OAAO,EAAE,IAND;AAORC,IAAAA,MAAM,EAAE,IAPA;AAQRE,IAAAA,UAAU,EAAE;AARJ;AAZiB,CAAlB,EAsBRpB,MAtBQ,CAAX;AAwBA,IAAIsB,OAAO,GAAGhB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAC9BC,EAAAA,gBAAgB,EAAE,oEADY;AAE9BC,EAAAA,IAAI,EAAE,KAFwB;AAG9BC,EAAAA,OAAO,EAAE,KAHqB;AAI9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AADC,GAJoB;AAO9BC,EAAAA,MAAM,EAAE,OAPsB;AAQ9BC,EAAAA,QAAQ,EAAE,EARoB;AAS9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,UADJ;AAELC,MAAAA,MAAM,EAAE;AAFH,KADC;AAKRC,IAAAA,KAAK,EAAE,CALC;AAMRF,IAAAA,OAAO,EAAE,IAND;AAORC,IAAAA,MAAM,EAAE,IAPA;AAQRE,IAAAA,UAAU,EAAE;AARJ;AAToB,CAAlB,EAmBXpB,MAnBW,CAAd;AAqBAuB,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,IADe;AAEfgB,EAAAA,IAFe;AAGfC,EAAAA;AAHe,CAAjB","sourcesContent":["/*\n  info from:\n    https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Groestlcoin',\n  per1: 1e8,\n  unit: 'GRS',\n  messagePrefix: '\\x1CGroestlCoin Signed Message:\\n'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '00000ac5927c594d49cc0bdb81759d0da8297eb614683d3acb62f0703b639023',\n  // nDefaultPort\n  port: 1331,\n  portRpc: 1441,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd4b4bef9 // careful, sent over wire as little endian\n  },\n  bech32: 'grs',\n  // vSeeds\n  seedsDns: [\n    'dnsseed1.groestlcoin.org',\n    'dnsseed2.groestlcoin.org',\n    'dnsseed3.groestlcoin.org',\n    'dnsseed4.groestlcoin.org'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 17,\n    private: 0x80,\n    public: 0x24,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '0x000000ffbb50fc9898cdd36ec163e6ba23230164c0052a28876255b7dcf2cd36',\n  port: 17777,\n  portRpc: 17766,\n  protocol: {\n    magic: 0x0709110b\n  },\n  bech32: 'tgrs',\n  seedsDns: [\n    'testnet-seed1.groestlcoin.org',\n    'testnet-seed2.groestlcoin.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0x000000ffbb50fc9898cdd36ec163e6ba23230164c0052a28876255b7dcf2cd36',\n  port: 18888,\n  portRpc: 18443,\n  protocol: {\n    magic: 0xdab5bffa\n  },\n  bech32: 'grsrt',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest\n}\n"]},"metadata":{},"sourceType":"script"}