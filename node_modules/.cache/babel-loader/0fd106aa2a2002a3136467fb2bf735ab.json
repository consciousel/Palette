{"ast":null,"code":"\"use strict\";\n\nconst events_1 = require(\"events\");\n\nclass WSWrapper extends events_1.EventEmitter {\n  constructor(url, _protocols, _websocketOptions) {\n    super();\n    this.setMaxListeners(Infinity);\n    this._ws = new WebSocket(url);\n\n    this._ws.onclose = () => {\n      this.emit('close');\n    };\n\n    this._ws.onopen = () => {\n      this.emit('open');\n    };\n\n    this._ws.onerror = error => {\n      this.emit('error', error);\n    };\n\n    this._ws.onmessage = message => {\n      this.emit('message', message.data);\n    };\n  }\n\n  close() {\n    if (this.readyState === 1) {\n      this._ws.close();\n    }\n  }\n\n  send(message) {\n    this._ws.send(message);\n  }\n\n  get readyState() {\n    return this._ws.readyState;\n  }\n\n}\n\nWSWrapper.CONNECTING = 0;\nWSWrapper.OPEN = 1;\nWSWrapper.CLOSING = 2;\nWSWrapper.CLOSED = 3;\nmodule.exports = WSWrapper;","map":{"version":3,"mappings":";;AAAA;;AAkBA,MAAMA,SAAN,SAAwBC,qBAAxB,CAAoC;AAOlCC,cAAYC,GAAZ,EAAiBC,UAAjB,EAAkCC,iBAAlC,EAAwD;AACtD;AACA,SAAKC,eAAL,CAAqBC,QAArB;AAEA,SAAKC,GAAL,GAAW,IAAIC,SAAJ,CAAcN,GAAd,CAAX;;AAEA,SAAKK,GAAL,CAASE,OAAT,GAAmB,MAAK;AACtB,WAAKC,IAAL,CAAU,OAAV;AACD,KAFD;;AAIA,SAAKH,GAAL,CAASI,MAAT,GAAkB,MAAK;AACrB,WAAKD,IAAL,CAAU,MAAV;AACD,KAFD;;AAIA,SAAKH,GAAL,CAASK,OAAT,GAAoBC,KAAD,IAAU;AAC3B,WAAKH,IAAL,CAAU,OAAV,EAAmBG,KAAnB;AACD,KAFD;;AAIA,SAAKN,GAAL,CAASO,SAAT,GAAsBC,OAAD,IAAY;AAC/B,WAAKL,IAAL,CAAU,SAAV,EAAqBK,OAAO,CAACC,IAA7B;AACD,KAFD;AAGD;;AAEDC,OAAK;AACH,QAAI,KAAKC,UAAL,KAAoB,CAAxB,EAA2B;AACzB,WAAKX,GAAL,CAASU,KAAT;AACD;AACF;;AAEDE,MAAI,CAACJ,OAAD,EAAQ;AACV,SAAKR,GAAL,CAASY,IAAT,CAAcJ,OAAd;AACD;;AAEa,MAAVG,UAAU;AACZ,WAAO,KAAKX,GAAL,CAASW,UAAhB;AACD;;AA1CiC;;AAE3BnB,uBAAa,CAAb;AACAA,iBAAO,CAAP;AACAA,oBAAU,CAAV;AACAA,mBAAS,CAAT;AAwCTqB,iBAASrB,SAAT","names":["WSWrapper","events_1","constructor","url","_protocols","_websocketOptions","setMaxListeners","Infinity","_ws","WebSocket","onclose","emit","onopen","onerror","error","onmessage","message","data","close","readyState","send","module"],"sourceRoot":"","sources":["../../../src/common/wswrapper.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}