{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Decryptor = void 0;\n\nconst crypto_1 = __importDefault(require(\"crypto\"));\n\nconst errors = __importStar(require(\"../errors\"));\n\nconst constants_1 = require(\"./constants\");\n\nclass Decryptor {\n  static decrypt(data, password) {\n    const kdfparams = data.kdfparams;\n    const salt = Buffer.from(data.salt, \"hex\");\n    const iv = Buffer.from(data.iv, \"hex\");\n    const ciphertext = Buffer.from(data.ciphertext, \"hex\");\n    const derivedKey = kdfparams.generateDerivedKey(Buffer.from(password), salt);\n    const derivedKeyFirstHalf = derivedKey.slice(0, 16);\n    const derivedKeySecondHalf = derivedKey.slice(16, 32);\n    const computedMAC = crypto_1.default.createHmac(constants_1.DigestAlgorithm, derivedKeySecondHalf).update(ciphertext).digest();\n    const actualMAC = data.mac;\n\n    if (computedMAC.toString(\"hex\") !== actualMAC) {\n      throw new errors.ErrWallet(\"MAC mismatch, possibly wrong password\");\n    }\n\n    const decipher = crypto_1.default.createDecipheriv(data.cipher, derivedKeyFirstHalf, iv);\n    return Buffer.concat([decipher.update(ciphertext), decipher.final()]);\n  }\n\n}\n\nexports.Decryptor = Decryptor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA,MAAaA,SAAb,CAAsB;AACC,SAAPC,OAAO,CAACC,IAAD,EAAsBC,QAAtB,EAAsC;AACzD,UAAMC,SAAS,GAAGF,IAAI,CAACE,SAAvB;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACG,IAAjB,EAAuB,KAAvB,CAAb;AACA,UAAMG,EAAE,GAAGF,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACM,EAAjB,EAAqB,KAArB,CAAX;AACA,UAAMC,UAAU,GAAGH,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACO,UAAjB,EAA6B,KAA7B,CAAnB;AACA,UAAMC,UAAU,GAAGN,SAAS,CAACO,kBAAV,CAA6BL,MAAM,CAACC,IAAP,CAAYJ,QAAZ,CAA7B,EAAoDE,IAApD,CAAnB;AACA,UAAMO,mBAAmB,GAAGF,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAA5B;AACA,UAAMC,oBAAoB,GAAGJ,UAAU,CAACG,KAAX,CAAiB,EAAjB,EAAqB,EAArB,CAA7B;AAEA,UAAME,WAAW,GAAGC,iBAAOC,UAAP,CAAkBC,2BAAlB,EAAmCJ,oBAAnC,EAAyDK,MAAzD,CAAgEV,UAAhE,EAA4EW,MAA5E,EAApB;AACA,UAAMC,SAAS,GAAGnB,IAAI,CAACoB,GAAvB;;AAEA,QAAIP,WAAW,CAACQ,QAAZ,CAAqB,KAArB,MAAgCF,SAApC,EAA+C;AAC7C,YAAM,IAAIG,MAAM,CAACC,SAAX,CAAqB,uCAArB,CAAN;AACD;;AAED,UAAMC,QAAQ,GAAGV,iBAAOW,gBAAP,CAAwBzB,IAAI,CAAC0B,MAA7B,EAAqChB,mBAArC,EAA0DJ,EAA1D,CAAjB;AAEA,WAAOF,MAAM,CAACuB,MAAP,CAAc,CAACH,QAAQ,CAACP,MAAT,CAAgBV,UAAhB,CAAD,EAA8BiB,QAAQ,CAACI,KAAT,EAA9B,CAAd,CAAP;AACD;;AApBmB;;AAAtBC","names":["Decryptor","decrypt","data","password","kdfparams","salt","Buffer","from","iv","ciphertext","derivedKey","generateDerivedKey","derivedKeyFirstHalf","slice","derivedKeySecondHalf","computedMAC","crypto_1","createHmac","constants_1","update","digest","actualMAC","mac","toString","errors","ErrWallet","decipher","createDecipheriv","cipher","concat","final","exports"],"sourceRoot":"","sources":["../../src/crypto/decryptor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}