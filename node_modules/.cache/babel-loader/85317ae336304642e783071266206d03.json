{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Receipt = exports.TransactionOnNetworkType = exports.TransactionOnNetwork = void 0;\n\nconst address_1 = require(\"./address\");\n\nconst balance_1 = require(\"./balance\");\n\nconst networkParams_1 = require(\"./networkParams\");\n\nconst nonce_1 = require(\"./nonce\");\n\nconst signature_1 = require(\"./signature\");\n\nconst transactionPayload_1 = require(\"./transactionPayload\");\n\nconst hash_1 = require(\"./hash\");\n\nconst transaction_1 = require(\"./transaction\");\n\nconst smartContractResults_1 = require(\"./smartcontracts/smartContractResults\");\n/**\n * A plain view of a transaction, as queried from the Network.\n */\n\n\nclass TransactionOnNetwork {\n  constructor(init) {\n    this.type = new TransactionOnNetworkType();\n    this.nonce = new nonce_1.Nonce(0);\n    this.round = 0;\n    this.epoch = 0;\n    this.value = balance_1.Balance.Zero();\n    this.receiver = new address_1.Address();\n    this.sender = new address_1.Address();\n    this.gasPrice = new networkParams_1.GasPrice(0);\n    this.gasLimit = new networkParams_1.GasLimit(0);\n    this.data = new transactionPayload_1.TransactionPayload();\n    this.signature = signature_1.Signature.empty();\n    this.status = transaction_1.TransactionStatus.createUnknown();\n    this.hyperblockNonce = new nonce_1.Nonce(0);\n    this.hyperblockHash = hash_1.Hash.empty();\n    this.receipt = new Receipt();\n    this.smartContractResults = smartContractResults_1.SmartContractResults.empty();\n    Object.assign(this, init);\n  }\n\n  static fromHttpResponse(response) {\n    let transactionOnNetwork = new TransactionOnNetwork();\n    transactionOnNetwork.type = new TransactionOnNetworkType(response.type || \"\");\n    transactionOnNetwork.nonce = new nonce_1.Nonce(response.nonce || 0);\n    transactionOnNetwork.round = response.round;\n    transactionOnNetwork.epoch = response.epoch || 0;\n    transactionOnNetwork.value = balance_1.Balance.fromString(response.value);\n    transactionOnNetwork.sender = address_1.Address.fromBech32(response.sender);\n    transactionOnNetwork.receiver = address_1.Address.fromBech32(response.receiver);\n    transactionOnNetwork.gasPrice = new networkParams_1.GasPrice(response.gasPrice);\n    transactionOnNetwork.gasLimit = new networkParams_1.GasLimit(response.gasLimit);\n    transactionOnNetwork.data = transactionPayload_1.TransactionPayload.fromEncoded(response.data);\n    transactionOnNetwork.status = new transaction_1.TransactionStatus(response.status);\n    transactionOnNetwork.hyperblockNonce = new nonce_1.Nonce(response.hyperblockNonce || 0);\n    transactionOnNetwork.hyperblockHash = new hash_1.Hash(response.hyperblockHash);\n    transactionOnNetwork.receipt = Receipt.fromHttpResponse(response.receipt || {});\n    transactionOnNetwork.smartContractResults = smartContractResults_1.SmartContractResults.fromHttpResponse(response.smartContractResults || []);\n    return transactionOnNetwork;\n  }\n\n  getReceipt() {\n    return this.receipt;\n  }\n\n  getSmartContractResults() {\n    return this.smartContractResults;\n  }\n\n}\n\nexports.TransactionOnNetwork = TransactionOnNetwork;\n/**\n * Not yet implemented.\n */\n\nclass TransactionOnNetworkType {\n  constructor(value) {\n    this.value = value || \"unknown\";\n  }\n\n}\n\nexports.TransactionOnNetworkType = TransactionOnNetworkType;\n\nclass Receipt {\n  constructor() {\n    this.value = balance_1.Balance.Zero();\n    this.sender = new address_1.Address();\n    this.message = \"\";\n    this.hash = transaction_1.TransactionHash.empty();\n  }\n\n  static fromHttpResponse(response) {\n    let receipt = new Receipt();\n    receipt.value = balance_1.Balance.fromString(response.value);\n    receipt.sender = new address_1.Address(response.sender);\n    receipt.message = response.data;\n    receipt.hash = new transaction_1.TransactionHash(response.txHash);\n    return receipt;\n  }\n\n}\n\nexports.Receipt = Receipt;","map":{"version":3,"mappings":"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","names":["TransactionOnNetwork","constructor","init","TransactionOnNetworkType","nonce_1","balance_1","Zero","address_1","networkParams_1","transactionPayload_1","signature_1","empty","transaction_1","createUnknown","hash_1","Receipt","smartContractResults_1","Object","assign","fromHttpResponse","response","transactionOnNetwork","type","nonce","round","epoch","value","fromString","sender","fromBech32","receiver","gasPrice","gasLimit","data","fromEncoded","status","hyperblockNonce","hyperblockHash","receipt","smartContractResults","getReceipt","getSmartContractResults","exports","message","hash","txHash"],"sourceRoot":"","sources":["../src/transactionOnNetwork.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}