{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils = __importStar(require(\"./utils\"));\n\nconst offerFlags = utils.common.txFlags.OfferCreate;\n\nconst common_1 = require(\"../common\");\n\nfunction createOrderTransaction(account, order) {\n  const takerPays = common_1.toRippledAmount(order.direction === 'buy' ? order.quantity : order.totalPrice);\n  const takerGets = common_1.toRippledAmount(order.direction === 'buy' ? order.totalPrice : order.quantity);\n  const txJSON = {\n    TransactionType: 'OfferCreate',\n    Account: account,\n    TakerGets: takerGets,\n    TakerPays: takerPays,\n    Flags: 0\n  };\n\n  if (order.direction === 'sell') {\n    txJSON.Flags |= offerFlags.Sell;\n  }\n\n  if (order.passive === true) {\n    txJSON.Flags |= offerFlags.Passive;\n  }\n\n  if (order.immediateOrCancel === true) {\n    txJSON.Flags |= offerFlags.ImmediateOrCancel;\n  }\n\n  if (order.fillOrKill === true) {\n    txJSON.Flags |= offerFlags.FillOrKill;\n  }\n\n  if (order.expirationTime != null) {\n    txJSON.Expiration = common_1.iso8601ToRippleTime(order.expirationTime);\n  }\n\n  if (order.orderToReplace != null) {\n    txJSON.OfferSequence = order.orderToReplace;\n  }\n\n  if (order.memos != null) {\n    txJSON.Memos = order.memos.map(utils.convertMemo);\n  }\n\n  return txJSON;\n}\n\nfunction prepareOrder(address, order) {\n  let instructions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  try {\n    common_1.validate.prepareOrder({\n      address,\n      order,\n      instructions\n    });\n    const txJSON = createOrderTransaction(address, order);\n    return utils.prepareTransaction(txJSON, this, instructions);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexports.default = prepareOrder;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,MAAMA,UAAU,GAAGC,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,WAAxC;;AACA;;AAKA,SAASC,sBAAT,CACEC,OADF,EAEEC,KAFF,EAEoC;AAElC,QAAMC,SAAS,GAAGC,yBAChBF,KAAK,CAACG,SAAN,KAAoB,KAApB,GAA4BH,KAAK,CAACI,QAAlC,GAA6CJ,KAAK,CAACK,UADnC,CAAlB;AAGA,QAAMC,SAAS,GAAGJ,yBAChBF,KAAK,CAACG,SAAN,KAAoB,KAApB,GAA4BH,KAAK,CAACK,UAAlC,GAA+CL,KAAK,CAACI,QADrC,CAAlB;AAIA,QAAMG,MAAM,GAAoC;AAC9CC,mBAAe,EAAE,aAD6B;AAE9CC,WAAO,EAAEV,OAFqC;AAG9CW,aAAS,EAAEJ,SAHmC;AAI9CK,aAAS,EAAEV,SAJmC;AAK9CW,SAAK,EAAE;AALuC,GAAhD;;AAOA,MAAIZ,KAAK,CAACG,SAAN,KAAoB,MAAxB,EAAgC;AAC9BI,UAAM,CAACK,KAAP,IAAgBnB,UAAU,CAACoB,IAA3B;AACD;;AACD,MAAIb,KAAK,CAACc,OAAN,KAAkB,IAAtB,EAA4B;AAC1BP,UAAM,CAACK,KAAP,IAAgBnB,UAAU,CAACsB,OAA3B;AACD;;AACD,MAAIf,KAAK,CAACgB,iBAAN,KAA4B,IAAhC,EAAsC;AACpCT,UAAM,CAACK,KAAP,IAAgBnB,UAAU,CAACwB,iBAA3B;AACD;;AACD,MAAIjB,KAAK,CAACkB,UAAN,KAAqB,IAAzB,EAA+B;AAC7BX,UAAM,CAACK,KAAP,IAAgBnB,UAAU,CAAC0B,UAA3B;AACD;;AACD,MAAInB,KAAK,CAACoB,cAAN,IAAwB,IAA5B,EAAkC;AAChCb,UAAM,CAACc,UAAP,GAAoBnB,6BAAoBF,KAAK,CAACoB,cAA1B,CAApB;AACD;;AACD,MAAIpB,KAAK,CAACsB,cAAN,IAAwB,IAA5B,EAAkC;AAChCf,UAAM,CAACgB,aAAP,GAAuBvB,KAAK,CAACsB,cAA7B;AACD;;AACD,MAAItB,KAAK,CAACwB,KAAN,IAAe,IAAnB,EAAyB;AACvBjB,UAAM,CAACkB,KAAP,GAAezB,KAAK,CAACwB,KAAN,CAAYE,GAAZ,CAAgBhC,KAAK,CAACiC,WAAtB,CAAf;AACD;;AACD,SAAOpB,MAAP;AACD;;AAED,SAASqB,YAAT,CAEEC,OAFF,EAGE7B,KAHF,EAIiC;AAAA,MAA/B8B,YAA+B,uEAAF,EAAE;;AAE/B,MAAI;AACF5B,sBAAS0B,YAAT,CAAsB;AAACC,aAAD;AAAU7B,WAAV;AAAiB8B;AAAjB,KAAtB;AACA,UAAMvB,MAAM,GAAGT,sBAAsB,CAAC+B,OAAD,EAAU7B,KAAV,CAArC;AACA,WAAON,KAAK,CAACqC,kBAAN,CAAyBxB,MAAzB,EAAiC,IAAjC,EAAuCuB,YAAvC,CAAP;AACD,GAJD,CAIE,OAAOE,CAAP,EAAU;AACV,WAAOC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAP;AACD;AACF;;AAEDG,kBAAeP,YAAf","names":["offerFlags","utils","common","txFlags","OfferCreate","createOrderTransaction","account","order","takerPays","common_1","direction","quantity","totalPrice","takerGets","txJSON","TransactionType","Account","TakerGets","TakerPays","Flags","Sell","passive","Passive","immediateOrCancel","ImmediateOrCancel","fillOrKill","FillOrKill","expirationTime","Expiration","orderToReplace","OfferSequence","memos","Memos","map","convertMemo","prepareOrder","address","instructions","prepareTransaction","e","Promise","reject","exports"],"sourceRoot":"","sources":["../../../src/transaction/order.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}