{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUuidValidator from 'validator/lib/isUUID';\nexport var IS_UUID = 'isUuid';\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\n\nexport function isUUID(value, version) {\n  return typeof value === 'string' && isUuidValidator(value, version);\n}\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\n\nexport function IsUUID(version, validationOptions) {\n  return ValidateBy({\n    name: IS_UUID,\n    constraints: [version],\n    validator: {\n      validate: function (value, args) {\n        return isUUID(value, args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be an UUID';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAIA,OAAO,IAAMC,OAAO,GAAG,QAAhB;AAEP;;;;;AAIA,OAAM,SAAUC,MAAV,CAAiBC,KAAjB,EAAiCC,OAAjC,EAAsD;AAC1D,SAAO,OAAOD,KAAP,KAAiB,QAAjB,IAA6BH,eAAe,CAACG,KAAD,EAAQC,OAAR,CAAnD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,MAAV,CAAiBD,OAAjB,EAAwCE,iBAAxC,EAA6E;AACjF,SAAOP,UAAU,CACf;AACEQ,QAAI,EAAEN,OADR;AAEEO,eAAW,EAAE,CAACJ,OAAD,CAFf;AAGEK,aAAS,EAAE;AACTC,cAAQ,EAAE,UAACP,KAAD,EAAQQ,IAAR,EAAY;AAAc,qBAAM,CAACR,KAAD,EAAQQ,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,CAAN;AAAkC,OAD7D;AAETI,oBAAc,EAAEd,YAAY,CAAC,sBAAU;AAAI,yBAAU,GAAG,2BAAb;AAAwC,OAAvD,EAAyDQ,iBAAzD;AAFnB;AAHb,GADe,EASfA,iBATe,CAAjB;AAWD","names":["buildMessage","ValidateBy","isUuidValidator","IS_UUID","isUUID","value","version","IsUUID","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsUUID.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}