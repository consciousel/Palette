{"ast":null,"code":"import { BigNumber, constants, utils } from \"ethers\";\nconst logger = new utils.Logger(\"celo/transactions\");\nexport const celoTransactionFields = [{\n  name: \"nonce\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasPrice\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasLimit\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"feeCurrency\",\n  length: 20\n}, {\n  name: \"gatewayFeeRecipient\",\n  length: 20\n}, {\n  name: \"gatewayFee\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"to\",\n  length: 20\n}, {\n  name: \"value\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"data\"\n}];\nexport const celoAllowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  feeCurrency: true,\n  gatewayFeeRecipient: true,\n  gatewayFee: true\n}; // Almost identical to https://github.com/ethers-io/ethers.js/blob/master/packages/transactions/src.ts/index.ts#L85\n// Need to override to use the celo tx prop whitelists above\n\nexport function serializeCeloTransaction(transaction, signature) {\n  utils.checkProperties(transaction, celoAllowedTransactionKeys);\n  const raw = [];\n  celoTransactionFields.forEach(function (fieldInfo) {\n    let value = transaction[fieldInfo.name] || [];\n    const options = {};\n\n    if (fieldInfo.numeric) {\n      options.hexPad = \"left\";\n    }\n\n    value = utils.arrayify(utils.hexlify(value, options)); // Fixed-width field\n\n    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n      logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n    } // Variable-width (with a maximum)\n\n\n    if (fieldInfo.maxLength) {\n      value = utils.stripZeros(value);\n\n      if (value.length > fieldInfo.maxLength) {\n        logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n      }\n    }\n\n    raw.push(utils.hexlify(value));\n  });\n  let chainId = 0;\n\n  if (transaction.chainId != null) {\n    // A chainId was provided; if non-zero we'll use EIP-155\n    chainId = transaction.chainId;\n\n    if (typeof chainId !== \"number\") {\n      logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n    }\n  } else if (signature && !utils.isBytesLike(signature) && signature.v && signature.v > 28) {\n    // No chainId provided, but the signature is signing with EIP-155; derive chainId\n    chainId = Math.floor((signature.v - 35) / 2);\n  } // We have an EIP-155 transaction (chainId was specified and non-zero)\n\n\n  if (chainId !== 0) {\n    raw.push(utils.hexlify(chainId)); // @TODO: hexValue?\n\n    raw.push(\"0x\");\n    raw.push(\"0x\");\n  } // Requesting an unsigned transation\n\n\n  if (!signature) {\n    return utils.RLP.encode(raw);\n  } // The splitSignature will ensure the transaction has a recoveryParam in the\n  // case that the signTransaction function only adds a v.\n\n\n  const sig = utils.splitSignature(signature); // We pushed a chainId and null r, s on for hashing only; remove those\n\n  let v = 27 + sig.recoveryParam;\n\n  if (chainId !== 0) {\n    raw.pop();\n    raw.pop();\n    raw.pop();\n    v += chainId * 2 + 8; // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n\n    if (sig.v > 28 && sig.v !== v) {\n      logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n  } else if (sig.v !== v) {\n    logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n  }\n\n  raw.push(utils.hexlify(v));\n  raw.push(utils.stripZeros(utils.arrayify(sig.r)));\n  raw.push(utils.stripZeros(utils.arrayify(sig.s)));\n  return utils.RLP.encode(raw);\n} // Almost identical to https://github.com/ethers-io/ethers.js/blob/master/packages/transactions/src.ts/index.ts#L165\n// Need to override to use the celo tx prop whitelists above\n\nexport function parseCeloTransaction(rawTransaction) {\n  const transaction = utils.RLP.decode(rawTransaction);\n\n  if (transaction.length !== 12 && transaction.length !== 9) {\n    logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n  }\n\n  const tx = {\n    nonce: handleNumber(transaction[0]).toNumber(),\n    gasPrice: handleNumber(transaction[1]),\n    gasLimit: handleNumber(transaction[2]),\n    feeCurrency: handleAddress(transaction[3]),\n    gatewayFeeRecipient: handleAddress(transaction[4]),\n    gatewayFee: handleNumber(transaction[5]),\n    to: handleAddress(transaction[6]),\n    value: handleNumber(transaction[7]),\n    data: transaction[8],\n    chainId: 0\n  }; // Legacy unsigned transaction\n\n  if (transaction.length === 9) {\n    return tx;\n  }\n\n  try {\n    tx.v = BigNumber.from(transaction[9]).toNumber();\n  } catch (error) {\n    console.log(error);\n    return tx;\n  }\n\n  tx.r = utils.hexZeroPad(transaction[10], 32);\n  tx.s = utils.hexZeroPad(transaction[11], 32);\n\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.v;\n    tx.v = 0;\n  } else {\n    // Signed Tranasaction\n    tx.chainId = Math.floor((tx.v - 35) / 2);\n\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n\n    let recoveryParam = tx.v - 27;\n    const raw = transaction.slice(0, 6);\n\n    if (tx.chainId !== 0) {\n      raw.push(utils.hexlify(tx.chainId));\n      raw.push(\"0x\");\n      raw.push(\"0x\");\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n\n    const digest = utils.keccak256(utils.RLP.encode(raw));\n\n    try {\n      tx.from = utils.recoverAddress(digest, {\n        r: utils.hexlify(tx.r),\n        s: utils.hexlify(tx.s),\n        recoveryParam: recoveryParam\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    tx.hash = utils.keccak256(rawTransaction);\n  }\n\n  return tx;\n}\n\nfunction handleAddress(value) {\n  if (value === \"0x\") {\n    return undefined;\n  }\n\n  return utils.getAddress(value);\n}\n\nfunction handleNumber(value) {\n  if (value === \"0x\") {\n    return constants.Zero;\n  }\n\n  return BigNumber.from(value);\n}","map":{"version":3,"mappings":"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","names":["BigNumber","constants","utils","logger","Logger","celoTransactionFields","name","maxLength","numeric","length","celoAllowedTransactionKeys","chainId","data","gasLimit","gasPrice","nonce","to","value","feeCurrency","gatewayFeeRecipient","gatewayFee","serializeCeloTransaction","transaction","signature","checkProperties","raw","forEach","fieldInfo","options","hexPad","arrayify","hexlify","throwArgumentError","stripZeros","push","isBytesLike","v","Math","floor","RLP","encode","sig","splitSignature","recoveryParam","pop","r","s","parseCeloTransaction","rawTransaction","decode","tx","handleNumber","toNumber","handleAddress","from","error","console","log","hexZeroPad","isZero","slice","digest","keccak256","recoverAddress","hash","undefined","getAddress","Zero"],"sourceRoot":"","sources":["../../../src/lib/transactions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}