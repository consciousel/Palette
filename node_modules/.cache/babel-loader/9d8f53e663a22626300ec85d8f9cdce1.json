{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\nexport var IS_PHONE_NUMBER = 'isPhoneNumber';\n/**\n * Checks if the string is a valid phone number.\n * @param value the potential phone number string to test\n * @param {string} region 2 characters uppercase country code (e.g. DE, US, CH).\n * If users must enter the intl. prefix (e.g. +41), then you may pass \"ZZ\" or null as region.\n */\n\nexport function isPhoneNumber(value, region) {\n  try {\n    var phoneNum = parsePhoneNumberFromString(value, region);\n    var result = phoneNum === null || phoneNum === void 0 ? void 0 : phoneNum.isValid();\n    return !!result;\n  } catch (error) {\n    // logging?\n    return false;\n  }\n}\n/**\n * Checks if the string is a valid phone number.\n * @param region 2 characters uppercase country code (e.g. DE, US, CH).\n * If users must enter the intl. prefix (e.g. +41), then you may pass \"ZZ\" or null as region.\n */\n\nexport function IsPhoneNumber(region, validationOptions) {\n  return ValidateBy({\n    name: IS_PHONE_NUMBER,\n    constraints: [region],\n    validator: {\n      validate: function (value, args) {\n        return isPhoneNumber(value, args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a valid phone number';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,SAASC,0BAAT,QAAwD,mBAAxD;AAEA,OAAO,IAAMC,eAAe,GAAG,eAAxB;AAEP;;;;;;;AAMA,OAAM,SAAUC,aAAV,CAAwBC,KAAxB,EAAuCC,MAAvC,EAAsE;AAC1E,MAAI;AACF,QAAMC,QAAQ,GAAGL,0BAA0B,CAACG,KAAD,EAAQC,MAAR,CAA3C;AACA,QAAME,MAAM,GAAGD,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEE,OAAV,EAAf;AACA,WAAO,CAAC,CAACD,MAAT;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd;AACA,WAAO,KAAP;AACD;AACF;AAED;;;;;;AAKA,OAAM,SAAUC,aAAV,CACJL,MADI,EAEJM,iBAFI,EAEiC;AAErC,SAAOX,UAAU,CACf;AACEY,QAAI,EAAEV,eADR;AAEEW,eAAW,EAAE,CAACR,MAAD,CAFf;AAGES,aAAS,EAAE;AACTC,cAAQ,EAAE,UAACX,KAAD,EAAQY,IAAR,EAAY;AAAc,4BAAa,CAACZ,KAAD,EAAQY,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,CAAb;AAAyC,OADpE;AAETI,oBAAc,EAAElB,YAAY,CAC1B,sBAAU;AAAI,yBAAU,GAAG,wCAAb;AAAqD,OADzC,EAE1BY,iBAF0B;AAFnB;AAHb,GADe,EAYfA,iBAZe,CAAjB;AAcD","names":["buildMessage","ValidateBy","parsePhoneNumberFromString","IS_PHONE_NUMBER","isPhoneNumber","value","region","phoneNum","result","isValid","error","IsPhoneNumber","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsPhoneNumber.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}