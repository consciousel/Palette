{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-crypto\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isHex = exports.hexToIntArray = exports.hexToByteArray = exports.joinSignature = exports.splitSignature = exports.isSignature = exports.bytesPadRight = exports.bytesPadLeft = exports.hexZeroPad = exports.hexStripZeros = exports.hexDataSlice = exports.hexDataLength = exports.hexlify = exports.isHexString = exports.padZeros = exports.stripZeros = exports.concat = exports.arrayify = exports.isArrayish = exports.isHexable = void 0;\n\nvar tslib_1 = require(\"tslib\"); // This file is ported from ether.js/src.ts/utils/bytes.ts\n// and done some fixes\n\n\nvar errors = tslib_1.__importStar(require(\"./errors\")); ///////////////////////////////\n\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nexports.isHexable = isHexable;\n\nfunction addSlice(array) {\n  if (typeof array === 'object' && typeof array.slice === 'function') {\n    return array;\n  } // tslint:disable-next-line: only-arrow-functions\n\n\n  array.slice = function () {\n    var args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, [args[0], args[1]])));\n  };\n\n  return array;\n}\n\nfunction isArrayish(value) {\n  if (!value || // tslint:disable-next-line: radix\n  parseInt(String(value.length)) !== value.length || typeof value === 'string') {\n    return false;\n  } // tslint:disable-next-line: prefer-for-of\n\n\n  for (var i = 0; i < value.length; i++) {\n    var v = value[i]; // tslint:disable-next-line: radix\n\n    if (v < 0 || v >= 256 || parseInt(String(v)) !== v) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.isArrayish = isArrayish;\n\nfunction arrayify(value) {\n  if (value == null) {\n    errors.throwError('cannot convert null value to array', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (typeof value === 'string') {\n    var match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n\n    if (!match) {\n      errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value: value\n      });\n    }\n\n    if (match !== null && match[1] !== '0x') {\n      errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value: value\n      });\n    }\n\n    value = value.substring(2);\n\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n\n    var result = [];\n\n    for (var i = 0; i < value.length; i += 2) {\n      result.push(parseInt(value.substr(i, 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isArrayish(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  errors.throwError('invalid arrayify value', null, {\n    arg: 'value',\n    value: value,\n    type: typeof value\n  });\n  return null;\n}\n\nexports.arrayify = arrayify;\n\nfunction concat(objects) {\n  if (objects === null) {\n    throw new Error(\"concat objects is null\");\n  }\n\n  var arrays = [];\n  var length = 0; // tslint:disable-next-line: prefer-for-of\n\n  for (var i = 0; i < objects.length; i++) {\n    var object = arrayify(objects[i]);\n\n    if (object == null) {\n      throw new Error('arrayify failed');\n    }\n\n    arrays.push(object);\n    length += object.length;\n  }\n\n  var result = new Uint8Array(length);\n  var offset = 0; // tslint:disable-next-line: prefer-for-of\n\n  for (var i = 0; i < arrays.length; i++) {\n    result.set(arrays[i], offset);\n    offset += arrays[i].length;\n  }\n\n  return addSlice(result);\n}\n\nexports.concat = concat;\n\nfunction stripZeros(value) {\n  var result = arrayify(value);\n\n  if (result === null) {\n    throw new Error('arrayify failed');\n  }\n\n  if (result.length === 0) {\n    return result;\n  } // Find the first non-zero entry\n\n\n  var start = 0;\n\n  while (result[start] === 0) {\n    start++;\n  } // If we started with zeros, strip them\n\n\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\n\nexports.stripZeros = stripZeros;\n\nfunction padZeros(value, length) {\n  var arrayifyValue = arrayify(value);\n\n  if (arrayifyValue === null) {\n    throw new Error('arrayify failed');\n  }\n\n  if (length < arrayifyValue.length) {\n    throw new Error('cannot pad');\n  }\n\n  var result = new Uint8Array(length);\n  result.set(arrayifyValue, length - arrayifyValue.length);\n  return addSlice(result);\n}\n\nexports.padZeros = padZeros;\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.isHexString = isHexString;\nvar HexCharacters = '0123456789abcdef';\n\nfunction hexlify(value) {\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (typeof value === 'number') {\n    if (value < 0) {\n      errors.throwError('cannot hexlify negative value', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value: value\n      });\n    } // @TODO: Roll this into the above error as a numeric fault (overflow); next version, not backward compatible\n    // We can about (value == MAX_INT) to as well, since that may indicate we underflowed already\n\n\n    if (value >= 9007199254740991) {\n      errors.throwError('out-of-range', errors.NUMERIC_FAULT, {\n        operartion: 'hexlify',\n        fault: 'out-of-safe-range'\n      });\n    }\n\n    var hex = '';\n\n    while (value) {\n      hex = HexCharacters[value & 0x0f] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = '0' + hex;\n      }\n\n      return '0x' + hex;\n    }\n\n    return '0x00';\n  }\n\n  if (typeof value === 'string') {\n    var match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n\n    if (!match) {\n      errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value: value\n      });\n    }\n\n    if (match !== null && match[1] !== '0x') {\n      errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value: value\n      });\n    }\n\n    if (value.length % 2) {\n      value = '0x0' + value.substring(2);\n    }\n\n    return value;\n  }\n\n  if (isArrayish(value)) {\n    var result = []; // tslint:disable-next-line: prefer-for-of\n\n    for (var i = 0; i < value.length; i++) {\n      var v = value[i];\n      result.push(HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f]);\n    }\n\n    return '0x' + result.join('');\n  }\n\n  errors.throwError('invalid hexlify value', null, {\n    arg: 'value',\n    value: value\n  });\n  return 'never';\n}\n\nexports.hexlify = hexlify;\n\nfunction hexDataLength(data) {\n  if (!isHexString(data) || data.length % 2 !== 0) {\n    return null;\n  }\n\n  return (data.length - 2) / 2;\n}\n\nexports.hexDataLength = hexDataLength;\n\nfunction hexDataSlice(data, offset, endOffset) {\n  if (!isHexString(data)) {\n    errors.throwError('invalid hex data', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: data\n    });\n  }\n\n  if (data.length % 2 !== 0) {\n    errors.throwError('hex data length must be even', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: data\n    });\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return '0x' + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return '0x' + data.substring(offset);\n}\n\nexports.hexDataSlice = hexDataSlice;\n\nfunction hexStripZeros(value) {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  }\n\n  while (value.length > 3 && value.substring(0, 3) === '0x0') {\n    value = '0x' + value.substring(3);\n  }\n\n  return value;\n}\n\nexports.hexStripZeros = hexStripZeros;\n\nfunction hexZeroPad(value, length) {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = '0x0' + value.substring(2);\n  }\n\n  return value;\n}\n\nexports.hexZeroPad = hexZeroPad;\n\nfunction bytesPadLeft(value, byteLength) {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  }\n\n  var striped = value.substring(2);\n\n  if (striped.length > byteLength * 2) {\n    throw new Error(\"hex string length = \" + striped.length + \" beyond byteLength=\" + byteLength);\n  }\n\n  var padLength = byteLength * 2 - striped.length;\n  var returnValue = '0x' + '0'.repeat(padLength) + striped;\n  return returnValue;\n}\n\nexports.bytesPadLeft = bytesPadLeft;\n\nfunction bytesPadRight(value, byteLength) {\n  if (!isHexString(value)) {\n    errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  }\n\n  var striped = value.substring(2);\n\n  if (striped.length > byteLength * 2) {\n    throw new Error(\"hex string length = \" + striped.length + \" beyond byteLength=\" + byteLength);\n  }\n\n  var padLength = byteLength * 2 - striped.length;\n  var returnValue = '0x' + striped + '0'.repeat(padLength);\n  return returnValue;\n}\n\nexports.bytesPadRight = bytesPadRight;\n\nfunction isSignature(value) {\n  return value && value.r != null && value.s != null;\n}\n\nexports.isSignature = isSignature;\n\nfunction splitSignature(signature) {\n  if (signature !== undefined) {\n    var v = 0;\n    var r = '0x';\n    var s = '0x';\n\n    if (isSignature(signature)) {\n      if (signature.v == null && signature.recoveryParam == null) {\n        errors.throwError('at least on of recoveryParam or v must be specified', errors.INVALID_ARGUMENT, {\n          argument: 'signature',\n          value: signature\n        });\n      }\n\n      r = hexZeroPad(signature.r, 32);\n      s = hexZeroPad(signature.s, 32);\n      v = signature.v || 0;\n\n      if (typeof v === 'string') {\n        v = parseInt(v, 16);\n      }\n\n      var recoveryParam = signature.recoveryParam || 0;\n\n      if (recoveryParam == null && signature.v != null) {\n        recoveryParam = 1 - v % 2;\n      }\n\n      v = 27 + recoveryParam;\n    } else {\n      var bytes = arrayify(signature) || new Uint8Array();\n\n      if (bytes.length !== 65) {\n        throw new Error('invalid signature');\n      }\n\n      r = hexlify(bytes.slice(0, 32));\n      s = hexlify(bytes.slice(32, 64));\n      v = bytes[64];\n\n      if (v !== 27 && v !== 28) {\n        v = 27 + v % 2;\n      }\n    }\n\n    return {\n      r: r,\n      s: s,\n      recoveryParam: v - 27,\n      v: v\n    };\n  } else {\n    throw new Error('signature is not found');\n  }\n}\n\nexports.splitSignature = splitSignature;\n\nfunction joinSignature(signature) {\n  signature = splitSignature(signature);\n  return hexlify(concat([signature.r, signature.s, signature.recoveryParam ? '0x1c' : '0x1b']));\n}\n\nexports.joinSignature = joinSignature;\n/**\n * hexToByteArray\n *\n * Convers a hex string to a Uint8Array\n *\n * @param {string} hex\n * @returns {Uint8Array}\n */\n\nexports.hexToByteArray = function (hex) {\n  var res = new Uint8Array(hex.length / 2);\n\n  for (var i = 0; i < hex.length; i += 2) {\n    res[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n  }\n\n  return res;\n};\n/**\n * hexToIntArray\n *\n * @param {string} hex\n * @returns {number[]}\n */\n\n\nexports.hexToIntArray = function (hex) {\n  if (!hex || !exports.isHex(hex)) {\n    return [];\n  }\n\n  var res = [];\n\n  for (var i = 0; i < hex.length; i++) {\n    var c = hex.charCodeAt(i);\n    var hi = c >> 8;\n    var lo = c & 0xff;\n    hi ? res.push(hi, lo) : res.push(lo);\n  }\n\n  return res;\n};\n/**\n * isHex\n *\n * @param {string} str - string to be tested\n * @returns {boolean}\n */\n\n\nexports.isHex = function (str) {\n  var plain = str.replace('0x', '');\n  return /[0-9a-f]*$/i.test(plain);\n};","map":{"version":3,"mappings":"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","names":["isHexable","value","toHexString","exports","addSlice","array","slice","args","Array","prototype","call","arguments","Uint8Array","apply","isArrayish","parseInt","String","length","i","v","arrayify","errors","throwError","INVALID_ARGUMENT","arg","match","substring","result","push","substr","type","concat","objects","Error","arrays","object","offset","set","stripZeros","start","padZeros","arrayifyValue","isHexString","HexCharacters","hexlify","NUMERIC_FAULT","operartion","fault","hex","Math","floor","join","hexDataLength","data","hexDataSlice","endOffset","hexStripZeros","hexZeroPad","bytesPadLeft","byteLength","striped","padLength","returnValue","repeat","bytesPadRight","isSignature","r","s","splitSignature","signature","undefined","recoveryParam","argument","bytes","joinSignature","res","c","charCodeAt","hi","lo","str","plain","replace","test"],"sourceRoot":"","sources":["../src/bytes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}