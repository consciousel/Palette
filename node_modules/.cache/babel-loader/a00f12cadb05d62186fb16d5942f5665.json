{"ast":null,"code":"import { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ConstraintMetadata } from '../../metadata/ConstraintMetadata';\n/**\n * Registers custom validator class.\n */\n\nexport function ValidatorConstraint(options) {\n  return function (target) {\n    var isAsync = options && options.async;\n    var name = options && options.name ? options.name : '';\n\n    if (!name) {\n      name = target.name;\n      if (!name) // generate name if it was not given\n        name = name.replace(/\\.?([A-Z]+)/g, function (x, y) {\n          return '_' + y.toLowerCase();\n        }).replace(/^_/, '');\n    }\n\n    var metadata = new ConstraintMetadata(target, name, isAsync);\n    getMetadataStorage().addConstraintMetadata(metadata);\n  };\n}\nexport function Validate(constraintClass, constraintsOrValidationOptions, maybeValidationOptions) {\n  return function (object, propertyName) {\n    var args = {\n      type: ValidationTypes.CUSTOM_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraintCls: constraintClass,\n      constraints: constraintsOrValidationOptions instanceof Array ? constraintsOrValidationOptions : undefined,\n      validationOptions: !(constraintsOrValidationOptions instanceof Array) ? constraintsOrValidationOptions : maybeValidationOptions\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}","map":{"version":3,"mappings":"AAEA,SAASA,kBAAT,QAAmC,mCAAnC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AAEA;;;;AAGA,OAAM,SAAUC,mBAAV,CAA8BC,OAA9B,EAA0E;AAC9E,SAAO,UAAUC,MAAV,EAA0B;AAC/B,QAAMC,OAAO,GAAGF,OAAO,IAAIA,OAAO,CAACG,KAAnC;AACA,QAAIC,IAAI,GAAGJ,OAAO,IAAIA,OAAO,CAACI,IAAnB,GAA0BJ,OAAO,CAACI,IAAlC,GAAyC,EAApD;;AACA,QAAI,CAACA,IAAL,EAAW;AACTA,UAAI,GAAIH,MAAc,CAACG,IAAvB;AACA,UAAI,CAACA,IAAL,EACE;AACAA,YAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,cAAb,EAA6B,UAACC,CAAD,EAAIC,CAAJ,EAAK;AAAK,uBAAOA,CAAY,CAACC,WAAb,EAAP;AAAiC,SAAxE,EAA0EH,OAA1E,CAAkF,IAAlF,EAAwF,EAAxF,CAAP;AACH;;AACD,QAAMI,QAAQ,GAAG,IAAIX,kBAAJ,CAAuBG,MAAvB,EAA+BG,IAA/B,EAAqCF,OAArC,CAAjB;AACAN,sBAAkB,GAAGc,qBAArB,CAA2CD,QAA3C;AACD,GAXD;AAYD;AAYD,OAAM,SAAUE,QAAV,CACJC,eADI,EAEJC,8BAFI,EAGJC,sBAHI,EAGsC;AAE1C,SAAO,UAAUC,MAAV,EAA0BC,YAA1B,EAA8C;AACnD,QAAMC,IAAI,GAA2B;AACnCC,UAAI,EAAErB,eAAe,CAACsB,iBADa;AAEnClB,YAAM,EAAEc,MAAM,CAACK,WAFoB;AAGnCJ,kBAAY,EAAEA,YAHqB;AAInCK,mBAAa,EAAET,eAJoB;AAKnCU,iBAAW,EAAET,8BAA8B,YAAYU,KAA1C,GAAkDV,8BAAlD,GAAmFW,SAL7D;AAMnCC,uBAAiB,EAAE,EAAEZ,8BAA8B,YAAYU,KAA5C,IACfV,8BADe,GAEfC;AAR+B,KAArC;AAUAlB,sBAAkB,GAAG8B,qBAArB,CAA2C,IAAI/B,kBAAJ,CAAuBsB,IAAvB,CAA3C;AACD,GAZD;AAaD","names":["ValidationMetadata","getMetadataStorage","ValidationTypes","ConstraintMetadata","ValidatorConstraint","options","target","isAsync","async","name","replace","x","y","toLowerCase","metadata","addConstraintMetadata","Validate","constraintClass","constraintsOrValidationOptions","maybeValidationOptions","object","propertyName","args","type","CUSTOM_VALIDATION","constructor","constraintCls","constraints","Array","undefined","validationOptions","addValidationMetadata"],"sourceRoot":"","sources":["../../../../src/decorator/common/Validate.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}