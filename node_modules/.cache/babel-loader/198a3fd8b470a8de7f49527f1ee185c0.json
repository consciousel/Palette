{"ast":null,"code":"const key = process.env.NFTPort_API_KEY;\n\nvar axios = require(\"axios\").default;\n\nexport const NFTPortPinJSONToIPFS = metadata => {\n  var options = {\n    method: 'POST',\n    url: 'https://api.nftport.xyz/v0/metadata',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2'\n    },\n    data: metadata\n  };\n  return axios.request(options).then(function (response) {\n    console.log(response.data);\n    return {\n      success: true,\n      pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n    };\n  }).catch(function (error) {\n    console.error(error);\n    return {\n      success: false,\n      message: error.message\n    };\n  });\n};\n_c = NFTPortPinJSONToIPFS;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFTPortPinJSONToIPFS\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/nftport.js"],"names":["key","process","env","NFTPort_API_KEY","axios","require","default","NFTPortPinJSONToIPFS","metadata","options","method","url","headers","Authorization","data","request","then","response","console","log","success","pinataUrl","IpfsHash","catch","error","message"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA7B;;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,IAAc;AAChD,MAAIC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,GAAG,EAAE,qCAFO;AAGZC,IAAAA,OAAO,EAAE;AAAC,sBAAgB,kBAAjB;AAAqCC,MAAAA,aAAa,EAAE;AAApD,KAHG;AAIZC,IAAAA,IAAI,EAAEN;AAJM,GAAd;AAOA,SAAOJ,KAAK,CACTW,OADI,CACIN,OADJ,EACaO,IADb,CACkB,UAAUC,QAAV,EAAoB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACA,WAAO;AACLM,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,SAAS,EAAE,uCAAuCJ,QAAQ,CAACH,IAAT,CAAcQ;AAF3D,KAAP;AAID,GAPI,EAOFC,KAPE,CAOI,UAAUC,KAAV,EAAiB;AAC1BN,IAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACA,WAAO;AACLJ,MAAAA,OAAO,EAAE,KADJ;AAELK,MAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,KAAP;AAID,GAbM,CAAP;AAeD,CAvBM;KAAMlB,oB","sourcesContent":["const key = process.env.NFTPort_API_KEY;\r\n\r\nvar axios = require(\"axios\").default;\r\n\r\nexport const NFTPortPinJSONToIPFS = (metadata) => {\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'https://api.nftport.xyz/v0/metadata',\r\n    headers: {'Content-Type': 'application/json', Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2'},\r\n    data: metadata,\r\n  }\r\n\r\n  return axios\r\n    .request(options).then(function (response) {\r\n      console.log(response.data);\r\n      return {\r\n        success: true,\r\n        pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\r\n      };\r\n    }).catch(function (error) {\r\n    console.error(error);\r\n    return {\r\n      success: false,\r\n      message: error.message,\r\n    }\r\n  });\r\n\r\n};"]},"metadata":{},"sourceType":"module"}