{"ast":null,"code":"import React, { useRef } from 'react';\nconst assetUrl = \"\";\nconst urlOfLastUpload = \"\"; // Define function to return the url of the uploaded image\n\nexport function uploadedAsset(imageUrl) {\n  console.log(imageUrl); // const ref = useRef({\n  //     assetUrl: \"\",\n  //     urlOfLastUpload: \"\"\n  // })\n  // Record image url after upload\n\n  if (!imageUrl === \"\") {\n    ref.current.urlOfLastUpload = imageUrl;\n  } // Get url of last uploaded image\n\n\n  if (imageUrl === \"\") {\n    assetUrl = urlOfLastUpload;\n  } else {\n    assetUrl = imageUrl;\n  }\n\n  return assetUrl;\n}","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/file-upload.js"],"names":["React","useRef","assetUrl","urlOfLastUpload","uploadedAsset","imageUrl","console","log","ref","current"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,eAAe,GAAG,EAAxB,C,CAEA;;AACA,OAAO,SAASC,aAAT,CAAwBC,QAAxB,EAAkC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADqC,CAErC;AACA;AACA;AACA;AAEA;;AACA,MAAG,CAACA,QAAD,KAAc,EAAjB,EAAqB;AACjBG,IAAAA,GAAG,CAACC,OAAJ,CAAYN,eAAZ,GAA8BE,QAA9B;AACH,GAVoC,CAYrC;;;AACA,MAAGA,QAAQ,KAAK,EAAhB,EAAmB;AACfH,IAAAA,QAAQ,GAAGC,eAAX;AACH,GAFD,MAEO;AACHD,IAAAA,QAAQ,GAAGG,QAAX;AACH;;AAED,SAAOH,QAAP;AACH","sourcesContent":["import React, { useRef } from 'react'\r\n\r\nconst assetUrl = \"\";\r\nconst urlOfLastUpload = \"\";\r\n\r\n// Define function to return the url of the uploaded image\r\nexport function uploadedAsset (imageUrl) {\r\n    console.log(imageUrl)\r\n    // const ref = useRef({\r\n    //     assetUrl: \"\",\r\n    //     urlOfLastUpload: \"\"\r\n    // })\r\n\r\n    // Record image url after upload\r\n    if(!imageUrl === \"\") {\r\n        ref.current.urlOfLastUpload = imageUrl\r\n    }    \r\n\r\n    // Get url of last uploaded image\r\n    if(imageUrl === \"\"){\r\n        assetUrl = urlOfLastUpload\r\n    } else {\r\n        assetUrl = imageUrl\r\n    }\r\n    \r\n    return assetUrl\r\n}"]},"metadata":{},"sourceType":"module"}