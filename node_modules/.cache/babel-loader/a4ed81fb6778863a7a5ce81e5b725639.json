{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAsciiValidator from 'validator/lib/isAscii';\nexport var IS_ASCII = 'isAscii';\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\n\nexport function isAscii(value) {\n  return typeof value === 'string' && isAsciiValidator(value);\n}\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsAscii(validationOptions) {\n  return ValidateBy({\n    name: IS_ASCII,\n    validator: {\n      validate: function (value, args) {\n        return isAscii(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must contain only ASCII characters';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAjB;AAEP;;;;;AAIA,OAAM,SAAUC,OAAV,CAAkBC,KAAlB,EAAgC;AACpC,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BH,gBAAgB,CAACG,KAAD,CAApD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,OAAV,CAAkBC,iBAAlB,EAAuD;AAC3D,SAAON,UAAU,CACf;AACEO,QAAI,EAAEL,QADR;AAEEM,aAAS,EAAE;AACTC,cAAQ,EAAE,UAACL,KAAD,EAAQM,IAAR,EAAY;AAAc,sBAAO,CAACN,KAAD,CAAP;AAAc,OADzC;AAETO,oBAAc,EAAEZ,YAAY,CAC1B,sBAAU;AAAI,yBAAU,GAAG,8CAAb;AAA2D,OAD/C,EAE1BO,iBAF0B;AAFnB;AAFb,GADe,EAWfA,iBAXe,CAAjB;AAaD","names":["buildMessage","ValidateBy","isAsciiValidator","IS_ASCII","isAscii","value","IsAscii","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsAscii.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}