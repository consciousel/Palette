{"ast":null,"code":"var axios = require(\"axios\").default;\n\nexport const NFTPortPinJSONToIPFS = (name, description, url, artist, appendAttributes) => {\n  var options = {\n    method: 'POST',\n    url: 'https://api.nftport.xyz/v0/metadata',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2'\n    },\n    data: {\n      \"name\": name,\n      \"description\": description,\n      \"file_url\": url,\n      \"attributes\": [{\n        \"trait_type\": \"Artist\",\n        \"value\": artist\n      }]\n    }\n  };\n\n  if (appendAttributes !== \"\") {\n    data.attributes.push(appendAttributes);\n  }\n\n  return axios.request(options).then(function (response) {\n    console.log(response.data);\n    const url = response.data.metadata_uri;\n    console.log(url);\n    return {\n      success: true,\n      nftPortUrl: response.data.metadata_uri\n    };\n  }).catch(function (error) {\n    console.error(error);\n    return {\n      success: false,\n      message: error.message\n    };\n  });\n};\n_c = NFTPortPinJSONToIPFS;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFTPortPinJSONToIPFS\");","map":{"version":3,"sources":["C:/Users/masho/OneDrive/Desktop/Blockchain/Biconomy/Projects/NFT_minter/src/utils/nftport.js"],"names":["axios","require","default","NFTPortPinJSONToIPFS","name","description","url","artist","appendAttributes","options","method","headers","Authorization","data","attributes","push","request","then","response","console","log","metadata_uri","success","nftPortUrl","catch","error","message"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA7B;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,gBAAjC,KAAsD;AACxF,MAAIC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZJ,IAAAA,GAAG,EAAE,qCAFO;AAGZK,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE;AAFR,KAHG;AAOZC,IAAAA,IAAI,EAAE;AACJ,cAAQT,IADJ;AAEJ,qBAAcC,WAFV;AAGJ,kBAAWC,GAHP;AAIJ,oBAAa,CACX;AACE,sBAAa,QADf;AAEE,iBAAQC;AAFV,OADW;AAJT;AAPM,GAAd;;AAoBA,MAAGC,gBAAgB,KAAG,EAAtB,EAAyB;AACvBK,IAAAA,IAAI,CAACC,UAAL,CAAgBC,IAAhB,CAAqBP,gBAArB;AACD;;AAED,SAAOR,KAAK,CACTgB,OADI,CACIP,OADJ,EACaQ,IADb,CACkB,UAAUC,QAAV,EAAoB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACL,IAArB;AACA,UAAMP,GAAG,GAAGY,QAAQ,CAACL,IAAT,CAAcQ,YAA1B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACA,WAAO;AACLgB,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,UAAU,EAAEL,QAAQ,CAACL,IAAT,CAAcQ;AAFrB,KAAP;AAID,GATI,EASFG,KATE,CASI,UAAUC,KAAV,EAAiB;AAC1BN,IAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACA,WAAO;AACLH,MAAAA,OAAO,EAAE,KADJ;AAELI,MAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,KAAP;AAID,GAfM,CAAP;AAiBD,CA1CM;KAAMvB,oB","sourcesContent":["var axios = require(\"axios\").default;\r\n\r\nexport const NFTPortPinJSONToIPFS = (name, description, url, artist, appendAttributes) => {\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'https://api.nftport.xyz/v0/metadata',\r\n    headers: {\r\n      'Content-Type': 'application/json', \r\n      Authorization: '2d0719e3-a0ba-461f-a382-a5558bd86ac2'\r\n    },\r\n    data: {\r\n      \"name\": name,\r\n      \"description\":description,\r\n      \"file_url\":url,\r\n      \"attributes\":[\r\n        {\r\n          \"trait_type\":\"Artist\",\r\n          \"value\":artist\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  if(appendAttributes!==\"\"){\r\n    data.attributes.push(appendAttributes)\r\n  }\r\n\r\n  return axios\r\n    .request(options).then(function (response) {\r\n      console.log(response.data);\r\n      const url = response.data.metadata_uri;\r\n      console.log(url);\r\n      return {\r\n        success: true,\r\n        nftPortUrl: response.data.metadata_uri,\r\n      };\r\n    }).catch(function (error) {\r\n    console.error(error);\r\n    return {\r\n      success: false,\r\n      message: error.message,\r\n    }\r\n  });\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}