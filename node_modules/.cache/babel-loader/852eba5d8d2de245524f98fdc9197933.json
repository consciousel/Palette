{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ThorProvider = void 0;\n\nconst url_1 = require(\"url\");\n\nconst debug = require('debug')('thor:http-provider');\n\nconst eventemitter3_1 = require(\"eventemitter3\");\n\nconst WebSocket = require(\"isomorphic-ws\");\n\nconst QS = require(\"querystring\");\n\nconst json_rpc_1 = require(\"./json-rpc\");\n\nconst rpc_methods_1 = require(\"./rpc-methods\");\n\nclass ThorProvider extends eventemitter3_1.EventEmitter {\n  constructor(host) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    super();\n\n    if (!host) {\n      throw new Error('[thor-provider]Thorify requires that the host be specified(e.g. \"http://localhost:8669\")');\n    }\n\n    const hostURL = url_1.parse(host);\n\n    if (!hostURL.protocol || !hostURL.host) {\n      throw new Error('[thor-provider]Parsing url failed!');\n    }\n\n    this.RESTHost = `${hostURL.protocol}//${hostURL.host}`;\n    this.WSHost = `${hostURL.protocol.replace('http', 'ws')}//${hostURL.host}`;\n    this.timeout = timeout;\n    this.sockets = [];\n  }\n\n  sendAsync(payload, callback) {\n    debug('payload: %O', payload);\n    const rpc = new json_rpc_1.JSONRPC(payload); // kindly remind developers about the usage about send transaction\n\n    if (rpc.method === 'eth_sendTransaction') {\n      return callback(null, rpc.makeError('[thor-provider]The private key corresponding to from filed can\\'t be found in local eth.accounts.wallet!'));\n    } // subscriptions\n\n\n    if (rpc.method === 'eth_subscribe' || rpc.method === 'eth_unsubscribe') {\n      return this.ManagerSubscription(rpc, callback);\n    }\n\n    if (rpc_methods_1.RPCMethodMap.has(rpc.method)) {\n      const executor = rpc_methods_1.RPCMethodMap.get(rpc.method);\n      executor(rpc, this.RESTHost, this.timeout).then(ret => {\n        debug('response: %O', ret.result);\n        omitCallBackedPromise(callback(null, ret));\n        return;\n      }).catch(err => {\n        omitCallBackedPromise(callback(err, null));\n        return;\n      });\n    } else {\n      callback(null, rpc.makeError(`Method: ${rpc.method} is not supported!`));\n      return;\n    }\n  }\n\n  ManagerSubscription(rpc, callback) {\n    let query = '';\n\n    if (rpc.method === 'eth_subscribe') {\n      let URI = '/subscriptions/';\n\n      switch (rpc.params[0]) {\n        case 'newHeads':\n          URI += 'block';\n\n          if (rpc.params[1] && rpc.params[1] !== 'best') {\n            URI += '?pos=' + rpc.params[1];\n          }\n\n          break;\n\n        case 'logs':\n          URI += 'event';\n\n          if (typeof rpc.params[1] === 'object' && rpc.params[1] !== null) {\n            let options = {};\n\n            for (let [key, value] of Object.entries(rpc.params[1])) {\n              if (key === 'address') {\n                options['addr'] = value;\n              } else {\n                options[key] = value;\n              }\n            }\n\n            query = QS.stringify(options);\n\n            if (query) {\n              URI += '?' + query;\n            }\n          }\n\n          break;\n\n        case 'transfers':\n          URI += 'transfer';\n          query = QS.stringify(rpc.params[1]);\n\n          if (query) {\n            URI += '?' + query;\n          }\n\n          break;\n\n        default:\n          callback(null, rpc.makeError(`Subscription: ${rpc.params[0]} is not supported!`));\n          return;\n      }\n      /*  web3-core-requestmanager doesn't respond to error event, so in thorify both \"data\" level and \"error\" level are emitted\n          by \"data\" event and will add subscriptionHandler to handle the message, regarding the process in request manager, the\n          format of data emitted is not the standard JSON-RPC format, so built to func makeSubResult and makeSubError to work with that\n      */\n\n\n      const ws = new WebSocket(this.WSHost + URI);\n\n      ws.onerror = event => {\n        debug('error from ws: %O', event);\n        this.emit('data', rpc.makeSubError(event.error ? event.error : 'Error from upstream'));\n      };\n\n      ws.onmessage = event => {\n        debug('[ws]message from ws: %O', event.data);\n\n        try {\n          // wrong type define of message, typeof message turns to be string\n          const obj = JSON.parse(event.data);\n          obj.removed = obj.obsolete;\n          delete obj.obsolete;\n          this.emit('data', rpc.makeSubResult(obj));\n        } catch (e) {\n          debug('Parse message failed %O', e);\n        }\n      };\n\n      ws.onopen = () => {\n        debug('[ws]opened');\n\n        ws.onclose = event => {\n          debug('[ws]close', event.code, event.reason);\n          let errMsg = 'Connection closed.';\n\n          if (event.code) {\n            errMsg += ' Error code: ' + event.code;\n          }\n\n          if (event.reason) {\n            errMsg += ' Error reason: ' + event.reason;\n          }\n\n          this.emit('data', rpc.makeSubError(new Error(errMsg)));\n        };\n      };\n\n      this.sockets[rpc.id] = {\n        rpc,\n        ws\n      };\n      callback(null, rpc.makeResult(rpc.id));\n      return;\n    } else {\n      if (this.sockets[rpc.params[0]]) {\n        const ws = this.sockets[rpc.params[0]].ws;\n\n        if (ws && ws.readyState === ws.OPEN) {\n          ws.close(); // clean up\n\n          if (ws.removeAllListeners) {\n            ws.removeAllListeners();\n          } else {\n            ws.onopen = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n            ws.onclose = null;\n          }\n\n          delete this.sockets[rpc.params[0]];\n          callback(null, rpc.makeResult(true));\n        } else {\n          delete this.sockets[rpc.params[0]];\n          callback(null, rpc.makeResult(true));\n        }\n      } else {\n        callback(null, rpc.makeResult(true));\n      }\n    }\n  }\n\n}\n\nexports.ThorProvider = ThorProvider;\n\nconst omitCallBackedPromise = function (callBackedRet) {\n  /*  when developer calling a method using promise,when error return from provider,the function in web3-core-method\n      will return a Promise in,it's ok when writing provider in callback mode but it will cause problems when\n      writing provider in Promise, this function is used to omit the rejected promise\n  */\n  if (callBackedRet && callBackedRet.catch) {\n    callBackedRet.catch(() => null);\n  }\n};","map":{"version":3,"mappings":"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","names":["debug","require","ThorProvider","eventemitter3_1","constructor","host","timeout","Error","hostURL","url_1","protocol","RESTHost","WSHost","replace","sockets","sendAsync","payload","callback","rpc","json_rpc_1","method","makeError","ManagerSubscription","rpc_methods_1","has","executor","get","then","ret","result","omitCallBackedPromise","catch","err","query","URI","params","options","key","value","Object","entries","QS","stringify","ws","WebSocket","onerror","event","emit","makeSubError","error","onmessage","data","obj","JSON","parse","removed","obsolete","makeSubResult","e","onopen","onclose","code","reason","errMsg","id","makeResult","readyState","OPEN","close","removeAllListeners","exports","callBackedRet"],"sourceRoot":"","sources":["../../src/provider/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}