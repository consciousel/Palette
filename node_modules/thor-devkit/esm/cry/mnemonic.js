import * as HD from '@vechain/ethers/utils/hdnode';
import { randomBytes } from 'crypto';
import { HDNode } from './hdnode';
export var mnemonic;
(function (mnemonic) {
    /**
     * generate BIP39 mnemonic words
     * @param rng the optional random number generator, which generates 16~32 (step 4) random bytes.
     * Every 4 bytes produce 3 words.
     */
    function generate(rng) {
        rng = rng || (() => randomBytes(128 / 8));
        return HD.entropyToMnemonic(rng()).split(' ');
    }
    mnemonic.generate = generate;
    /**
     * check if the given mnemonic words have valid checksum
     * @param words mnemonic words
     */
    function validate(words) {
        return HD.isValidMnemonic(words.join(' '));
    }
    mnemonic.validate = validate;
    /**
     * derive private key at index 0 from mnemonic words according to BIP32.
     * the derivation path is defined at https://github.com/satoshilabs/slips/blob/master/slip-0044.md
     */
    function derivePrivateKey(words) {
        return HDNode.fromMnemonic(words).derive(0).privateKey;
    }
    mnemonic.derivePrivateKey = derivePrivateKey;
})(mnemonic || (mnemonic = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW5lbW9uaWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY3J5L21uZW1vbmljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxFQUFFLE1BQU0sOEJBQThCLENBQUE7QUFDbEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFFBQVEsQ0FBQTtBQUNwQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBRWpDLE1BQU0sS0FBVyxRQUFRLENBMEJ4QjtBQTFCRCxXQUFpQixRQUFRO0lBQ3JCOzs7O09BSUc7SUFDSCxTQUFnQixRQUFRLENBQUMsR0FBa0I7UUFDdkMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUN6QyxPQUFPLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNqRCxDQUFDO0lBSGUsaUJBQVEsV0FHdkIsQ0FBQTtJQUVEOzs7T0FHRztJQUNILFNBQWdCLFFBQVEsQ0FBQyxLQUFlO1FBQ3BDLE9BQU8sRUFBRSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7SUFDOUMsQ0FBQztJQUZlLGlCQUFRLFdBRXZCLENBQUE7SUFFRDs7O09BR0c7SUFDSCxTQUFnQixnQkFBZ0IsQ0FBQyxLQUFlO1FBQzVDLE9BQU8sTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVyxDQUFBO0lBQzNELENBQUM7SUFGZSx5QkFBZ0IsbUJBRS9CLENBQUE7QUFDTCxDQUFDLEVBMUJnQixRQUFRLEtBQVIsUUFBUSxRQTBCeEIifQ==